2025-08-10 19:42:04  📨 收到 1 個事件
2025-08-10 19:42:04  📋 事件類型: message
2025-08-10 19:42:04  🔍 完整事件 JSON: {
2025-08-10 19:42:04    "type": "message",
2025-08-10 19:42:04    "message": {
2025-08-10 19:42:04      "type": "text",
2025-08-10 19:42:04      "text": "查詢Lumi的重複課程"
2025-08-10 19:42:04    },
2025-08-10 19:42:04    "source": {
2025-08-10 19:42:04      "userId": "U_test_user_qa",
2025-08-10 19:42:04      "type": "user"
2025-08-10 19:42:04    },
2025-08-10 19:42:04    "replyToken": "test-reply-token-1754854924200",
2025-08-10 19:42:04    "timestamp": 1754854924200
2025-08-10 19:42:04  }
2025-08-10 19:42:04  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:42:04  {"ts":"2025-08-10T19:42:04.374Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754854924374_bn6jtv","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 19:42:04  🔍 用戶ID類型: string
2025-08-10 19:42:04  🔍 是否測試用戶: true
2025-08-10 19:42:04  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:42:04  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 19:42:04  ✅ 規則匹配成功: query_schedule
2025-08-10 19:42:04  {"ts":"2025-08-10T19:42:04.516Z","lvl":"info","stage":"nlp","traceId":"line_1754854924374_bn6jtv","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 19:42:04  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 19:42:04  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:42:04  📊 規則提取置信度: 0.50
2025-08-10 19:42:04  🤖 啟用 AI 輔助提取...
2025-08-10 19:42:06  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 19:42:06  {"ts":"2025-08-10T19:42:06.182Z","lvl":"info","stage":"slots","traceId":"line_1754854924374_bn6jtv","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 19:42:06  🎯 執行任務: query_schedule
2025-08-10 19:42:06  🎯 開始處理查詢課表任務
2025-08-10 19:42:06  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 19:42:06  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 19:42:06  📚 查詢到 327 筆課程資料
2025-08-10 19:42:06  📚 查詢到 0 筆課程
2025-08-10 19:42:06  📊 任務執行結果: {
2025-08-10 19:42:06    success: true,
2025-08-10 19:42:06    code: 'QUERY_OK_EMPTY',
2025-08-10 19:42:06    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 19:42:06      '\n' +
2025-08-10 19:42:06      '💡 您可以：\n' +
2025-08-10 19:42:06      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 19:42:06      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 19:42:06      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 19:42:06    data: {
2025-08-10 19:42:06      courseCount: 0,
2025-08-10 19:42:06      dateRange: {
2025-08-10 19:42:06        startDate: '2025-08-10',
2025-08-10 19:42:06        endDate: '2025-08-16',
2025-08-10 19:42:06        description: '本週'
2025-08-10 19:42:06      }
2025-08-10 19:42:06    }
2025-08-10 19:42:06  }
2025-08-10 19:42:06  {"ts":"2025-08-10T19:42:06.541Z","lvl":"info","stage":"task","traceId":"line_1754854924374_bn6jtv","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":359}
2025-08-10 19:42:06  🔍 檢查 replyToken: test-reply-token-1754854924200
2025-08-10 19:42:06  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:42:06  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 19:42:06  
2025-08-10 19:42:06  💡 您可以：
2025-08-10 19:42:06  • 新增課程：「小明明天上午10點英文課」
2025-08-10 19:42:06  • 查詢其他時間：「小明下週的課表」
2025-08-10 19:42:06  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 19:42:06  {"ts":"2025-08-10T19:42:06.824Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754854924374_bn6jtv","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 19:42:19  📨 收到 1 個事件
2025-08-10 19:42:19  📋 事件類型: message
2025-08-10 19:42:19  🔍 完整事件 JSON: {
2025-08-10 19:42:19    "type": "message",
2025-08-10 19:42:19    "message": {
2025-08-10 19:42:19      "type": "text",
2025-08-10 19:42:19      "text": "今天小明的數學課學了分數加減法"
2025-08-10 19:42:19    },
2025-08-10 19:42:19    "source": {
2025-08-10 19:42:19      "userId": "U_test_user_qa",
2025-08-10 19:42:19      "type": "user"
2025-08-10 19:42:19    },
2025-08-10 19:42:19    "replyToken": "test-reply-token-1754854939328",
2025-08-10 19:42:19    "timestamp": 1754854939328
2025-08-10 19:42:19  }
2025-08-10 19:42:19  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:42:19  {"ts":"2025-08-10T19:42:19.503Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754854939503_e76yet","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 19:42:19  🔍 用戶ID類型: string
2025-08-10 19:42:19  🔍 是否測試用戶: true
2025-08-10 19:42:19  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:42:19  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 19:42:19  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:42:19  {"ts":"2025-08-10T19:42:19.645Z","lvl":"info","stage":"nlp","traceId":"line_1754854939503_e76yet","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:42:19  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:42:19  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:42:19  📊 規則提取置信度: 1.00
2025-08-10 19:42:19  🤖 啟用 AI 輔助提取...
2025-08-10 19:42:21  ✅ 最終 slots: {
2025-08-10 19:42:21    studentName: '小明',
2025-08-10 19:42:21    courseName: '數學課',
2025-08-10 19:42:21    timeReference: 'today',
2025-08-10 19:42:21    content: '分數加減法'
2025-08-10 19:42:21  }
2025-08-10 19:42:21  {"ts":"2025-08-10T19:42:21.012Z","lvl":"info","stage":"slots","traceId":"line_1754854939503_e76yet","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:42:21  🎯 執行任務: record_content
2025-08-10 19:42:21  📝 開始處理記錄課程內容任務: {
2025-08-10 19:42:21    studentName: '小明',
2025-08-10 19:42:21  ✅ 最終 slots: {
2025-08-10 19:42:21    studentName: '小明',
2025-08-10 19:42:21    courseName: '數學課',
2025-08-10 19:42:21    timeReference: 'today',
2025-08-10 19:42:21    content: '分數加減法'
2025-08-10 19:42:21  }
2025-08-10 19:42:21  {"ts":"2025-08-10T19:42:21.012Z","lvl":"info","stage":"slots","traceId":"line_1754854939503_e76yet","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:42:21  🎯 執行任務: record_content
2025-08-10 19:42:21  📝 開始處理記錄課程內容任務: {
2025-08-10 19:42:21    studentName: '小明',
2025-08-10 19:42:21    courseName: '數學課',
2025-08-10 19:42:21    timeReference: 'today',
2025-08-10 19:42:21    content: '分數加減法'
2025-08-10 19:42:21  }
2025-08-10 19:42:21  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 19:42:21  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 19:42:21  ✅ 文檔已添加到 course_contents: GaorRzWcmWynvdsmhMhS
2025-08-10 19:42:21  ✅ 課程內容記錄已儲存: GaorRzWcmWynvdsmhMhS
2025-08-10 19:42:21  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 19:42:21  📊 任務執行結果: {
2025-08-10 19:42:21    success: true,
2025-08-10 19:42:21    code: 'RECORD_CONTENT_OK',
2025-08-10 19:42:21    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 19:42:21    data: {
2025-08-10 19:42:21      recordId: 'GaorRzWcmWynvdsmhMhS',
2025-08-10 19:42:21      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 19:42:21      targetDate: '2025-08-10'
2025-08-10 19:42:21    }
2025-08-10 19:42:21  }
2025-08-10 19:42:21  {"ts":"2025-08-10T19:42:21.338Z","lvl":"info","stage":"task","traceId":"line_1754854939503_e76yet","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":325}
2025-08-10 19:42:21  🔍 檢查 replyToken: test-reply-token-1754854939328
2025-08-10 19:42:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:42:21  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:42:21  📚 課程：小明 - 數學課
2025-08-10 19:42:21  📅 日期：2025-08-10
2025-08-10 19:42:21  💬 內容：分數加減法
2025-08-10 19:42:21  {"ts":"2025-08-10T19:42:21.622Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754854939503_e76yet","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 19:42:34  📨 收到 1 個事件
2025-08-10 19:42:34  📋 事件類型: message
2025-08-10 19:42:34  🔍 完整事件 JSON: {
2025-08-10 19:42:34    "type": "message",
2025-08-10 19:42:34    "message": {
2025-08-10 19:42:34      "type": "text",
2025-08-10 19:42:34      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 19:42:34    },
2025-08-10 19:42:34    "source": {
2025-08-10 19:42:34      "userId": "U_test_user_qa",
2025-08-10 19:42:34      "type": "user"
2025-08-10 19:42:34    },
2025-08-10 19:42:34    "replyToken": "test-reply-token-1754854954172",
2025-08-10 19:42:34    "timestamp": 1754854954172
2025-08-10 19:42:34  }
2025-08-10 19:42:34  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:42:34  {"ts":"2025-08-10T19:42:34.450Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754854954450_95duvk","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 19:42:34  🔍 用戶ID類型: string
2025-08-10 19:42:34  🔍 是否測試用戶: true
2025-08-10 19:42:34  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:42:34  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 19:42:34  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:42:34  {"ts":"2025-08-10T19:42:34.592Z","lvl":"info","stage":"nlp","traceId":"line_1754854954450_95duvk","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:42:34  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:42:34  📊 規則提取置信度: 0.33
2025-08-10 19:42:34  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:42:35  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:42:35  {"ts":"2025-08-10T19:42:35.998Z","lvl":"info","stage":"slots","traceId":"line_1754854954450_95duvk","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 19:42:35  🎯 執行任務: record_content
2025-08-10 19:42:35  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:42:36  ✅ 文檔已添加到 course_contents: OKESoA6fG73PgerP3l1Z
2025-08-10 19:42:36  ✅ 課程內容記錄已儲存: OKESoA6fG73PgerP3l1Z
2025-08-10 19:42:36  📊 任務執行結果: {
2025-08-10 19:42:36    success: true,
2025-08-10 19:42:36    code: 'RECORD_CONTENT_OK',
2025-08-10 19:42:36    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 19:42:36    data: {
2025-08-10 19:42:36      recordId: 'OKESoA6fG73PgerP3l1Z',
2025-08-10 19:42:36      courseId: null,
2025-08-10 19:42:36      targetDate: '2025-08-09'
2025-08-10 19:42:36    }
2025-08-10 19:42:36  }
2025-08-10 19:42:36  {"ts":"2025-08-10T19:42:36.064Z","lvl":"info","stage":"task","traceId":"line_1754854954450_95duvk","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":65}
2025-08-10 19:42:36  🔍 檢查 replyToken: test-reply-token-1754854954172
2025-08-10 19:42:36  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:42:36  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:42:36  📝 記錄為獨立內容
2025-08-10 19:42:36  📚 課程：鋼琴課
2025-08-10 19:42:36  📅 日期：2025-08-09
2025-08-10 19:42:36  💬 內容：練習了小星星
2025-08-10 19:42:36  {"ts":"2025-08-10T19:42:36.346Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754854954450_95duvk","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 19:42:49  📨 收到 1 個事件
2025-08-10 19:42:49  📋 事件類型: message
2025-08-10 19:42:49  🔍 完整事件 JSON: {
2025-08-10 19:42:49    "type": "message",
2025-08-10 19:42:49    "message": {
2025-08-10 19:42:49      "type": "text",
2025-08-10 19:42:49      "text": "小明昨天數學課學了什麼？"
2025-08-10 19:42:49    },
2025-08-10 19:42:49    "source": {
2025-08-10 19:42:49      "userId": "U_test_user_qa",
2025-08-10 19:42:49      "type": "user"
2025-08-10 19:42:49    },
2025-08-10 19:42:49  📨 收到 1 個事件
2025-08-10 19:42:49  📋 事件類型: message
2025-08-10 19:42:49  🔍 完整事件 JSON: {
2025-08-10 19:42:49    "type": "message",
2025-08-10 19:42:49    "message": {
2025-08-10 19:42:49      "type": "text",
2025-08-10 19:42:49      "text": "小明昨天數學課學了什麼？"
2025-08-10 19:42:49    },
2025-08-10 19:42:49    "source": {
2025-08-10 19:42:49      "userId": "U_test_user_qa",
2025-08-10 19:42:49      "type": "user"
2025-08-10 19:42:49    },
2025-08-10 19:42:49    "replyToken": "test-reply-token-1754854968813",
2025-08-10 19:42:49    "timestamp": 1754854968813
2025-08-10 19:42:49  }
2025-08-10 19:42:49  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:42:49  {"ts":"2025-08-10T19:42:49.091Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754854969091_qs53fy","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 19:42:49  🔍 用戶ID類型: string
2025-08-10 19:42:49  🔍 是否測試用戶: true
2025-08-10 19:42:49  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:42:49  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 19:42:49  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:42:49  {"ts":"2025-08-10T19:42:49.232Z","lvl":"info","stage":"nlp","traceId":"line_1754854969091_qs53fy","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:42:49  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:42:49  📊 規則提取置信度: 0.67
2025-08-10 19:42:49  🤖 啟用 AI 輔助提取...
2025-08-10 19:42:50  ✅ 最終 slots: {
2025-08-10 19:42:50    studentName: '小明',
2025-08-10 19:42:50    courseName: '數學課',
2025-08-10 19:42:50    timeReference: 'yesterday',
2025-08-10 19:42:50    content: '什麼？'
2025-08-10 19:42:50  }
2025-08-10 19:42:50  {"ts":"2025-08-10T19:42:50.686Z","lvl":"info","stage":"slots","traceId":"line_1754854969091_qs53fy","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:42:50  🎯 執行任務: record_content
2025-08-10 19:42:50  📝 開始處理記錄課程內容任務: {
2025-08-10 19:42:50    studentName: '小明',
2025-08-10 19:42:50    courseName: '數學課',
2025-08-10 19:42:50    timeReference: 'yesterday',
2025-08-10 19:42:50    content: '什麼？'
2025-08-10 19:42:50  }
2025-08-10 19:42:50  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 19:42:50  ❓ 未找到完全匹配的課程
2025-08-10 19:42:50  ✅ 文檔已添加到 course_contents: 1C8l0SDYfVTCvxs21cgi
2025-08-10 19:42:50  ✅ 課程內容記錄已儲存: 1C8l0SDYfVTCvxs21cgi
2025-08-10 19:42:50  📊 任務執行結果: {
2025-08-10 19:42:50    success: true,
2025-08-10 19:42:50    code: 'RECORD_CONTENT_OK',
2025-08-10 19:42:50    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 19:42:50    data: {
2025-08-10 19:42:50      recordId: '1C8l0SDYfVTCvxs21cgi',
2025-08-10 19:42:50      courseId: null,
2025-08-10 19:42:50      targetDate: '2025-08-09'
2025-08-10 19:42:50    }
2025-08-10 19:42:50  }
2025-08-10 19:42:50  {"ts":"2025-08-10T19:42:50.908Z","lvl":"info","stage":"task","traceId":"line_1754854969091_qs53fy","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":222}
2025-08-10 19:42:51  🔍 檢查 replyToken: test-reply-token-1754854968813
2025-08-10 19:42:51  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:42:51  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:42:51  📝 記錄為獨立內容
2025-08-10 19:42:51  👨‍🎓 學生：小明
2025-08-10 19:42:51  📚 課程：數學課
2025-08-10 19:42:51  📅 日期：2025-08-09
2025-08-10 19:42:51  💬 內容：什麼？
2025-08-10 19:42:51  {"ts":"2025-08-10T19:42:51.192Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754854969091_qs53fy","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 19:42:58  📨 收到 1 個事件
2025-08-10 19:42:58  📋 事件類型: message
2025-08-10 19:42:58  🔍 完整事件 JSON: {
2025-08-10 19:42:58    "type": "message",
2025-08-10 19:42:58    "message": {
2025-08-10 19:42:58      "type": "text",
2025-08-10 19:42:58      "text": "記錄小明今天化學課的內容"
2025-08-10 19:42:58    },
2025-08-10 19:42:58    "source": {
2025-08-10 19:42:58      "userId": "U_test_user_qa",
2025-08-10 19:42:58      "type": "user"
2025-08-10 19:42:58    },
2025-08-10 19:42:58    "replyToken": "test-reply-token-1754854978081",
2025-08-10 19:42:58    "timestamp": 1754854978081
2025-08-10 19:42:58  }
2025-08-10 19:42:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:42:58  {"ts":"2025-08-10T19:42:58.363Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754854978363_91yeuo","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 19:42:58  🔍 用戶ID類型: string
2025-08-10 19:42:58  🔍 是否測試用戶: true
2025-08-10 19:42:58  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:42:58  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 19:42:58  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:42:58  {"ts":"2025-08-10T19:42:58.503Z","lvl":"info","stage":"nlp","traceId":"line_1754854978363_91yeuo","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:42:58  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:42:58  📊 規則提取置信度: 0.67
2025-08-10 19:42:58  🤖 啟用 AI 輔助提取...
2025-08-10 19:43:00  ✅ 最終 slots: {
2025-08-10 19:43:00    studentName: '小明',
2025-08-10 19:43:00    courseName: '化學課',
2025-08-10 19:43:00    timeReference: 'today',
2025-08-10 19:43:00    content: '小明今天化學課的內容'
2025-08-10 19:43:00  }
2025-08-10 19:43:00  {"ts":"2025-08-10T19:43:00.498Z","lvl":"info","stage":"slots","traceId":"line_1754854978363_91yeuo","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:43:00  🎯 執行任務: record_content
2025-08-10 19:43:00  📝 開始處理記錄課程內容任務: {
2025-08-10 19:43:00    studentName: '小明',
2025-08-10 19:43:00  ✅ 最終 slots: {
2025-08-10 19:43:00    studentName: '小明',
2025-08-10 19:43:00    courseName: '化學課',
2025-08-10 19:43:00    timeReference: 'today',
2025-08-10 19:43:00    content: '小明今天化學課的內容'
2025-08-10 19:43:00  }
2025-08-10 19:43:00  {"ts":"2025-08-10T19:43:00.498Z","lvl":"info","stage":"slots","traceId":"line_1754854978363_91yeuo","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:43:00  🎯 執行任務: record_content
2025-08-10 19:43:00  📝 開始處理記錄課程內容任務: {
2025-08-10 19:43:00    studentName: '小明',
2025-08-10 19:43:00    courseName: '化學課',
2025-08-10 19:43:00    timeReference: 'today',
2025-08-10 19:43:00    content: '小明今天化學課的內容'
2025-08-10 19:43:00  }
2025-08-10 19:43:00  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 19:43:00  ❓ 未找到完全匹配的課程
2025-08-10 19:43:00  ✅ 文檔已添加到 course_contents: 5iM29ClS305cghQbPHJJ
2025-08-10 19:43:00  ✅ 課程內容記錄已儲存: 5iM29ClS305cghQbPHJJ
2025-08-10 19:43:00  📊 任務執行結果: {
2025-08-10 19:43:00    success: true,
2025-08-10 19:43:00    code: 'RECORD_CONTENT_OK',
2025-08-10 19:43:00    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 19:43:00      '📝 記錄為獨立內容\n' +
2025-08-10 19:43:00      '👨‍🎓 學生：小明\n' +
2025-08-10 19:43:00      '📚 課程：化學課\n' +
2025-08-10 19:43:00      '📅 日期：2025-08-10\n' +
2025-08-10 19:43:00      '💬 內容：小明今天化學課的內容',
2025-08-10 19:43:00    data: {
2025-08-10 19:43:00      recordId: '5iM29ClS305cghQbPHJJ',
2025-08-10 19:43:00      courseId: null,
2025-08-10 19:43:00      targetDate: '2025-08-10'
2025-08-10 19:43:00    }
2025-08-10 19:43:00  }
2025-08-10 19:43:00  {"ts":"2025-08-10T19:43:00.863Z","lvl":"info","stage":"task","traceId":"line_1754854978363_91yeuo","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":365}
2025-08-10 19:43:01  🔍 檢查 replyToken: test-reply-token-1754854978081
2025-08-10 19:43:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:43:01  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:43:01  📝 記錄為獨立內容
2025-08-10 19:43:01  👨‍🎓 學生：小明
2025-08-10 19:43:01  📚 課程：化學課
2025-08-10 19:43:01  📅 日期：2025-08-10
2025-08-10 19:43:01  💬 內容：小明今天化學課的內容
2025-08-10 19:43:01  {"ts":"2025-08-10T19:43:01.146Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754854978363_91yeuo","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 19:43:14  📨 收到 1 個事件
2025-08-10 19:43:14  📋 事件類型: message
2025-08-10 19:43:14  🔍 完整事件 JSON: {
2025-08-10 19:43:14    "type": "message",
2025-08-10 19:43:14    "message": {
2025-08-10 19:43:14      "type": "text",
2025-08-10 19:43:14      "text": "提醒我小明的數學課"
2025-08-10 19:43:14    },
2025-08-10 19:43:14    "source": {
2025-08-10 19:43:14      "userId": "U_test_user_qa",
2025-08-10 19:43:14      "type": "user"
2025-08-10 19:43:14    },
2025-08-10 19:43:14    "replyToken": "test-reply-token-1754854993881",
2025-08-10 19:43:14    "timestamp": 1754854993881
2025-08-10 19:43:14  }
2025-08-10 19:43:14  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:43:14  {"ts":"2025-08-10T19:43:14.158Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754854994158_mzj3r6","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 19:43:14  🔍 用戶ID類型: string
2025-08-10 19:43:14  🔍 是否測試用戶: true
2025-08-10 19:43:14  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:43:14  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 19:43:14  ✅ 規則匹配成功: set_reminder
2025-08-10 19:43:14  {"ts":"2025-08-10T19:43:14.299Z","lvl":"info","stage":"nlp","traceId":"line_1754854994158_mzj3r6","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:43:14  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:43:14  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:43:14  📊 規則提取置信度: 0.67
2025-08-10 19:43:14  🤖 啟用 AI 輔助提取...
2025-08-10 19:43:15  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:43:15  {"ts":"2025-08-10T19:43:15.598Z","lvl":"info","stage":"slots","traceId":"line_1754854994158_mzj3r6","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:43:15  🎯 執行任務: set_reminder
2025-08-10 19:43:15  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:43:15  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 19:43:15  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 19:43:15  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 19:43:15  ✅ 提醒記錄已創建: 9rXsBthTiBw193NF79G4
2025-08-10 19:43:15  ✅ 提醒設定成功: 9rXsBthTiBw193NF79G4
2025-08-10 19:43:15  📊 任務執行結果: {
2025-08-10 19:43:15    success: true,
2025-08-10 19:43:15    code: 'REMINDER_SET_OK',
2025-08-10 19:43:15    message: '✅ 提醒設定完成！\n' +
2025-08-10 19:43:15      '📚 課程：小明 的 數學課\n' +
2025-08-10 19:43:15      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 19:43:15      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 19:43:15  }
2025-08-10 19:43:15  {"ts":"2025-08-10T19:43:15.881Z","lvl":"info","stage":"task","traceId":"line_1754854994158_mzj3r6","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":283}
2025-08-10 19:43:16  🔍 檢查 replyToken: test-reply-token-1754854993881
2025-08-10 19:43:16  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:43:16  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 19:43:16  📚 課程：小明 的 數學課
2025-08-10 19:43:16  📅 上課時間：8/11 下午02:00
2025-08-10 19:43:16  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 19:43:16  {"ts":"2025-08-10T19:43:16.167Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754854994158_mzj3r6","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 19:43:29  📨 收到 1 個事件
2025-08-10 19:43:29  📋 事件類型: message
2025-08-10 19:43:29  🔍 完整事件 JSON: {
2025-08-10 19:43:29    "type": "message",
2025-08-10 19:43:29    "message": {
2025-08-10 19:43:29  📨 收到 1 個事件
2025-08-10 19:43:29  📋 事件類型: message
2025-08-10 19:43:29  🔍 完整事件 JSON: {
2025-08-10 19:43:29    "type": "message",
2025-08-10 19:43:29    "message": {
2025-08-10 19:43:29      "type": "text",
2025-08-10 19:43:29      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 19:43:29    },
2025-08-10 19:43:29    "source": {
2025-08-10 19:43:29      "userId": "U_test_user_qa",
2025-08-10 19:43:29      "type": "user"
2025-08-10 19:43:29    },
2025-08-10 19:43:29    "replyToken": "test-reply-token-1754855009152",
2025-08-10 19:43:29    "timestamp": 1754855009152
2025-08-10 19:43:29  }
2025-08-10 19:43:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:43:29  {"ts":"2025-08-10T19:43:29.319Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855009319_zlkluw","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 19:43:29  🔍 用戶ID類型: string
2025-08-10 19:43:29  🔍 是否測試用戶: true
2025-08-10 19:43:29  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:43:29  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 19:43:29  ✅ 規則匹配成功: set_reminder
2025-08-10 19:43:29  {"ts":"2025-08-10T19:43:29.461Z","lvl":"info","stage":"nlp","traceId":"line_1754855009319_zlkluw","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:43:29  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:43:29  📊 規則提取置信度: 0.67
2025-08-10 19:43:29  🤖 啟用 AI 輔助提取...
2025-08-10 19:43:30  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:43:30  {"ts":"2025-08-10T19:43:30.676Z","lvl":"info","stage":"slots","traceId":"line_1754855009319_zlkluw","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 19:43:30  🎯 執行任務: set_reminder
2025-08-10 19:43:30  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:43:30  📊 任務執行結果: {
2025-08-10 19:43:30    success: false,
2025-08-10 19:43:30    code: 'MISSING_STUDENT',
2025-08-10 19:43:30    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 19:43:30  }
2025-08-10 19:43:30  {"ts":"2025-08-10T19:43:30.676Z","lvl":"info","stage":"task","traceId":"line_1754855009319_zlkluw","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 19:43:30  🔍 檢查 replyToken: test-reply-token-1754855009152
2025-08-10 19:43:30  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:43:30  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 19:43:30  {"ts":"2025-08-10T19:43:30.959Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855009319_zlkluw","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 19:43:43  📨 收到 1 個事件
2025-08-10 19:43:43  📋 事件類型: message
2025-08-10 19:43:43  🔍 完整事件 JSON: {
2025-08-10 19:43:43    "type": "message",
2025-08-10 19:43:43    "message": {
2025-08-10 19:43:43      "type": "text",
2025-08-10 19:43:43      "text": "提醒我小明的物理課"
2025-08-10 19:43:43    },
2025-08-10 19:43:43    "source": {
2025-08-10 19:43:43      "userId": "U_test_user_qa",
2025-08-10 19:43:43      "type": "user"
2025-08-10 19:43:43    },
2025-08-10 19:43:43    "replyToken": "test-reply-token-1754855023745",
2025-08-10 19:43:43    "timestamp": 1754855023745
2025-08-10 19:43:43  }
2025-08-10 19:43:43  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:43:44  {"ts":"2025-08-10T19:43:44.021Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855024021_azoraa","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 19:43:44  🔍 用戶ID類型: string
2025-08-10 19:43:44  🔍 是否測試用戶: true
2025-08-10 19:43:44  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:43:44  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 19:43:44  ✅ 規則匹配成功: set_reminder
2025-08-10 19:43:44  {"ts":"2025-08-10T19:43:44.162Z","lvl":"info","stage":"nlp","traceId":"line_1754855024021_azoraa","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:43:44  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:43:44  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:43:44  📊 規則提取置信度: 0.67
2025-08-10 19:43:44  🤖 啟用 AI 輔助提取...
2025-08-10 19:43:45  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:43:45  {"ts":"2025-08-10T19:43:45.408Z","lvl":"info","stage":"slots","traceId":"line_1754855024021_azoraa","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:43:45  🎯 執行任務: set_reminder
2025-08-10 19:43:45  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:43:45  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 19:43:45  📊 任務執行結果: {
2025-08-10 19:43:45    success: false,
2025-08-10 19:43:45    code: 'NOT_FOUND',
2025-08-10 19:43:45    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 19:43:45  }
2025-08-10 19:43:45  {"ts":"2025-08-10T19:43:45.490Z","lvl":"info","stage":"task","traceId":"line_1754855024021_azoraa","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":82}
2025-08-10 19:43:45  🔍 檢查 replyToken: test-reply-token-1754855023745
2025-08-10 19:43:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:43:45  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 19:43:45  {"ts":"2025-08-10T19:43:45.774Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855024021_azoraa","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 19:43:58  📨 收到 1 個事件
2025-08-10 19:43:58  📋 事件類型: message
2025-08-10 19:43:58  🔍 完整事件 JSON: {
2025-08-10 19:43:58    "type": "message",
2025-08-10 19:43:58    "message": {
2025-08-10 19:43:58      "type": "text",
2025-08-10 19:43:58      "text": "小明的數學課改到下午4點"
2025-08-10 19:43:58    },
2025-08-10 19:43:58    "source": {
2025-08-10 19:43:58      "userId": "U_test_user_qa",
2025-08-10 19:43:58      "type": "user"
2025-08-10 19:43:58    },
2025-08-10 19:43:58    "replyToken": "test-reply-token-1754855038472",
2025-08-10 19:43:58    "timestamp": 1754855038472
2025-08-10 19:43:58  }
2025-08-10 19:43:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:43:58  {"ts":"2025-08-10T19:43:58.717Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855038717_g49gww","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 19:43:58  🔍 用戶ID類型: string
2025-08-10 19:43:58  📨 收到 1 個事件
2025-08-10 19:43:58  📋 事件類型: message
2025-08-10 19:43:58  🔍 完整事件 JSON: {
2025-08-10 19:43:58    "type": "message",
2025-08-10 19:43:58    "message": {
2025-08-10 19:43:58      "type": "text",
2025-08-10 19:43:58      "text": "小明的數學課改到下午4點"
2025-08-10 19:43:58    },
2025-08-10 19:43:58    "source": {
2025-08-10 19:43:58      "userId": "U_test_user_qa",
2025-08-10 19:43:58      "type": "user"
2025-08-10 19:43:58    },
2025-08-10 19:43:58    "replyToken": "test-reply-token-1754855038472",
2025-08-10 19:43:58    "timestamp": 1754855038472
2025-08-10 19:43:58  }
2025-08-10 19:43:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:43:58  {"ts":"2025-08-10T19:43:58.717Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855038717_g49gww","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 19:43:58  🔍 用戶ID類型: string
2025-08-10 19:43:58  🔍 是否測試用戶: true
2025-08-10 19:43:58  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:43:58  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 19:43:58  ✅ 規則匹配成功: modify_course
2025-08-10 19:43:58  {"ts":"2025-08-10T19:43:58.858Z","lvl":"info","stage":"nlp","traceId":"line_1754855038717_g49gww","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 19:43:59  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 19:43:59  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 19:43:59  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:43:59  📊 規則提取置信度: 0.00
2025-08-10 19:43:59  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:44:00  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 19:44:00  {"ts":"2025-08-10T19:44:00.225Z","lvl":"info","stage":"slots","traceId":"line_1754855038717_g49gww","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 19:44:00  🎯 執行任務: modify_course
2025-08-10 19:44:00  ✏️ 執行修改操作任務: {
2025-08-10 19:44:00    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 19:44:00    userId: 'U_test_user_qa'
2025-08-10 19:44:00  }
2025-08-10 19:44:00  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 19:44:00  {"ts":"2025-08-10T19:44:00.296Z","lvl":"info","stage":"task","traceId":"line_1754855038717_g49gww","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 19:44:00  🔍 檢查 replyToken: test-reply-token-1754855038472
2025-08-10 19:44:00  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:44:00  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 19:44:00  {"ts":"2025-08-10T19:44:00.579Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855038717_g49gww","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 19:44:13  📨 收到 1 個事件
2025-08-10 19:44:13  📋 事件類型: message
2025-08-10 19:44:13  🔍 完整事件 JSON: {
2025-08-10 19:44:13    "type": "message",
2025-08-10 19:44:13    "message": {
2025-08-10 19:44:13      "type": "text",
2025-08-10 19:44:13      "text": "小明每天的晨練課改到早上7點"
2025-08-10 19:44:13    },
2025-08-10 19:44:13    "source": {
2025-08-10 19:44:13      "userId": "U_test_user_qa",
2025-08-10 19:44:13      "type": "user"
2025-08-10 19:44:13    },
2025-08-10 19:44:13    "replyToken": "test-reply-token-1754855053024",
2025-08-10 19:44:13    "timestamp": 1754855053024
2025-08-10 19:44:13  }
2025-08-10 19:44:13  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:44:13  {"ts":"2025-08-10T19:44:13.207Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 19:44:13  🔍 用戶ID類型: string
2025-08-10 19:44:13  🔍 是否測試用戶: true
2025-08-10 19:44:13  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:44:13  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 19:44:13  ✅ 規則匹配成功: create_recurring_course
2025-08-10 19:44:13  {"ts":"2025-08-10T19:44:13.349Z","lvl":"info","stage":"nlp","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 19:44:13  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 19:44:13  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 19:44:13  ✅ 時間解析成功: {
2025-08-10 19:44:13    input: '小明每天的晨練課改到早上7點',
2025-08-10 19:44:13    output: '07:00',
2025-08-10 19:44:13    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 19:44:13  }
2025-08-10 19:44:13  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:44:13  📊 規則提取置信度: 0.67
2025-08-10 19:44:13  🤖 啟用 AI 輔助提取...
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
2025-08-10 19:44:15  ✅ 最終 slots: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  {"ts":"2025-08-10T19:44:15.182Z","lvl":"info","stage":"slots","traceId":"line_1754855053207_zrx95l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:44:15  🎯 執行任務: create_recurring_course
2025-08-10 19:44:15  🎯 開始處理新增課程任務
2025-08-10 19:44:15  📋 接收參數: {
2025-08-10 19:44:15    studentName: '小明',
2025-08-10 19:44:15    courseName: '晨練課',
2025-08-10 19:44:15    scheduleTime: '07:00',
2025-08-10 19:44:15    recurring: true
2025-08-10 19:44:15  }
2025-08-10 19:44:15  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 19:44:15  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:44:15      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:44:15      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:44:15      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:44:15      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:44:15      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:44:15      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:44:15      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:44:15      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:44:15      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:44:15      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:44:15    config: {
2025-08-10 19:44:15      url: URL {
2025-08-10 19:44:15        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        origin: 'https://www.googleapis.com',
2025-08-10 19:44:15        protocol: 'https:',
2025-08-10 19:44:15        username: '',
2025-08-10 19:44:15        password: '',
2025-08-10 19:44:15        host: 'www.googleapis.com',
2025-08-10 19:44:15        hostname: 'www.googleapis.com',
2025-08-10 19:44:15        port: '',
2025-08-10 19:44:15        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 19:44:15        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:44:15        searchParams: URLSearchParams {
2025-08-10 19:44:15          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15          'singleEvents' => 'true',
2025-08-10 19:44:15          'orderBy' => 'startTime' },
2025-08-10 19:44:15        hash: ''
2025-08-10 19:44:15      },
2025-08-10 19:44:15      method: 'GET',
2025-08-10 19:44:15      apiVersion: '',
2025-08-10 19:44:15      userAgentDirectives: [ [Object] ],
2025-08-10 19:44:15      paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15      headers: Headers {
2025-08-10 19:44:15        'accept-encoding': 'gzip',
2025-08-10 19:44:15        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15      },
2025-08-10 19:44:15      params: {
2025-08-10 19:44:15        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:44:15        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:44:15        singleEvents: true,
2025-08-10 19:44:15        orderBy: 'startTime'
2025-08-10 19:44:15  📝 準備建立事件: calendarId= b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] 小明 - 晨練課","description":"小明的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T07:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T08:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"小明","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 19:44:15      },
2025-08-10 19:44:15      validateStatus: [Function (anonymous)],
2025-08-10 19:44:15      retry: true,
2025-08-10 19:44:15      responseType: 'unknown',
2025-08-10 19:44:15      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:44:15      retryConfig: {
2025-08-10 19:44:15        currentRetryAttempt: 0,
2025-08-10 19:44:15        retry: 3,
2025-08-10 19:44:15        httpMethodsToRetry: [Array],
2025-08-10 19:44:15        noResponseRetries: 2,
2025-08-10 19:44:15        retryDelayMultiplier: 2,
2025-08-10 19:44:15        timeOfFirstRequest: 1754855055657,
2025-08-10 19:44:15        totalTimeout: 9007199254740991,
2025-08-10 19:44:15        maxRetryDelay: 9007199254740991,
2025-08-10 19:44:15        statusCodesToRetry: [Array]
2025-08-10 19:44:15      }
2025-08-10 19:44:15    },
2025-08-10 19:44:15    response: Response {
2025-08-10 19:44:15      size: 0,
2025-08-10 19:44:15      data: { error: [Object] },
2025-08-10 19:44:15      config: {
2025-08-10 19:44:15        url: URL {},
2025-08-10 19:44:15        method: 'GET',
2025-08-10 19:44:15        apiVersion: '',
2025-08-10 19:44:15        userAgentDirectives: [Array],
2025-08-10 19:44:15        paramsSerializer: [Function (anonymous)],
2025-08-10 19:44:15        headers: Headers {
2025-08-10 19:44:15          'accept-encoding': 'gzip',
2025-08-10 19:44:15          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:44:15          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:44:15          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:44:15        },
2025-08-10 19:44:15        params: [Object],
2025-08-10 19:44:15        validateStatus: [Function (anonymous)],
2025-08-10 19:44:15        retry: true,
2025-08-10 19:44:15        responseType: 'unknown',
2025-08-10 19:44:15        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:44:15      },
