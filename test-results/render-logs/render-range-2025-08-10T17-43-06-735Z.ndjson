2025-08-10 17:28:13  📨 收到 1 個事件
2025-08-10 17:28:13  📋 事件類型: message
2025-08-10 17:28:13  🔍 完整事件 JSON: {
2025-08-10 17:28:13    "type": "message",
2025-08-10 17:28:13    "message": {
2025-08-10 17:28:13      "type": "text",
2025-08-10 17:28:13      "text": "今天小明的數學課學了分數加減法"
2025-08-10 17:28:13    },
2025-08-10 17:28:13    "source": {
2025-08-10 17:28:13      "userId": "U_test_user_qa",
2025-08-10 17:28:13      "type": "user"
2025-08-10 17:28:13    },
2025-08-10 17:28:13    "replyToken": "test-reply-token-1754846893576",
2025-08-10 17:28:13    "timestamp": 1754846893576
2025-08-10 17:28:13  }
2025-08-10 17:28:13  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:28:13  {"ts":"2025-08-10T17:28:13.738Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846893738_lrzjva","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 17:28:13  🔍 用戶ID類型: string
2025-08-10 17:28:13  🔍 是否測試用戶: true
2025-08-10 17:28:13  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:28:13  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 17:28:13  📝 內容記錄優先規則命中 → record_content
2025-08-10 17:28:13  {"ts":"2025-08-10T17:28:13.879Z","lvl":"info","stage":"nlp","traceId":"line_1754846893738_lrzjva","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 17:28:14  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 17:28:14  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:28:14  📊 規則提取置信度: 1.00
2025-08-10 17:28:14  🤖 啟用 AI 輔助提取...
2025-08-10 17:28:15  ✅ 最終 slots: {
2025-08-10 17:28:15    studentName: '小明',
2025-08-10 17:28:15    courseName: '數學課',
2025-08-10 17:28:15    timeReference: 'today',
2025-08-10 17:28:15    content: '分數加減法'
2025-08-10 17:28:15  }
2025-08-10 17:28:15  {"ts":"2025-08-10T17:28:15.654Z","lvl":"info","stage":"slots","traceId":"line_1754846893738_lrzjva","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 17:28:15  🎯 執行任務: record_content
2025-08-10 17:28:15  📝 開始處理記錄課程內容任務: {
2025-08-10 17:28:15    studentName: '小明',
2025-08-10 17:28:15    courseName: '數學課',
2025-08-10 17:28:15    timeReference: 'today',
2025-08-10 17:28:15    content: '分數加減法'
2025-08-10 17:28:15  }
2025-08-10 17:28:15  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 17:28:15  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 17:28:15  ✅ 文檔已添加到 course_contents: QW4lbJOysT4kdafC9ZUL
2025-08-10 17:28:15  ✅ 課程內容記錄已儲存: QW4lbJOysT4kdafC9ZUL
2025-08-10 17:28:16  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 17:28:16  📊 任務執行結果: {
2025-08-10 17:28:16    success: true,
2025-08-10 17:28:16    code: 'RECORD_CONTENT_OK',
2025-08-10 17:28:16    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 17:28:16    data: {
2025-08-10 17:28:16      recordId: 'QW4lbJOysT4kdafC9ZUL',
2025-08-10 17:28:16      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 17:28:16      targetDate: '2025-08-10'
2025-08-10 17:28:16    }
2025-08-10 17:28:16  }
2025-08-10 17:28:16  {"ts":"2025-08-10T17:28:16.050Z","lvl":"info","stage":"task","traceId":"line_1754846893738_lrzjva","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":396}
2025-08-10 17:28:16  🔍 檢查 replyToken: test-reply-token-1754846893576
2025-08-10 17:28:16  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:28:16  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 17:28:16  📚 課程：小明 - 數學課
2025-08-10 17:28:16  📅 日期：2025-08-10
2025-08-10 17:28:16  💬 內容：分數加減法
2025-08-10 17:28:16  {"ts":"2025-08-10T17:28:16.364Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846893738_lrzjva","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 17:28:29  📨 收到 1 個事件
2025-08-10 17:28:29  📋 事件類型: message
2025-08-10 17:28:29  🔍 完整事件 JSON: {
2025-08-10 17:28:29    "type": "message",
2025-08-10 17:28:29    "message": {
2025-08-10 17:28:29      "type": "text",
2025-08-10 17:28:29      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 17:28:29    },
2025-08-10 17:28:29    "source": {
2025-08-10 17:28:29      "userId": "U_test_user_qa",
2025-08-10 17:28:29      "type": "user"
2025-08-10 17:28:29    },
2025-08-10 17:28:29    "replyToken": "test-reply-token-1754846909012",
2025-08-10 17:28:29    "timestamp": 1754846909012
2025-08-10 17:28:29  }
2025-08-10 17:28:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:28:29  {"ts":"2025-08-10T17:28:29.288Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846909288_ce6snx","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 17:28:29  🔍 用戶ID類型: string
2025-08-10 17:28:29  🔍 是否測試用戶: true
2025-08-10 17:28:29  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:28:29  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 17:28:29  📝 內容記錄優先規則命中 → record_content
2025-08-10 17:28:29  {"ts":"2025-08-10T17:28:29.430Z","lvl":"info","stage":"nlp","traceId":"line_1754846909288_ce6snx","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 17:28:29  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 17:28:29  📊 規則提取置信度: 0.33
2025-08-10 17:28:29  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 17:28:31  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 17:28:31  {"ts":"2025-08-10T17:28:31.020Z","lvl":"info","stage":"slots","traceId":"line_1754846909288_ce6snx","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 17:28:31  🎯 執行任務: record_content
2025-08-10 17:28:31  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 17:28:31  ✅ 文檔已添加到 course_contents: s3UtESoOnuvZ3RMMLtWw
2025-08-10 17:28:31  ✅ 課程內容記錄已儲存: s3UtESoOnuvZ3RMMLtWw
2025-08-10 17:28:31  📊 任務執行結果: {
2025-08-10 17:28:31    success: true,
2025-08-10 17:28:31    code: 'RECORD_CONTENT_OK',
2025-08-10 17:28:31    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 17:28:31  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 17:28:31  {"ts":"2025-08-10T17:28:31.020Z","lvl":"info","stage":"slots","traceId":"line_1754846909288_ce6snx","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 17:28:31  🎯 執行任務: record_content
2025-08-10 17:28:31  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 17:28:31  ✅ 文檔已添加到 course_contents: s3UtESoOnuvZ3RMMLtWw
2025-08-10 17:28:31  ✅ 課程內容記錄已儲存: s3UtESoOnuvZ3RMMLtWw
2025-08-10 17:28:31  📊 任務執行結果: {
2025-08-10 17:28:31    success: true,
2025-08-10 17:28:31    code: 'RECORD_CONTENT_OK',
2025-08-10 17:28:31    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 17:28:31    data: {
2025-08-10 17:28:31      recordId: 's3UtESoOnuvZ3RMMLtWw',
2025-08-10 17:28:31      courseId: null,
2025-08-10 17:28:31      targetDate: '2025-08-09'
2025-08-10 17:28:31    }
2025-08-10 17:28:31  }
2025-08-10 17:28:31  {"ts":"2025-08-10T17:28:31.098Z","lvl":"info","stage":"task","traceId":"line_1754846909288_ce6snx","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":78}
2025-08-10 17:28:31  🔍 檢查 replyToken: test-reply-token-1754846909012
2025-08-10 17:28:31  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:28:31  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 17:28:31  📝 記錄為獨立內容
2025-08-10 17:28:31  📚 課程：鋼琴課
2025-08-10 17:28:31  📅 日期：2025-08-09
2025-08-10 17:28:31  💬 內容：練習了小星星
2025-08-10 17:28:31  {"ts":"2025-08-10T17:28:31.383Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846909288_ce6snx","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 17:28:44  📨 收到 1 個事件
2025-08-10 17:28:44  📋 事件類型: message
2025-08-10 17:28:44  🔍 完整事件 JSON: {
2025-08-10 17:28:44    "type": "message",
2025-08-10 17:28:44    "message": {
2025-08-10 17:28:44      "type": "text",
2025-08-10 17:28:44      "text": "小明昨天數學課學了什麼？"
2025-08-10 17:28:44    },
2025-08-10 17:28:44    "source": {
2025-08-10 17:28:44      "userId": "U_test_user_qa",
2025-08-10 17:28:44      "type": "user"
2025-08-10 17:28:44    },
2025-08-10 17:28:44    "replyToken": "test-reply-token-1754846924895",
2025-08-10 17:28:44    "timestamp": 1754846924895
2025-08-10 17:28:44  }
2025-08-10 17:28:44  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:28:45  {"ts":"2025-08-10T17:28:45.060Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846925060_il83nb","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 17:28:45  🔍 用戶ID類型: string
2025-08-10 17:28:45  🔍 是否測試用戶: true
2025-08-10 17:28:45  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:28:45  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 17:28:45  📝 內容記錄優先規則命中 → record_content
2025-08-10 17:28:45  {"ts":"2025-08-10T17:28:45.201Z","lvl":"info","stage":"nlp","traceId":"line_1754846925060_il83nb","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 17:28:45  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 17:28:45  📊 規則提取置信度: 0.67
2025-08-10 17:28:45  🤖 啟用 AI 輔助提取...
2025-08-10 17:28:46  ✅ 最終 slots: {
2025-08-10 17:28:46    studentName: '小明',
2025-08-10 17:28:46    courseName: '數學課',
2025-08-10 17:28:46    timeReference: 'yesterday',
2025-08-10 17:28:46    content: '什麼？'
2025-08-10 17:28:46  }
2025-08-10 17:28:46  {"ts":"2025-08-10T17:28:46.753Z","lvl":"info","stage":"slots","traceId":"line_1754846925060_il83nb","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 17:28:46  🎯 執行任務: record_content
2025-08-10 17:28:46  📝 開始處理記錄課程內容任務: {
2025-08-10 17:28:46    studentName: '小明',
2025-08-10 17:28:46    courseName: '數學課',
2025-08-10 17:28:46    timeReference: 'yesterday',
2025-08-10 17:28:46    content: '什麼？'
2025-08-10 17:28:46  }
2025-08-10 17:28:46  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 17:28:46  ❓ 未找到完全匹配的課程
2025-08-10 17:28:46  ✅ 文檔已添加到 course_contents: BApMCY00zh8cPu768KIB
2025-08-10 17:28:46  ✅ 課程內容記錄已儲存: BApMCY00zh8cPu768KIB
2025-08-10 17:28:46  📊 任務執行結果: {
2025-08-10 17:28:46    success: true,
2025-08-10 17:28:46    code: 'RECORD_CONTENT_OK',
2025-08-10 17:28:46    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 17:28:46    data: {
2025-08-10 17:28:46      recordId: 'BApMCY00zh8cPu768KIB',
2025-08-10 17:28:46      courseId: null,
2025-08-10 17:28:46      targetDate: '2025-08-09'
2025-08-10 17:28:46    }
2025-08-10 17:28:46  }
2025-08-10 17:28:46  {"ts":"2025-08-10T17:28:46.991Z","lvl":"info","stage":"task","traceId":"line_1754846925060_il83nb","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":238}
2025-08-10 17:28:47  🔍 檢查 replyToken: test-reply-token-1754846924895
2025-08-10 17:28:47  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:28:47  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 17:28:47  📝 記錄為獨立內容
2025-08-10 17:28:47  👨‍🎓 學生：小明
2025-08-10 17:28:47  📚 課程：數學課
2025-08-10 17:28:47  📅 日期：2025-08-09
2025-08-10 17:28:47  💬 內容：什麼？
2025-08-10 17:28:47  {"ts":"2025-08-10T17:28:47.275Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846925060_il83nb","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 17:28:54  📨 收到 1 個事件
2025-08-10 17:28:54  📋 事件類型: message
2025-08-10 17:28:54  🔍 完整事件 JSON: {
2025-08-10 17:28:54    "type": "message",
2025-08-10 17:28:54    "message": {
2025-08-10 17:28:54      "type": "text",
2025-08-10 17:28:54      "text": "記錄小明今天化學課的內容"
2025-08-10 17:28:54    },
2025-08-10 17:28:54    "source": {
2025-08-10 17:28:54      "userId": "U_test_user_qa",
2025-08-10 17:28:54      "type": "user"
2025-08-10 17:28:54  📨 收到 1 個事件
2025-08-10 17:28:54  📋 事件類型: message
2025-08-10 17:28:54  🔍 完整事件 JSON: {
2025-08-10 17:28:54    "type": "message",
2025-08-10 17:28:54    "message": {
2025-08-10 17:28:54      "type": "text",
2025-08-10 17:28:54      "text": "記錄小明今天化學課的內容"
2025-08-10 17:28:54    },
2025-08-10 17:28:54    "source": {
2025-08-10 17:28:54      "userId": "U_test_user_qa",
2025-08-10 17:28:54      "type": "user"
2025-08-10 17:28:54    },
2025-08-10 17:28:54    "replyToken": "test-reply-token-1754846934229",
2025-08-10 17:28:54    "timestamp": 1754846934229
2025-08-10 17:28:54  }
2025-08-10 17:28:54  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:28:54  {"ts":"2025-08-10T17:28:54.505Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846934505_thptzl","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 17:28:54  🔍 用戶ID類型: string
2025-08-10 17:28:54  🔍 是否測試用戶: true
2025-08-10 17:28:54  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:28:54  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 17:28:54  📝 內容記錄優先規則命中 → record_content
2025-08-10 17:28:54  {"ts":"2025-08-10T17:28:54.646Z","lvl":"info","stage":"nlp","traceId":"line_1754846934505_thptzl","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 17:28:54  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 17:28:54  📊 規則提取置信度: 0.67
2025-08-10 17:28:54  🤖 啟用 AI 輔助提取...
2025-08-10 17:28:56  ✅ 最終 slots: {
2025-08-10 17:28:56    studentName: '小明',
2025-08-10 17:28:56    courseName: '化學課',
2025-08-10 17:28:56    timeReference: 'today',
2025-08-10 17:28:56    content: '小明今天化學課的內容'
2025-08-10 17:28:56  }
2025-08-10 17:28:56  {"ts":"2025-08-10T17:28:56.453Z","lvl":"info","stage":"slots","traceId":"line_1754846934505_thptzl","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 17:28:56  🎯 執行任務: record_content
2025-08-10 17:28:56  📝 開始處理記錄課程內容任務: {
2025-08-10 17:28:56    studentName: '小明',
2025-08-10 17:28:56    courseName: '化學課',
2025-08-10 17:28:56    timeReference: 'today',
2025-08-10 17:28:56    content: '小明今天化學課的內容'
2025-08-10 17:28:56  }
2025-08-10 17:28:56  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 17:28:56  ❓ 未找到完全匹配的課程
2025-08-10 17:28:56  ✅ 文檔已添加到 course_contents: a0lwKDgiEp83vF5dRITB
2025-08-10 17:28:56  ✅ 課程內容記錄已儲存: a0lwKDgiEp83vF5dRITB
2025-08-10 17:28:56  📊 任務執行結果: {
2025-08-10 17:28:56    success: true,
2025-08-10 17:28:56    code: 'RECORD_CONTENT_OK',
2025-08-10 17:28:56    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 17:28:56      '📝 記錄為獨立內容\n' +
2025-08-10 17:28:56      '👨‍🎓 學生：小明\n' +
2025-08-10 17:28:56      '📚 課程：化學課\n' +
2025-08-10 17:28:56      '📅 日期：2025-08-10\n' +
2025-08-10 17:28:56      '💬 內容：小明今天化學課的內容',
2025-08-10 17:28:56    data: {
2025-08-10 17:28:56      recordId: 'a0lwKDgiEp83vF5dRITB',
2025-08-10 17:28:56      courseId: null,
2025-08-10 17:28:56      targetDate: '2025-08-10'
2025-08-10 17:28:56    }
2025-08-10 17:28:56  }
2025-08-10 17:28:56  {"ts":"2025-08-10T17:28:56.677Z","lvl":"info","stage":"task","traceId":"line_1754846934505_thptzl","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":224}
2025-08-10 17:28:56  🔍 檢查 replyToken: test-reply-token-1754846934229
2025-08-10 17:28:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:28:56  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 17:28:56  📝 記錄為獨立內容
2025-08-10 17:28:56  👨‍🎓 學生：小明
2025-08-10 17:28:56  📚 課程：化學課
2025-08-10 17:28:56  📅 日期：2025-08-10
2025-08-10 17:28:56  💬 內容：小明今天化學課的內容
2025-08-10 17:28:56  {"ts":"2025-08-10T17:28:56.959Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846934505_thptzl","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 17:29:09  📨 收到 1 個事件
2025-08-10 17:29:09  📋 事件類型: message
2025-08-10 17:29:09  🔍 完整事件 JSON: {
2025-08-10 17:29:09    "type": "message",
2025-08-10 17:29:09    "message": {
2025-08-10 17:29:09      "type": "text",
2025-08-10 17:29:09      "text": "提醒我小明的數學課"
2025-08-10 17:29:09    },
2025-08-10 17:29:09    "source": {
2025-08-10 17:29:09      "userId": "U_test_user_qa",
2025-08-10 17:29:09      "type": "user"
2025-08-10 17:29:09    },
2025-08-10 17:29:09    "replyToken": "test-reply-token-1754846949617",
2025-08-10 17:29:09    "timestamp": 1754846949617
2025-08-10 17:29:09  }
2025-08-10 17:29:09  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:29:09  {"ts":"2025-08-10T17:29:09.890Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846949890_7me35i","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 17:29:09  🔍 用戶ID類型: string
2025-08-10 17:29:09  🔍 是否測試用戶: true
2025-08-10 17:29:09  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:29:09  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 17:29:10  ✅ 規則匹配成功: set_reminder
2025-08-10 17:29:10  {"ts":"2025-08-10T17:29:10.032Z","lvl":"info","stage":"nlp","traceId":"line_1754846949890_7me35i","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:29:10  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:29:10  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:29:10  📊 規則提取置信度: 0.67
2025-08-10 17:29:10  🤖 啟用 AI 輔助提取...
2025-08-10 17:29:11  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:29:11  {"ts":"2025-08-10T17:29:11.852Z","lvl":"info","stage":"slots","traceId":"line_1754846949890_7me35i","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:29:11  🎯 執行任務: set_reminder
2025-08-10 17:29:11  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:29:11  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:29:11  {"ts":"2025-08-10T17:29:11.852Z","lvl":"info","stage":"slots","traceId":"line_1754846949890_7me35i","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:29:11  🎯 執行任務: set_reminder
2025-08-10 17:29:11  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:29:11  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 17:29:11  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 17:29:11  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 17:29:12  ✅ 提醒記錄已創建: x3xKbHlMIIeNqlL5mOFY
2025-08-10 17:29:12  ✅ 提醒設定成功: x3xKbHlMIIeNqlL5mOFY
2025-08-10 17:29:12  📊 任務執行結果: {
2025-08-10 17:29:12    success: true,
2025-08-10 17:29:12    code: 'REMINDER_SET_OK',
2025-08-10 17:29:12    message: '✅ 提醒設定完成！\n' +
2025-08-10 17:29:12      '📚 課程：小明 的 數學課\n' +
2025-08-10 17:29:12      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 17:29:12      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 17:29:12  }
2025-08-10 17:29:12  {"ts":"2025-08-10T17:29:12.151Z","lvl":"info","stage":"task","traceId":"line_1754846949890_7me35i","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":299}
2025-08-10 17:29:12  🔍 檢查 replyToken: test-reply-token-1754846949617
2025-08-10 17:29:12  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:29:12  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 17:29:12  📚 課程：小明 的 數學課
2025-08-10 17:29:12  📅 上課時間：8/11 下午02:00
2025-08-10 17:29:12  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 17:29:12  {"ts":"2025-08-10T17:29:12.433Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846949890_7me35i","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 17:29:26  📨 收到 1 個事件
2025-08-10 17:29:26  📋 事件類型: message
2025-08-10 17:29:26  🔍 完整事件 JSON: {
2025-08-10 17:29:26    "type": "message",
2025-08-10 17:29:26    "message": {
2025-08-10 17:29:26      "type": "text",
2025-08-10 17:29:26      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 17:29:26    },
2025-08-10 17:29:26    "source": {
2025-08-10 17:29:26      "userId": "U_test_user_qa",
2025-08-10 17:29:26      "type": "user"
2025-08-10 17:29:26    },
2025-08-10 17:29:26    "replyToken": "test-reply-token-1754846966573",
2025-08-10 17:29:26    "timestamp": 1754846966573
2025-08-10 17:29:26  }
2025-08-10 17:29:26  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:29:26  {"ts":"2025-08-10T17:29:26.739Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846966739_jiwial","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 17:29:26  🔍 用戶ID類型: string
2025-08-10 17:29:26  🔍 是否測試用戶: true
2025-08-10 17:29:26  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:29:26  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 17:29:26  ✅ 規則匹配成功: set_reminder
2025-08-10 17:29:26  {"ts":"2025-08-10T17:29:26.881Z","lvl":"info","stage":"nlp","traceId":"line_1754846966739_jiwial","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:29:27  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:29:27  📊 規則提取置信度: 0.67
2025-08-10 17:29:27  🤖 啟用 AI 輔助提取...
2025-08-10 17:29:28  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 17:29:28  {"ts":"2025-08-10T17:29:28.088Z","lvl":"info","stage":"slots","traceId":"line_1754846966739_jiwial","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 17:29:28  🎯 執行任務: set_reminder
2025-08-10 17:29:28  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 17:29:28  📊 任務執行結果: {
2025-08-10 17:29:28    success: false,
2025-08-10 17:29:28    code: 'MISSING_STUDENT',
2025-08-10 17:29:28    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 17:29:28  }
2025-08-10 17:29:28  {"ts":"2025-08-10T17:29:28.088Z","lvl":"info","stage":"task","traceId":"line_1754846966739_jiwial","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 17:29:28  🔍 檢查 replyToken: test-reply-token-1754846966573
2025-08-10 17:29:28  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:29:28  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 17:29:28  {"ts":"2025-08-10T17:29:28.371Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846966739_jiwial","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 17:29:41  📨 收到 1 個事件
2025-08-10 17:29:41  📋 事件類型: message
2025-08-10 17:29:41  🔍 完整事件 JSON: {
2025-08-10 17:29:41    "type": "message",
2025-08-10 17:29:41    "message": {
2025-08-10 17:29:41      "type": "text",
2025-08-10 17:29:41      "text": "提醒我小明的物理課"
2025-08-10 17:29:41    },
2025-08-10 17:29:41    "source": {
2025-08-10 17:29:41      "userId": "U_test_user_qa",
2025-08-10 17:29:41      "type": "user"
2025-08-10 17:29:41    },
2025-08-10 17:29:41    "replyToken": "test-reply-token-1754846981365",
2025-08-10 17:29:41    "timestamp": 1754846981365
2025-08-10 17:29:41  }
2025-08-10 17:29:41  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:29:41  {"ts":"2025-08-10T17:29:41.532Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846981532_fg0l8i","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 17:29:41  🔍 用戶ID類型: string
2025-08-10 17:29:41  🔍 是否測試用戶: true
2025-08-10 17:29:41  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:29:41  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 17:29:41  ✅ 規則匹配成功: set_reminder
2025-08-10 17:29:41  {"ts":"2025-08-10T17:29:41.677Z","lvl":"info","stage":"nlp","traceId":"line_1754846981532_fg0l8i","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:29:41  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:29:41  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:29:41  📊 規則提取置信度: 0.67
2025-08-10 17:29:41  🤖 啟用 AI 輔助提取...
2025-08-10 17:29:43  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:29:43  {"ts":"2025-08-10T17:29:43.704Z","lvl":"info","stage":"slots","traceId":"line_1754846981532_fg0l8i","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:29:43  🎯 執行任務: set_reminder
2025-08-10 17:29:43  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:29:43  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 17:29:43  📊 任務執行結果: {
2025-08-10 17:29:43    success: false,
2025-08-10 17:29:43    code: 'NOT_FOUND',
2025-08-10 17:29:43  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:29:43  {"ts":"2025-08-10T17:29:43.704Z","lvl":"info","stage":"slots","traceId":"line_1754846981532_fg0l8i","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:29:43  🎯 執行任務: set_reminder
2025-08-10 17:29:43  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:29:43  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 17:29:43  📊 任務執行結果: {
2025-08-10 17:29:43    success: false,
2025-08-10 17:29:43    code: 'NOT_FOUND',
2025-08-10 17:29:43    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 17:29:43  }
2025-08-10 17:29:43  {"ts":"2025-08-10T17:29:43.777Z","lvl":"info","stage":"task","traceId":"line_1754846981532_fg0l8i","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":73}
2025-08-10 17:29:44  🔍 檢查 replyToken: test-reply-token-1754846981365
2025-08-10 17:29:44  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:29:44  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 17:29:44  {"ts":"2025-08-10T17:29:44.067Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846981532_fg0l8i","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 17:29:59  📨 收到 1 個事件
2025-08-10 17:29:59  📋 事件類型: message
2025-08-10 17:29:59  🔍 完整事件 JSON: {
2025-08-10 17:29:59    "type": "message",
2025-08-10 17:29:59    "message": {
2025-08-10 17:29:59      "type": "text",
2025-08-10 17:29:59      "text": "小明的數學課改到下午4點"
2025-08-10 17:29:59    },
2025-08-10 17:29:59    "source": {
2025-08-10 17:29:59      "userId": "U_test_user_qa",
2025-08-10 17:29:59      "type": "user"
2025-08-10 17:29:59    },
2025-08-10 17:29:59    "replyToken": "test-reply-token-1754846998870",
2025-08-10 17:29:59    "timestamp": 1754846998870
2025-08-10 17:29:59  }
2025-08-10 17:29:59  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:29:59  {"ts":"2025-08-10T17:29:59.278Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754846999278_cqhxhb","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 17:29:59  🔍 用戶ID類型: string
2025-08-10 17:29:59  🔍 是否測試用戶: true
2025-08-10 17:29:59  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:29:59  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 17:29:59  ✅ 規則匹配成功: modify_course
2025-08-10 17:29:59  {"ts":"2025-08-10T17:29:59.426Z","lvl":"info","stage":"nlp","traceId":"line_1754846999278_cqhxhb","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 17:29:59  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 17:29:59  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 17:29:59  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:29:59  📊 規則提取置信度: 0.00
2025-08-10 17:29:59  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 17:30:00  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 17:30:00  {"ts":"2025-08-10T17:30:00.982Z","lvl":"info","stage":"slots","traceId":"line_1754846999278_cqhxhb","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 17:30:00  🎯 執行任務: modify_course
2025-08-10 17:30:00  ✏️ 執行修改操作任務: {
2025-08-10 17:30:00    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 17:30:00    userId: 'U_test_user_qa'
2025-08-10 17:30:00  }
2025-08-10 17:30:01  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 17:30:01  {"ts":"2025-08-10T17:30:01.055Z","lvl":"info","stage":"task","traceId":"line_1754846999278_cqhxhb","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":73}
2025-08-10 17:30:01  🔍 檢查 replyToken: test-reply-token-1754846998870
2025-08-10 17:30:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:30:01  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 17:30:01  {"ts":"2025-08-10T17:30:01.345Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754846999278_cqhxhb","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 17:30:14  📨 收到 1 個事件
2025-08-10 17:30:14  📋 事件類型: message
2025-08-10 17:30:14  🔍 完整事件 JSON: {
2025-08-10 17:30:14    "type": "message",
2025-08-10 17:30:14    "message": {
2025-08-10 17:30:14      "type": "text",
2025-08-10 17:30:14      "text": "小明每天的晨練課改到早上7點"
2025-08-10 17:30:14    },
2025-08-10 17:30:14    "source": {
2025-08-10 17:30:14      "userId": "U_test_user_qa",
2025-08-10 17:30:14      "type": "user"
2025-08-10 17:30:14    },
2025-08-10 17:30:14    "replyToken": "test-reply-token-1754847014060",
2025-08-10 17:30:14    "timestamp": 1754847014060
2025-08-10 17:30:14  }
2025-08-10 17:30:14  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:30:14  {"ts":"2025-08-10T17:30:14.306Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847014305_fs1ysk","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 17:30:14  🔍 用戶ID類型: string
2025-08-10 17:30:14  🔍 是否測試用戶: true
2025-08-10 17:30:14  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:30:14  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 17:30:14  ✅ 規則匹配成功: create_recurring_course
2025-08-10 17:30:14  {"ts":"2025-08-10T17:30:14.451Z","lvl":"info","stage":"nlp","traceId":"line_1754847014305_fs1ysk","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 17:30:14  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 17:30:14  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 17:30:14  ✅ 時間解析成功: {
2025-08-10 17:30:14    input: '小明每天的晨練課改到早上7點',
2025-08-10 17:30:14    output: '07:00',
2025-08-10 17:30:14    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 17:30:14  }
2025-08-10 17:30:14  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:30:14  📊 規則提取置信度: 0.67
2025-08-10 17:30:14  🤖 啟用 AI 輔助提取...
2025-08-10 17:30:15  ✅ 最終 slots: {
2025-08-10 17:30:15    studentName: '小明',
2025-08-10 17:30:15    courseName: '晨練課',
2025-08-10 17:30:15    scheduleTime: '07:00',
2025-08-10 17:30:15    recurring: false
2025-08-10 17:30:15  }
2025-08-10 17:30:15  {"ts":"2025-08-10T17:30:15.760Z","lvl":"info","stage":"slots","traceId":"line_1754847014305_fs1ysk","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:15  🎯 執行任務: create_recurring_course
2025-08-10 17:30:15  🎯 開始處理新增課程任務
2025-08-10 17:30:15  📋 接收參數: {
2025-08-10 17:30:15    studentName: '小明',
2025-08-10 17:30:15  ✅ 最終 slots: {
2025-08-10 17:30:15    studentName: '小明',
2025-08-10 17:30:15    courseName: '晨練課',
2025-08-10 17:30:15    scheduleTime: '07:00',
2025-08-10 17:30:15    recurring: false
2025-08-10 17:30:15  }
2025-08-10 17:30:15  {"ts":"2025-08-10T17:30:15.760Z","lvl":"info","stage":"slots","traceId":"line_1754847014305_fs1ysk","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:15  🎯 執行任務: create_recurring_course
2025-08-10 17:30:15  🎯 開始處理新增課程任務
2025-08-10 17:30:15  📋 接收參數: {
2025-08-10 17:30:15    studentName: '小明',
2025-08-10 17:30:15    courseName: '晨練課',
2025-08-10 17:30:15    scheduleTime: '07:00',
2025-08-10 17:30:15    recurring: false
2025-08-10 17:30:15  }
2025-08-10 17:30:15  📊 任務執行結果: {
2025-08-10 17:30:15    success: false,
2025-08-10 17:30:15    code: 'MISSING_FIELDS',
2025-08-10 17:30:15    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 17:30:15    expectingInput: true,
2025-08-10 17:30:15    missingFields: [ '課程日期' ]
2025-08-10 17:30:15  }
2025-08-10 17:30:15  {"ts":"2025-08-10T17:30:15.906Z","lvl":"info","stage":"task","traceId":"line_1754847014305_fs1ysk","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":146}
2025-08-10 17:30:16  🔍 檢查 replyToken: test-reply-token-1754847014060
2025-08-10 17:30:16  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:30:16  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 17:30:16  
2025-08-10 17:30:16  範例：「小明每週三下午3點數學課」
2025-08-10 17:30:16  {"ts":"2025-08-10T17:30:16.195Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847014305_fs1ysk","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 17:30:29  📨 收到 1 個事件
2025-08-10 17:30:29  📋 事件類型: message
2025-08-10 17:30:29  🔍 完整事件 JSON: {
2025-08-10 17:30:29    "type": "message",
2025-08-10 17:30:29    "message": {
2025-08-10 17:30:29      "type": "text",
2025-08-10 17:30:29      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 17:30:29    },
2025-08-10 17:30:29    "source": {
2025-08-10 17:30:29      "userId": "U_test_user_qa",
2025-08-10 17:30:29      "type": "user"
2025-08-10 17:30:29    },
2025-08-10 17:30:29    "replyToken": "test-reply-token-1754847029403",
2025-08-10 17:30:29    "timestamp": 1754847029403
2025-08-10 17:30:29  }
2025-08-10 17:30:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:30:29  {"ts":"2025-08-10T17:30:29.686Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 17:30:29  🔍 用戶ID類型: string
2025-08-10 17:30:29  🔍 是否測試用戶: true
2025-08-10 17:30:29  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:30:29  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 17:30:29  ✅ 規則匹配成功: create_recurring_course
2025-08-10 17:30:29  {"ts":"2025-08-10T17:30:29.832Z","lvl":"info","stage":"nlp","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 17:30:29  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 17:30:29  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 17:30:29  ✅ 時間解析成功: {
2025-08-10 17:30:29    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 17:30:29    output: '15:00',
2025-08-10 17:30:29    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 17:30:29  }
2025-08-10 17:30:30  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:30:30  📊 規則提取置信度: 0.67
2025-08-10 17:30:30  🤖 啟用 AI 輔助提取...
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
2025-08-10 17:30:31  ✅ 最終 slots: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  {"ts":"2025-08-10T17:30:31.079Z","lvl":"info","stage":"slots","traceId":"line_1754847029686_xlpe9t","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:30:31  🎯 執行任務: create_recurring_course
2025-08-10 17:30:31  🎯 開始處理新增課程任務
2025-08-10 17:30:31  📋 接收參數: {
2025-08-10 17:30:31    studentName: 'Lumi',
2025-08-10 17:30:31    courseName: '鋼琴課',
2025-08-10 17:30:31    scheduleTime: '15:00',
2025-08-10 17:30:31    recurring: true
2025-08-10 17:30:31  }
2025-08-10 17:30:31  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:30:31  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 17:30:31  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:30:31      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:30:31      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:30:31      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:30:31      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:30:31      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:30:31      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:30:31      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:30:31      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:30:31      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:30:31      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:30:31    config: {
2025-08-10 17:30:31      url: URL {
2025-08-10 17:30:31        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        origin: 'https://www.googleapis.com',
2025-08-10 17:30:31        protocol: 'https:',
2025-08-10 17:30:31        username: '',
2025-08-10 17:30:31        password: '',
2025-08-10 17:30:31        host: 'www.googleapis.com',
2025-08-10 17:30:31        hostname: 'www.googleapis.com',
2025-08-10 17:30:31        port: '',
2025-08-10 17:30:31        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:30:31        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:30:31        searchParams: URLSearchParams {
2025-08-10 17:30:31          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31          'singleEvents' => 'true',
2025-08-10 17:30:31          'orderBy' => 'startTime' },
2025-08-10 17:30:31        hash: ''
2025-08-10 17:30:31      },
2025-08-10 17:30:31      method: 'GET',
2025-08-10 17:30:31      apiVersion: '',
2025-08-10 17:30:31      userAgentDirectives: [ [Object] ],
2025-08-10 17:30:31      paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31      headers: Headers {
2025-08-10 17:30:31        'accept-encoding': 'gzip',
2025-08-10 17:30:31        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      params: {
2025-08-10 17:30:31        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:30:31        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:30:31        singleEvents: true,
2025-08-10 17:30:31        orderBy: 'startTime'
2025-08-10 17:30:31      },
2025-08-10 17:30:31      validateStatus: [Function (anonymous)],
2025-08-10 17:30:31      retry: true,
2025-08-10 17:30:31      responseType: 'unknown',
2025-08-10 17:30:31      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:30:31      retryConfig: {
2025-08-10 17:30:31        currentRetryAttempt: 0,
2025-08-10 17:30:31        retry: 3,
2025-08-10 17:30:31        httpMethodsToRetry: [Array],
2025-08-10 17:30:31        noResponseRetries: 2,
2025-08-10 17:30:31        retryDelayMultiplier: 2,
2025-08-10 17:30:31        timeOfFirstRequest: 1754847031468,
2025-08-10 17:30:31        totalTimeout: 9007199254740991,
2025-08-10 17:30:31        maxRetryDelay: 9007199254740991,
2025-08-10 17:30:31        statusCodesToRetry: [Array]
2025-08-10 17:30:31      }
2025-08-10 17:30:31    },
2025-08-10 17:30:31    response: Response {
2025-08-10 17:30:31      size: 0,
2025-08-10 17:30:31      data: { error: [Object] },
2025-08-10 17:30:31      config: {
2025-08-10 17:30:31        url: URL {},
2025-08-10 17:30:31        method: 'GET',
2025-08-10 17:30:31        apiVersion: '',
2025-08-10 17:30:31        userAgentDirectives: [Array],
2025-08-10 17:30:31        paramsSerializer: [Function (anonymous)],
2025-08-10 17:30:31        headers: Headers {
2025-08-10 17:30:31          'accept-encoding': 'gzip',
2025-08-10 17:30:31          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:30:31          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:30:31          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:30:31        },
2025-08-10 17:30:31        params: [Object],
2025-08-10 17:30:31        validateStatus: [Function (anonymous)],
2025-08-10 17:30:31        retry: true,
2025-08-10 17:30:31        responseType: 'unknown',
2025-08-10 17:30:31        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:30:31      },
