2025-08-10 19:53:16  📨 收到 1 個事件
2025-08-10 19:53:16  📋 事件類型: message
2025-08-10 19:53:16  🔍 完整事件 JSON: {
2025-08-10 19:53:16    "type": "message",
2025-08-10 19:53:16    "message": {
2025-08-10 19:53:16      "type": "text",
2025-08-10 19:53:16      "text": "今天小明的數學課學了分數加減法"
2025-08-10 19:53:16    },
2025-08-10 19:53:16    "source": {
2025-08-10 19:53:16      "userId": "U_test_user_qa",
2025-08-10 19:53:16      "type": "user"
2025-08-10 19:53:16    },
2025-08-10 19:53:16    "replyToken": "test-reply-token-1754855596719",
2025-08-10 19:53:16    "timestamp": 1754855596719
2025-08-10 19:53:16  }
2025-08-10 19:53:16  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:53:16  {"ts":"2025-08-10T19:53:16.891Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855596891_93gfrl","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 19:53:16  🔍 用戶ID類型: string
2025-08-10 19:53:16  🔍 是否測試用戶: true
2025-08-10 19:53:16  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:53:16  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 19:53:17  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:53:17  {"ts":"2025-08-10T19:53:17.035Z","lvl":"info","stage":"nlp","traceId":"line_1754855596891_93gfrl","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:53:17  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:53:17  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:53:17  📊 規則提取置信度: 1.00
2025-08-10 19:53:17  🤖 啟用 AI 輔助提取...
2025-08-10 19:53:18  ✅ 最終 slots: {
2025-08-10 19:53:18    studentName: '小明',
2025-08-10 19:53:18    courseName: '數學課',
2025-08-10 19:53:18    timeReference: 'today',
2025-08-10 19:53:18    content: '分數加減法'
2025-08-10 19:53:18  }
2025-08-10 19:53:18  {"ts":"2025-08-10T19:53:18.336Z","lvl":"info","stage":"slots","traceId":"line_1754855596891_93gfrl","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:53:18  🎯 執行任務: record_content
2025-08-10 19:53:18  📝 開始處理記錄課程內容任務: {
2025-08-10 19:53:18    studentName: '小明',
2025-08-10 19:53:18    courseName: '數學課',
2025-08-10 19:53:18    timeReference: 'today',
2025-08-10 19:53:18    content: '分數加減法'
2025-08-10 19:53:18  }
2025-08-10 19:53:18  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 19:53:18  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 19:53:18  ✅ 文檔已添加到 course_contents: SJZMoj2llGqLJ2l9BsS0
2025-08-10 19:53:18  ✅ 課程內容記錄已儲存: SJZMoj2llGqLJ2l9BsS0
2025-08-10 19:53:18  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 19:53:18  📊 任務執行結果: {
2025-08-10 19:53:18    success: true,
2025-08-10 19:53:18    code: 'RECORD_CONTENT_OK',
2025-08-10 19:53:18    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 19:53:18    data: {
2025-08-10 19:53:18      recordId: 'SJZMoj2llGqLJ2l9BsS0',
2025-08-10 19:53:18      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 19:53:18      targetDate: '2025-08-10'
2025-08-10 19:53:18    }
2025-08-10 19:53:18  }
2025-08-10 19:53:18  {"ts":"2025-08-10T19:53:18.925Z","lvl":"info","stage":"task","traceId":"line_1754855596891_93gfrl","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":589}
2025-08-10 19:53:19  🔍 檢查 replyToken: test-reply-token-1754855596719
2025-08-10 19:53:19  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:53:19  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:53:19  📚 課程：小明 - 數學課
2025-08-10 19:53:19  📅 日期：2025-08-10
2025-08-10 19:53:19  💬 內容：分數加減法
2025-08-10 19:53:19  {"ts":"2025-08-10T19:53:19.208Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855596891_93gfrl","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 19:53:31  📨 收到 1 個事件
2025-08-10 19:53:31  📋 事件類型: message
2025-08-10 19:53:31  🔍 完整事件 JSON: {
2025-08-10 19:53:31    "type": "message",
2025-08-10 19:53:31    "message": {
2025-08-10 19:53:31      "type": "text",
2025-08-10 19:53:31      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 19:53:31    },
2025-08-10 19:53:31    "source": {
2025-08-10 19:53:31      "userId": "U_test_user_qa",
2025-08-10 19:53:31      "type": "user"
2025-08-10 19:53:31    },
2025-08-10 19:53:31    "replyToken": "test-reply-token-1754855611538",
2025-08-10 19:53:31    "timestamp": 1754855611538
2025-08-10 19:53:31  }
2025-08-10 19:53:31  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:53:31  {"ts":"2025-08-10T19:53:31.717Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855611717_mj4plo","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 19:53:31  🔍 用戶ID類型: string
2025-08-10 19:53:31  🔍 是否測試用戶: true
2025-08-10 19:53:31  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:53:31  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 19:53:31  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:53:31  {"ts":"2025-08-10T19:53:31.858Z","lvl":"info","stage":"nlp","traceId":"line_1754855611717_mj4plo","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:53:32  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:53:32  📊 規則提取置信度: 0.33
2025-08-10 19:53:32  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:53:33  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:53:33  {"ts":"2025-08-10T19:53:33.177Z","lvl":"info","stage":"slots","traceId":"line_1754855611717_mj4plo","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 19:53:33  🎯 執行任務: record_content
2025-08-10 19:53:33  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:53:33  ✅ 文檔已添加到 course_contents: qfdJBBFYoIgxVd82eC24
2025-08-10 19:53:33  ✅ 課程內容記錄已儲存: qfdJBBFYoIgxVd82eC24
2025-08-10 19:53:33  📊 任務執行結果: {
2025-08-10 19:53:33    success: true,
2025-08-10 19:53:33    code: 'RECORD_CONTENT_OK',
2025-08-10 19:53:33    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 19:53:33  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:53:33  {"ts":"2025-08-10T19:53:33.177Z","lvl":"info","stage":"slots","traceId":"line_1754855611717_mj4plo","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 19:53:33  🎯 執行任務: record_content
2025-08-10 19:53:33  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:53:33  ✅ 文檔已添加到 course_contents: qfdJBBFYoIgxVd82eC24
2025-08-10 19:53:33  ✅ 課程內容記錄已儲存: qfdJBBFYoIgxVd82eC24
2025-08-10 19:53:33  📊 任務執行結果: {
2025-08-10 19:53:33    success: true,
2025-08-10 19:53:33    code: 'RECORD_CONTENT_OK',
2025-08-10 19:53:33    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 19:53:33    data: {
2025-08-10 19:53:33      recordId: 'qfdJBBFYoIgxVd82eC24',
2025-08-10 19:53:33      courseId: null,
2025-08-10 19:53:33      targetDate: '2025-08-09'
2025-08-10 19:53:33    }
2025-08-10 19:53:33  }
2025-08-10 19:53:33  {"ts":"2025-08-10T19:53:33.263Z","lvl":"info","stage":"task","traceId":"line_1754855611717_mj4plo","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":86}
2025-08-10 19:53:33  🔍 檢查 replyToken: test-reply-token-1754855611538
2025-08-10 19:53:33  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:53:33  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:53:33  📝 記錄為獨立內容
2025-08-10 19:53:33  📚 課程：鋼琴課
2025-08-10 19:53:33  📅 日期：2025-08-09
2025-08-10 19:53:33  💬 內容：練習了小星星
2025-08-10 19:53:33  {"ts":"2025-08-10T19:53:33.546Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855611717_mj4plo","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 19:53:46  📨 收到 1 個事件
2025-08-10 19:53:46  📋 事件類型: message
2025-08-10 19:53:46  🔍 完整事件 JSON: {
2025-08-10 19:53:46    "type": "message",
2025-08-10 19:53:46    "message": {
2025-08-10 19:53:46      "type": "text",
2025-08-10 19:53:46      "text": "小明昨天數學課學了什麼？"
2025-08-10 19:53:46    },
2025-08-10 19:53:46    "source": {
2025-08-10 19:53:46      "userId": "U_test_user_qa",
2025-08-10 19:53:46      "type": "user"
2025-08-10 19:53:46    },
2025-08-10 19:53:46    "replyToken": "test-reply-token-1754855625962",
2025-08-10 19:53:46    "timestamp": 1754855625962
2025-08-10 19:53:46  }
2025-08-10 19:53:46  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:53:46  {"ts":"2025-08-10T19:53:46.145Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855626145_ermtec","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 19:53:46  🔍 用戶ID類型: string
2025-08-10 19:53:46  🔍 是否測試用戶: true
2025-08-10 19:53:46  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:53:46  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 19:53:46  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:53:46  {"ts":"2025-08-10T19:53:46.286Z","lvl":"info","stage":"nlp","traceId":"line_1754855626145_ermtec","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:53:46  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:53:46  📊 規則提取置信度: 0.67
2025-08-10 19:53:46  🤖 啟用 AI 輔助提取...
2025-08-10 19:53:47  ✅ 最終 slots: {
2025-08-10 19:53:47    studentName: '小明',
2025-08-10 19:53:47    courseName: '數學課',
2025-08-10 19:53:47    timeReference: 'yesterday',
2025-08-10 19:53:47    content: '什麼？'
2025-08-10 19:53:47  }
2025-08-10 19:53:47  {"ts":"2025-08-10T19:53:47.894Z","lvl":"info","stage":"slots","traceId":"line_1754855626145_ermtec","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:53:47  🎯 執行任務: record_content
2025-08-10 19:53:47  📝 開始處理記錄課程內容任務: {
2025-08-10 19:53:47    studentName: '小明',
2025-08-10 19:53:47    courseName: '數學課',
2025-08-10 19:53:47    timeReference: 'yesterday',
2025-08-10 19:53:47    content: '什麼？'
2025-08-10 19:53:47  }
2025-08-10 19:53:47  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 19:53:48  ❓ 未找到完全匹配的課程
2025-08-10 19:53:48  ✅ 文檔已添加到 course_contents: 2prnrf08V5KDUAGh9xoY
2025-08-10 19:53:48  ✅ 課程內容記錄已儲存: 2prnrf08V5KDUAGh9xoY
2025-08-10 19:53:48  📊 任務執行結果: {
2025-08-10 19:53:48    success: true,
2025-08-10 19:53:48    code: 'RECORD_CONTENT_OK',
2025-08-10 19:53:48    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 19:53:48    data: {
2025-08-10 19:53:48      recordId: '2prnrf08V5KDUAGh9xoY',
2025-08-10 19:53:48      courseId: null,
2025-08-10 19:53:48      targetDate: '2025-08-09'
2025-08-10 19:53:48    }
2025-08-10 19:53:48  }
2025-08-10 19:53:48  {"ts":"2025-08-10T19:53:48.144Z","lvl":"info","stage":"task","traceId":"line_1754855626145_ermtec","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":250}
2025-08-10 19:53:48  🔍 檢查 replyToken: test-reply-token-1754855625962
2025-08-10 19:53:48  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:53:48  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:53:48  📝 記錄為獨立內容
2025-08-10 19:53:48  👨‍🎓 學生：小明
2025-08-10 19:53:48  📚 課程：數學課
2025-08-10 19:53:48  📅 日期：2025-08-09
2025-08-10 19:53:48  💬 內容：什麼？
2025-08-10 19:53:48  {"ts":"2025-08-10T19:53:48.427Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855626145_ermtec","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 19:53:55  📨 收到 1 個事件
2025-08-10 19:53:55  📋 事件類型: message
2025-08-10 19:53:55  🔍 完整事件 JSON: {
2025-08-10 19:53:55    "type": "message",
2025-08-10 19:53:55    "message": {
2025-08-10 19:53:55      "type": "text",
2025-08-10 19:53:55      "text": "記錄小明今天化學課的內容"
2025-08-10 19:53:55    },
2025-08-10 19:53:55    "source": {
2025-08-10 19:53:55      "userId": "U_test_user_qa",
2025-08-10 19:53:55      "type": "user"
2025-08-10 19:53:55  📨 收到 1 個事件
2025-08-10 19:53:55  📋 事件類型: message
2025-08-10 19:53:55  🔍 完整事件 JSON: {
2025-08-10 19:53:55    "type": "message",
2025-08-10 19:53:55    "message": {
2025-08-10 19:53:55      "type": "text",
2025-08-10 19:53:55      "text": "記錄小明今天化學課的內容"
2025-08-10 19:53:55    },
2025-08-10 19:53:55    "source": {
2025-08-10 19:53:55      "userId": "U_test_user_qa",
2025-08-10 19:53:55      "type": "user"
2025-08-10 19:53:55    },
2025-08-10 19:53:55    "replyToken": "test-reply-token-1754855635402",
2025-08-10 19:53:55    "timestamp": 1754855635402
2025-08-10 19:53:55  }
2025-08-10 19:53:55  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:53:55  {"ts":"2025-08-10T19:53:55.572Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855635572_h3mh0u","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 19:53:55  🔍 用戶ID類型: string
2025-08-10 19:53:55  🔍 是否測試用戶: true
2025-08-10 19:53:55  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:53:55  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 19:53:55  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:53:55  {"ts":"2025-08-10T19:53:55.713Z","lvl":"info","stage":"nlp","traceId":"line_1754855635572_h3mh0u","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:53:55  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:53:55  📊 規則提取置信度: 0.67
2025-08-10 19:53:55  🤖 啟用 AI 輔助提取...
2025-08-10 19:53:57  ✅ 最終 slots: {
2025-08-10 19:53:57    studentName: '小明',
2025-08-10 19:53:57    courseName: '化學課',
2025-08-10 19:53:57    timeReference: 'today',
2025-08-10 19:53:57    content: '小明今天化學課的內容'
2025-08-10 19:53:57  }
2025-08-10 19:53:57  {"ts":"2025-08-10T19:53:57.324Z","lvl":"info","stage":"slots","traceId":"line_1754855635572_h3mh0u","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:53:57  🎯 執行任務: record_content
2025-08-10 19:53:57  📝 開始處理記錄課程內容任務: {
2025-08-10 19:53:57    studentName: '小明',
2025-08-10 19:53:57    courseName: '化學課',
2025-08-10 19:53:57    timeReference: 'today',
2025-08-10 19:53:57    content: '小明今天化學課的內容'
2025-08-10 19:53:57  }
2025-08-10 19:53:57  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 19:53:57  ❓ 未找到完全匹配的課程
2025-08-10 19:53:57  ✅ 文檔已添加到 course_contents: DcqxI3vJxwrn9aa76lEL
2025-08-10 19:53:57  ✅ 課程內容記錄已儲存: DcqxI3vJxwrn9aa76lEL
2025-08-10 19:53:57  📊 任務執行結果: {
2025-08-10 19:53:57    success: true,
2025-08-10 19:53:57    code: 'RECORD_CONTENT_OK',
2025-08-10 19:53:57    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 19:53:57      '📝 記錄為獨立內容\n' +
2025-08-10 19:53:57      '👨‍🎓 學生：小明\n' +
2025-08-10 19:53:57      '📚 課程：化學課\n' +
2025-08-10 19:53:57      '📅 日期：2025-08-10\n' +
2025-08-10 19:53:57      '💬 內容：小明今天化學課的內容',
2025-08-10 19:53:57    data: {
2025-08-10 19:53:57      recordId: 'DcqxI3vJxwrn9aa76lEL',
2025-08-10 19:53:57      courseId: null,
2025-08-10 19:53:57      targetDate: '2025-08-10'
2025-08-10 19:53:57    }
2025-08-10 19:53:57  }
2025-08-10 19:53:57  {"ts":"2025-08-10T19:53:57.552Z","lvl":"info","stage":"task","traceId":"line_1754855635572_h3mh0u","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":228}
2025-08-10 19:53:57  🔍 檢查 replyToken: test-reply-token-1754855635402
2025-08-10 19:53:57  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:53:57  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:53:57  📝 記錄為獨立內容
2025-08-10 19:53:57  👨‍🎓 學生：小明
2025-08-10 19:53:57  📚 課程：化學課
2025-08-10 19:53:57  📅 日期：2025-08-10
2025-08-10 19:53:57  💬 內容：小明今天化學課的內容
2025-08-10 19:53:57  {"ts":"2025-08-10T19:53:57.835Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855635572_h3mh0u","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 19:54:10  📨 收到 1 個事件
2025-08-10 19:54:10  📋 事件類型: message
2025-08-10 19:54:10  🔍 完整事件 JSON: {
2025-08-10 19:54:10    "type": "message",
2025-08-10 19:54:10    "message": {
2025-08-10 19:54:10      "type": "text",
2025-08-10 19:54:10      "text": "提醒我小明的數學課"
2025-08-10 19:54:10    },
2025-08-10 19:54:10    "source": {
2025-08-10 19:54:10      "userId": "U_test_user_qa",
2025-08-10 19:54:10      "type": "user"
2025-08-10 19:54:10    },
2025-08-10 19:54:10    "replyToken": "test-reply-token-1754855650423",
2025-08-10 19:54:10    "timestamp": 1754855650423
2025-08-10 19:54:10  }
2025-08-10 19:54:10  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:54:10  {"ts":"2025-08-10T19:54:10.705Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855650705_dqwjag","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 19:54:10  🔍 用戶ID類型: string
2025-08-10 19:54:10  🔍 是否測試用戶: true
2025-08-10 19:54:10  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:54:10  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 19:54:10  ✅ 規則匹配成功: set_reminder
2025-08-10 19:54:10  {"ts":"2025-08-10T19:54:10.847Z","lvl":"info","stage":"nlp","traceId":"line_1754855650705_dqwjag","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:54:10  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:54:11  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:54:11  📊 規則提取置信度: 0.67
2025-08-10 19:54:11  🤖 啟用 AI 輔助提取...
2025-08-10 19:54:12  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:54:12  {"ts":"2025-08-10T19:54:12.257Z","lvl":"info","stage":"slots","traceId":"line_1754855650705_dqwjag","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:54:12  🎯 執行任務: set_reminder
2025-08-10 19:54:12  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:54:12  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:54:12  {"ts":"2025-08-10T19:54:12.257Z","lvl":"info","stage":"slots","traceId":"line_1754855650705_dqwjag","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:54:12  🎯 執行任務: set_reminder
2025-08-10 19:54:12  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:54:12  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 19:54:12  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 19:54:12  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 19:54:12  ✅ 提醒記錄已創建: GQglk9szLpV7F8WmYPBs
2025-08-10 19:54:12  ✅ 提醒設定成功: GQglk9szLpV7F8WmYPBs
2025-08-10 19:54:12  📊 任務執行結果: {
2025-08-10 19:54:12    success: true,
2025-08-10 19:54:12    code: 'REMINDER_SET_OK',
2025-08-10 19:54:12    message: '✅ 提醒設定完成！\n' +
2025-08-10 19:54:12      '📚 課程：小明 的 數學課\n' +
2025-08-10 19:54:12      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 19:54:12      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 19:54:12  }
2025-08-10 19:54:12  {"ts":"2025-08-10T19:54:12.548Z","lvl":"info","stage":"task","traceId":"line_1754855650705_dqwjag","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":291}
2025-08-10 19:54:12  🔍 檢查 replyToken: test-reply-token-1754855650423
2025-08-10 19:54:12  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:54:12  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 19:54:12  📚 課程：小明 的 數學課
2025-08-10 19:54:12  📅 上課時間：8/11 下午02:00
2025-08-10 19:54:12  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 19:54:12  {"ts":"2025-08-10T19:54:12.834Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855650705_dqwjag","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 19:54:25  📨 收到 1 個事件
2025-08-10 19:54:25  📋 事件類型: message
2025-08-10 19:54:25  🔍 完整事件 JSON: {
2025-08-10 19:54:25    "type": "message",
2025-08-10 19:54:25    "message": {
2025-08-10 19:54:25      "type": "text",
2025-08-10 19:54:25      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 19:54:25    },
2025-08-10 19:54:25    "source": {
2025-08-10 19:54:25      "userId": "U_test_user_qa",
2025-08-10 19:54:25      "type": "user"
2025-08-10 19:54:25    },
2025-08-10 19:54:25    "replyToken": "test-reply-token-1754855665399",
2025-08-10 19:54:25    "timestamp": 1754855665399
2025-08-10 19:54:25  }
2025-08-10 19:54:25  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:54:25  {"ts":"2025-08-10T19:54:25.677Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855665677_q8y1ci","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 19:54:25  🔍 用戶ID類型: string
2025-08-10 19:54:25  🔍 是否測試用戶: true
2025-08-10 19:54:25  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:54:25  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 19:54:25  ✅ 規則匹配成功: set_reminder
2025-08-10 19:54:25  {"ts":"2025-08-10T19:54:25.819Z","lvl":"info","stage":"nlp","traceId":"line_1754855665677_q8y1ci","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:54:25  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:54:26  📊 規則提取置信度: 0.67
2025-08-10 19:54:26  🤖 啟用 AI 輔助提取...
2025-08-10 19:54:27  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:54:27  {"ts":"2025-08-10T19:54:27.567Z","lvl":"info","stage":"slots","traceId":"line_1754855665677_q8y1ci","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 19:54:27  🎯 執行任務: set_reminder
2025-08-10 19:54:27  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:54:27  📊 任務執行結果: {
2025-08-10 19:54:27    success: false,
2025-08-10 19:54:27    code: 'MISSING_STUDENT',
2025-08-10 19:54:27    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 19:54:27  }
2025-08-10 19:54:27  {"ts":"2025-08-10T19:54:27.568Z","lvl":"info","stage":"task","traceId":"line_1754855665677_q8y1ci","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 19:54:27  🔍 檢查 replyToken: test-reply-token-1754855665399
2025-08-10 19:54:27  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:54:27  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 19:54:27  {"ts":"2025-08-10T19:54:27.852Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855665677_q8y1ci","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 19:54:40  📨 收到 1 個事件
2025-08-10 19:54:40  📋 事件類型: message
2025-08-10 19:54:40  🔍 完整事件 JSON: {
2025-08-10 19:54:40    "type": "message",
2025-08-10 19:54:40    "message": {
2025-08-10 19:54:40      "type": "text",
2025-08-10 19:54:40      "text": "提醒我小明的物理課"
2025-08-10 19:54:40    },
2025-08-10 19:54:40    "source": {
2025-08-10 19:54:40      "userId": "U_test_user_qa",
2025-08-10 19:54:40      "type": "user"
2025-08-10 19:54:40    },
2025-08-10 19:54:40    "replyToken": "test-reply-token-1754855680400",
2025-08-10 19:54:40    "timestamp": 1754855680400
2025-08-10 19:54:40  }
2025-08-10 19:54:40  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:54:40  {"ts":"2025-08-10T19:54:40.576Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855680576_fmorsn","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 19:54:40  🔍 用戶ID類型: string
2025-08-10 19:54:40  🔍 是否測試用戶: true
2025-08-10 19:54:40  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:54:40  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 19:54:40  ✅ 規則匹配成功: set_reminder
2025-08-10 19:54:40  {"ts":"2025-08-10T19:54:40.718Z","lvl":"info","stage":"nlp","traceId":"line_1754855680576_fmorsn","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:54:40  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:54:41  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:54:41  📊 規則提取置信度: 0.67
2025-08-10 19:54:41  🤖 啟用 AI 輔助提取...
2025-08-10 19:54:44  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:54:44  {"ts":"2025-08-10T19:54:44.105Z","lvl":"info","stage":"slots","traceId":"line_1754855680576_fmorsn","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:54:44  🎯 執行任務: set_reminder
2025-08-10 19:54:44  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:54:44  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 19:54:44  📊 任務執行結果: {
2025-08-10 19:54:44    success: false,
2025-08-10 19:54:44    code: 'NOT_FOUND',
2025-08-10 19:54:44  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:54:44  {"ts":"2025-08-10T19:54:44.105Z","lvl":"info","stage":"slots","traceId":"line_1754855680576_fmorsn","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:54:44  🎯 執行任務: set_reminder
2025-08-10 19:54:44  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:54:44  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 19:54:44  📊 任務執行結果: {
2025-08-10 19:54:44    success: false,
2025-08-10 19:54:44    code: 'NOT_FOUND',
2025-08-10 19:54:44    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 19:54:44  }
2025-08-10 19:54:44  {"ts":"2025-08-10T19:54:44.196Z","lvl":"info","stage":"task","traceId":"line_1754855680576_fmorsn","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":91}
2025-08-10 19:54:44  🔍 檢查 replyToken: test-reply-token-1754855680400
2025-08-10 19:54:44  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:54:44  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 19:54:44  {"ts":"2025-08-10T19:54:44.479Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855680576_fmorsn","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 19:54:51  📨 收到 1 個事件
2025-08-10 19:54:51  📋 事件類型: message
2025-08-10 19:54:51  🔍 完整事件 JSON: {
2025-08-10 19:54:51    "type": "message",
2025-08-10 19:54:51    "message": {
2025-08-10 19:54:51      "type": "text",
2025-08-10 19:54:51      "text": "小明的數學課改到下午4點"
2025-08-10 19:54:51    },
2025-08-10 19:54:51    "source": {
2025-08-10 19:54:51      "userId": "U_test_user_qa",
2025-08-10 19:54:51      "type": "user"
2025-08-10 19:54:51    },
2025-08-10 19:54:51    "replyToken": "test-reply-token-1754855691407",
2025-08-10 19:54:51    "timestamp": 1754855691407
2025-08-10 19:54:51  }
2025-08-10 19:54:51  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:54:51  {"ts":"2025-08-10T19:54:51.580Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855691580_uxqq04","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 19:54:51  🔍 用戶ID類型: string
2025-08-10 19:54:51  🔍 是否測試用戶: true
2025-08-10 19:54:51  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:54:51  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 19:54:51  ✅ 規則匹配成功: modify_course
2025-08-10 19:54:51  {"ts":"2025-08-10T19:54:51.722Z","lvl":"info","stage":"nlp","traceId":"line_1754855691580_uxqq04","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 19:54:51  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 19:54:51  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 19:54:52  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:54:52  📊 規則提取置信度: 0.00
2025-08-10 19:54:52  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:54:53  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 19:54:53  {"ts":"2025-08-10T19:54:53.377Z","lvl":"info","stage":"slots","traceId":"line_1754855691580_uxqq04","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 19:54:53  🎯 執行任務: modify_course
2025-08-10 19:54:53  ✏️ 執行修改操作任務: {
2025-08-10 19:54:53    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 19:54:53    userId: 'U_test_user_qa'
2025-08-10 19:54:53  }
2025-08-10 19:54:53  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 19:54:53  {"ts":"2025-08-10T19:54:53.448Z","lvl":"info","stage":"task","traceId":"line_1754855691580_uxqq04","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 19:54:53  🔍 檢查 replyToken: test-reply-token-1754855691407
2025-08-10 19:54:53  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:54:53  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 19:54:53  {"ts":"2025-08-10T19:54:53.730Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855691580_uxqq04","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 19:55:06  📨 收到 1 個事件
2025-08-10 19:55:06  📋 事件類型: message
2025-08-10 19:55:06  🔍 完整事件 JSON: {
2025-08-10 19:55:06    "type": "message",
2025-08-10 19:55:06    "message": {
2025-08-10 19:55:06      "type": "text",
2025-08-10 19:55:06      "text": "小明每天的晨練課改到早上7點"
2025-08-10 19:55:06    },
2025-08-10 19:55:06    "source": {
2025-08-10 19:55:06      "userId": "U_test_user_qa",
2025-08-10 19:55:06      "type": "user"
2025-08-10 19:55:06    },
2025-08-10 19:55:06    "replyToken": "test-reply-token-1754855706308",
2025-08-10 19:55:06    "timestamp": 1754855706308
2025-08-10 19:55:06  }
2025-08-10 19:55:06  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:55:06  {"ts":"2025-08-10T19:55:06.655Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855706655_8m1u8r","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 19:55:06  🔍 用戶ID類型: string
2025-08-10 19:55:06  🔍 是否測試用戶: true
2025-08-10 19:55:06  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:55:06  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 19:55:06  ✅ 規則匹配成功: create_recurring_course
2025-08-10 19:55:06  {"ts":"2025-08-10T19:55:06.797Z","lvl":"info","stage":"nlp","traceId":"line_1754855706655_8m1u8r","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 19:55:06  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 19:55:06  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 19:55:06  ✅ 時間解析成功: {
2025-08-10 19:55:06    input: '小明每天的晨練課改到早上7點',
2025-08-10 19:55:06    output: '07:00',
2025-08-10 19:55:06    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 19:55:06  }
2025-08-10 19:55:07  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:55:07  📊 規則提取置信度: 0.67
2025-08-10 19:55:07  🤖 啟用 AI 輔助提取...
2025-08-10 19:55:08  ✅ 最終 slots: {
2025-08-10 19:55:08    studentName: '小明',
2025-08-10 19:55:08    courseName: '晨練課',
2025-08-10 19:55:08    scheduleTime: '07:00',
2025-08-10 19:55:08    recurring: false
2025-08-10 19:55:08  }
2025-08-10 19:55:08  {"ts":"2025-08-10T19:55:08.473Z","lvl":"info","stage":"slots","traceId":"line_1754855706655_8m1u8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:08  🎯 執行任務: create_recurring_course
2025-08-10 19:55:08  🎯 開始處理新增課程任務
2025-08-10 19:55:08  📋 接收參數: {
2025-08-10 19:55:08    studentName: '小明',
2025-08-10 19:55:08  ✅ 最終 slots: {
2025-08-10 19:55:08    studentName: '小明',
2025-08-10 19:55:08    courseName: '晨練課',
2025-08-10 19:55:08    scheduleTime: '07:00',
2025-08-10 19:55:08    recurring: false
2025-08-10 19:55:08  }
2025-08-10 19:55:08  {"ts":"2025-08-10T19:55:08.473Z","lvl":"info","stage":"slots","traceId":"line_1754855706655_8m1u8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:08  🎯 執行任務: create_recurring_course
2025-08-10 19:55:08  🎯 開始處理新增課程任務
2025-08-10 19:55:08  📋 接收參數: {
2025-08-10 19:55:08    studentName: '小明',
2025-08-10 19:55:08    courseName: '晨練課',
2025-08-10 19:55:08    scheduleTime: '07:00',
2025-08-10 19:55:08    recurring: false
2025-08-10 19:55:08  }
2025-08-10 19:55:08  📊 任務執行結果: {
2025-08-10 19:55:08    success: false,
2025-08-10 19:55:08    code: 'MISSING_FIELDS',
2025-08-10 19:55:08    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 19:55:08    expectingInput: true,
2025-08-10 19:55:08    missingFields: [ '課程日期' ]
2025-08-10 19:55:08  }
2025-08-10 19:55:08  {"ts":"2025-08-10T19:55:08.615Z","lvl":"info","stage":"task","traceId":"line_1754855706655_8m1u8r","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 19:55:08  🔍 檢查 replyToken: test-reply-token-1754855706308
2025-08-10 19:55:08  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:55:08  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 19:55:08  
2025-08-10 19:55:08  範例：「小明每週三下午3點數學課」
2025-08-10 19:55:08  {"ts":"2025-08-10T19:55:08.898Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754855706655_8m1u8r","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 19:55:21  📨 收到 1 個事件
2025-08-10 19:55:21  📋 事件類型: message
2025-08-10 19:55:21  🔍 完整事件 JSON: {
2025-08-10 19:55:21    "type": "message",
2025-08-10 19:55:21    "message": {
2025-08-10 19:55:21      "type": "text",
2025-08-10 19:55:21      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 19:55:21    },
2025-08-10 19:55:21    "source": {
2025-08-10 19:55:21      "userId": "U_test_user_qa",
2025-08-10 19:55:21      "type": "user"
2025-08-10 19:55:21    },
2025-08-10 19:55:21    "replyToken": "test-reply-token-1754855721516",
2025-08-10 19:55:21    "timestamp": 1754855721516
2025-08-10 19:55:21  }
2025-08-10 19:55:21  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:55:21  {"ts":"2025-08-10T19:55:21.693Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 19:55:21  🔍 用戶ID類型: string
2025-08-10 19:55:21  🔍 是否測試用戶: true
2025-08-10 19:55:21  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:55:21  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 19:55:21  ✅ 規則匹配成功: create_recurring_course
2025-08-10 19:55:21  {"ts":"2025-08-10T19:55:21.835Z","lvl":"info","stage":"nlp","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 19:55:21  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 19:55:21  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 19:55:21  ✅ 時間解析成功: {
2025-08-10 19:55:21    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 19:55:21    output: '15:00',
2025-08-10 19:55:21    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 19:55:21  }
2025-08-10 19:55:22  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:55:22  📊 規則提取置信度: 0.67
2025-08-10 19:55:22  🤖 啟用 AI 輔助提取...
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
2025-08-10 19:55:23  ✅ 最終 slots: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  {"ts":"2025-08-10T19:55:23.193Z","lvl":"info","stage":"slots","traceId":"line_1754855721693_u4f46k","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:55:23  🎯 執行任務: create_recurring_course
2025-08-10 19:55:23  🎯 開始處理新增課程任務
2025-08-10 19:55:23  📋 接收參數: {
2025-08-10 19:55:23    studentName: 'Lumi',
2025-08-10 19:55:23    courseName: '鋼琴課',
2025-08-10 19:55:23    scheduleTime: '15:00',
2025-08-10 19:55:23    recurring: true
2025-08-10 19:55:23  }
2025-08-10 19:55:23  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:55:23  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:55:23      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:55:23      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:55:23      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:55:23      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:55:23      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:55:23      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:55:23      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:55:23      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:55:23      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:55:23      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:55:23    config: {
2025-08-10 19:55:23      url: URL {
2025-08-10 19:55:23        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        origin: 'https://www.googleapis.com',
2025-08-10 19:55:23        protocol: 'https:',
2025-08-10 19:55:23        username: '',
2025-08-10 19:55:23        password: '',
2025-08-10 19:55:23        host: 'www.googleapis.com',
2025-08-10 19:55:23        hostname: 'www.googleapis.com',
2025-08-10 19:55:23        port: '',
2025-08-10 19:55:23        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:55:23        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:55:23        searchParams: URLSearchParams {
2025-08-10 19:55:23          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23          'singleEvents' => 'true',
2025-08-10 19:55:23          'orderBy' => 'startTime' },
2025-08-10 19:55:23        hash: ''
2025-08-10 19:55:23      },
2025-08-10 19:55:23      method: 'GET',
2025-08-10 19:55:23      apiVersion: '',
2025-08-10 19:55:23      userAgentDirectives: [ [Object] ],
2025-08-10 19:55:23      paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23      headers: Headers {
2025-08-10 19:55:23        'accept-encoding': 'gzip',
2025-08-10 19:55:23        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      params: {
2025-08-10 19:55:23        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:55:23        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:55:23        singleEvents: true,
2025-08-10 19:55:23        orderBy: 'startTime'
2025-08-10 19:55:23      },
2025-08-10 19:55:23      validateStatus: [Function (anonymous)],
2025-08-10 19:55:23      retry: true,
2025-08-10 19:55:23      responseType: 'unknown',
2025-08-10 19:55:23      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:55:23      retryConfig: {
2025-08-10 19:55:23        currentRetryAttempt: 0,
2025-08-10 19:55:23        retry: 3,
2025-08-10 19:55:23        httpMethodsToRetry: [Array],
2025-08-10 19:55:23        noResponseRetries: 2,
2025-08-10 19:55:23        retryDelayMultiplier: 2,
2025-08-10 19:55:23        timeOfFirstRequest: 1754855723593,
2025-08-10 19:55:23        totalTimeout: 9007199254740991,
2025-08-10 19:55:23        maxRetryDelay: 9007199254740991,
2025-08-10 19:55:23        statusCodesToRetry: [Array]
2025-08-10 19:55:23      }
2025-08-10 19:55:23    },
2025-08-10 19:55:23    response: Response {
2025-08-10 19:55:23      size: 0,
2025-08-10 19:55:23      data: { error: [Object] },
2025-08-10 19:55:23      config: {
2025-08-10 19:55:23        url: URL {},
2025-08-10 19:55:23        method: 'GET',
2025-08-10 19:55:23        apiVersion: '',
2025-08-10 19:55:23        userAgentDirectives: [Array],
2025-08-10 19:55:23        paramsSerializer: [Function (anonymous)],
2025-08-10 19:55:23        headers: Headers {
2025-08-10 19:55:23          'accept-encoding': 'gzip',
2025-08-10 19:55:23          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:55:23          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:55:23          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:55:23        },
2025-08-10 19:55:23        params: [Object],
2025-08-10 19:55:23        validateStatus: [Function (anonymous)],
2025-08-10 19:55:23        retry: true,
2025-08-10 19:55:23        responseType: 'unknown',
2025-08-10 19:55:23        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:55:23      },
2025-08-10 19:55:23      Symbol(Body internals): {
