2025-08-10 22:23:01  📨 收到 1 個事件
2025-08-10 22:23:01  📋 事件類型: message
2025-08-10 22:23:01  🔍 完整事件 JSON: {
2025-08-10 22:23:01    "type": "message",
2025-08-10 22:23:01    "message": {
2025-08-10 22:23:01      "type": "text",
2025-08-10 22:23:01      "text": "小明的數學課什麼時候上？"
2025-08-10 22:23:01    },
2025-08-10 22:23:01    "source": {
2025-08-10 22:23:01      "userId": "U_test_user_qa",
2025-08-10 22:23:01      "type": "user"
2025-08-10 22:23:01    },
2025-08-10 22:23:01    "replyToken": "test-reply-token-1754864580966",
2025-08-10 22:23:01    "timestamp": 1754864580966
2025-08-10 22:23:01  }
2025-08-10 22:23:01  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:23:01  {"ts":"2025-08-10T22:23:01.238Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864581238_zj22vc","userId":"U_test_user_qa","textIn":"小明的數學課什麼時候上？"}
2025-08-10 22:23:01  🔍 用戶ID類型: string
2025-08-10 22:23:01  🔍 是否測試用戶: true
2025-08-10 22:23:01  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:23:01  🎯 開始解析意圖: 小明的數學課什麼時候上？ (用戶: U_test_user_qa)
2025-08-10 22:23:01  🤖 啟用 AI 備援識別...
2025-08-10 22:23:02  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 22:23:02  {"ts":"2025-08-10T22:23:02.206Z","lvl":"info","stage":"nlp","traceId":"line_1754864581238_zj22vc","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 22:23:02  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 22:23:02  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:23:02  📊 規則提取置信度: 0.50
2025-08-10 22:23:02  🤖 啟用 AI 輔助提取...
2025-08-10 22:23:03  🔧 自動修正提取結果: [ '移除無效課程名稱（問句殘片）: 課什麼時候上' ]
2025-08-10 22:23:03  ✅ 最終 slots: { studentName: '小明' }
2025-08-10 22:23:03  {"ts":"2025-08-10T22:23:03.467Z","lvl":"info","stage":"slots","traceId":"line_1754864581238_zj22vc","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName"]}
2025-08-10 22:23:03  🎯 執行任務: query_schedule
2025-08-10 22:23:03  🎯 開始處理查詢課表任務
2025-08-10 22:23:03  📋 接收參數: { studentName: '小明' }
2025-08-10 22:23:03  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:23:03  📚 查詢到 350 筆課程資料
2025-08-10 22:23:03  📚 查詢到 19 筆課程
2025-08-10 22:23:03  📊 任務執行結果: {
2025-08-10 22:23:03    success: true,
2025-08-10 22:23:03    code: 'QUERY_OK',
2025-08-10 22:23:03    message: '📅 小明本週的課程安排\n' +
2025-08-10 22:23:03      '\n' +
2025-08-10 22:23:03      '📆 8/9 (週六)\n' +
2025-08-10 22:23:03      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '\n' +
2025-08-10 22:23:03      '📆 8/10 (週日)\n' +
2025-08-10 22:23:03      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  下午2:00 - 數學課\n' +
2025-08-10 22:23:03      '  下午2:00 - 小明今天有什麼課？\n' +
2025-08-10 22:23:03      '\n' +
2025-08-10 22:23:03      '📆 8/11 (週一)\n' +
2025-08-10 22:23:03      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 英文課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  下午2:00 - 數學課\n' +
2025-08-10 22:23:03      '\n' +
2025-08-10 22:23:03      '📆 8/12 (週二)\n' +
2025-08-10 22:23:03      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  下午7:00 - 游泳課 🔄\n' +
2025-08-10 22:23:03      '\n' +
2025-08-10 22:23:03      '📆 8/13 (週三)\n' +
2025-08-10 22:23:03      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '\n' +
2025-08-10 22:23:03      '📆 8/14 (週四)\n' +
2025-08-10 22:23:03      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '\n' +
2025-08-10 22:23:03      '📆 8/15 (週五)\n' +
2025-08-10 22:23:03      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:03      '  上午8:00 - 晨練課 🔄',
2025-08-10 22:23:03    data: {
2025-08-10 22:23:03      courses: [
2025-08-10 22:23:03        [Object], [Object], [Object],
2025-08-10 22:23:03        [Object], [Object], [Object],
2025-08-10 22:23:03        [Object], [Object], [Object],
2025-08-10 22:23:03        [Object], [Object], [Object],
2025-08-10 22:23:03        [Object], [Object], [Object],
2025-08-10 22:23:03        [Object], [Object], [Object],
2025-08-10 22:23:03        [Object]
2025-08-10 22:23:03      ],
2025-08-10 22:23:03      courseCount: 19,
2025-08-10 22:23:03      dateRange: {
2025-08-10 22:23:03        startDate: '2025-08-10',
2025-08-10 22:23:03        endDate: '2025-08-16',
2025-08-10 22:23:03        description: '本週'
2025-08-10 22:23:03      }
2025-08-10 22:23:03    }
2025-08-10 22:23:03  }
2025-08-10 22:23:03  {"ts":"2025-08-10T22:23:03.894Z","lvl":"info","stage":"task","traceId":"line_1754864581238_zj22vc","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":427}
2025-08-10 22:23:04  🔍 檢查 replyToken: test-reply-token-1754864580966
2025-08-10 22:23:04  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:23:04  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/9 (週六)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04  🔍 檢查 replyToken: test-reply-token-1754864580966
2025-08-10 22:23:04  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:23:04  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/9 (週六)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/10 (週日)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04    下午2:00 - 數學課
2025-08-10 22:23:04    下午2:00 - 小明今天有什麼課？
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/11 (週一)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 英文課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04    下午2:00 - 數學課
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/12 (週二)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04    下午7:00 - 游泳課 🔄
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/13 (週三)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/14 (週四)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04  
2025-08-10 22:23:04  📆 8/15 (週五)
2025-08-10 22:23:04    上午7:00 - 晨練課 🔄
2025-08-10 22:23:04    上午8:00 - 晨練課 🔄
2025-08-10 22:23:04  {"ts":"2025-08-10T22:23:04.181Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864581238_zj22vc","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n  下午2:00 - 數學課\n  下午2:00 - 小明今天有什麼課？\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 英文課 🔄\n  上午8:00 - 晨練課 🔄\n  下午2:00 - 數學課\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n  下午7:00 - 游泳課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 22:23:16  📨 收到 1 個事件
2025-08-10 22:23:16  📋 事件類型: message
2025-08-10 22:23:16  🔍 完整事件 JSON: {
2025-08-10 22:23:16    "type": "message",
2025-08-10 22:23:16    "message": {
2025-08-10 22:23:16      "type": "text",
2025-08-10 22:23:16      "text": "小明的晨練課每天幾點？"
2025-08-10 22:23:16    },
2025-08-10 22:23:16    "source": {
2025-08-10 22:23:16      "userId": "U_test_user_qa",
2025-08-10 22:23:16      "type": "user"
2025-08-10 22:23:16    },
2025-08-10 22:23:16    "replyToken": "test-reply-token-1754864596731",
2025-08-10 22:23:16    "timestamp": 1754864596731
2025-08-10 22:23:16  }
2025-08-10 22:23:16  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:23:16  {"ts":"2025-08-10T22:23:16.928Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864596928_wc5m44","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 22:23:16  🔍 用戶ID類型: string
2025-08-10 22:23:16  🔍 是否測試用戶: true
2025-08-10 22:23:16  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:23:16  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 22:23:17  🤖 啟用 AI 備援識別...
2025-08-10 22:23:17  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 22:23:17  {"ts":"2025-08-10T22:23:17.742Z","lvl":"info","stage":"nlp","traceId":"line_1754864596928_wc5m44","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 22:23:17  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 22:23:18  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:23:18  📊 規則提取置信度: 0.50
2025-08-10 22:23:18  🤖 啟用 AI 輔助提取...
2025-08-10 22:23:18  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:23:18  {"ts":"2025-08-10T22:23:18.913Z","lvl":"info","stage":"slots","traceId":"line_1754864596928_wc5m44","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 22:23:18  🎯 執行任務: query_schedule
2025-08-10 22:23:18  🎯 開始處理查詢課表任務
2025-08-10 22:23:18  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:23:18  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:23:19  📚 查詢到 350 筆課程資料
2025-08-10 22:23:19  📚 查詢到 14 筆課程
2025-08-10 22:23:19  📊 任務執行結果: {
2025-08-10 22:23:19    success: true,
2025-08-10 22:23:19    code: 'QUERY_OK',
2025-08-10 22:23:19    message: '📅 小明本週的課程安排\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/9 (週六)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/10 (週日)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/11 (週一)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/12 (週二)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/13 (週三)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/14 (週四)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19  📚 查詢到 350 筆課程資料
2025-08-10 22:23:19  📚 查詢到 14 筆課程
2025-08-10 22:23:19  📊 任務執行結果: {
2025-08-10 22:23:19    success: true,
2025-08-10 22:23:19    code: 'QUERY_OK',
2025-08-10 22:23:19    message: '📅 小明本週的課程安排\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/9 (週六)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/10 (週日)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/11 (週一)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/12 (週二)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/13 (週三)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/14 (週四)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '\n' +
2025-08-10 22:23:19      '📆 8/15 (週五)\n' +
2025-08-10 22:23:19      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:23:19      '  上午8:00 - 晨練課 🔄',
2025-08-10 22:23:19    data: {
2025-08-10 22:23:19      courses: [
2025-08-10 22:23:19        [Object], [Object],
2025-08-10 22:23:19        [Object], [Object],
2025-08-10 22:23:19        [Object], [Object],
2025-08-10 22:23:19        [Object], [Object],
2025-08-10 22:23:19        [Object], [Object],
2025-08-10 22:23:19        [Object], [Object],
2025-08-10 22:23:19        [Object], [Object]
2025-08-10 22:23:19      ],
2025-08-10 22:23:19      courseCount: 14,
2025-08-10 22:23:19      dateRange: {
2025-08-10 22:23:19        startDate: '2025-08-10',
2025-08-10 22:23:19        endDate: '2025-08-16',
2025-08-10 22:23:19        description: '本週'
2025-08-10 22:23:19      }
2025-08-10 22:23:19    }
2025-08-10 22:23:19  }
2025-08-10 22:23:19  {"ts":"2025-08-10T22:23:19.245Z","lvl":"info","stage":"task","traceId":"line_1754864596928_wc5m44","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":332}
2025-08-10 22:23:19  🔍 檢查 replyToken: test-reply-token-1754864596731
2025-08-10 22:23:19  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:23:19  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 22:23:19  
2025-08-10 22:23:19  📆 8/9 (週六)
2025-08-10 22:23:19    上午7:00 - 晨練課 🔄
2025-08-10 22:23:19    上午8:00 - 晨練課 🔄
2025-08-10 22:23:19  
2025-08-10 22:23:19  📆 8/10 (週日)
2025-08-10 22:23:19    上午7:00 - 晨練課 🔄
2025-08-10 22:23:19    上午8:00 - 晨練課 🔄
2025-08-10 22:23:19  
2025-08-10 22:23:19  📆 8/11 (週一)
2025-08-10 22:23:19    上午7:00 - 晨練課 🔄
2025-08-10 22:23:19    上午8:00 - 晨練課 🔄
2025-08-10 22:23:19  
2025-08-10 22:23:19  📆 8/12 (週二)
2025-08-10 22:23:19    上午7:00 - 晨練課 🔄
2025-08-10 22:23:19    上午8:00 - 晨練課 🔄
2025-08-10 22:23:19  
2025-08-10 22:23:19  📆 8/13 (週三)
2025-08-10 22:23:19    上午7:00 - 晨練課 🔄
2025-08-10 22:23:19    上午8:00 - 晨練課 🔄
2025-08-10 22:23:19  
2025-08-10 22:23:19  📆 8/14 (週四)
2025-08-10 22:23:19    上午7:00 - 晨練課 🔄
2025-08-10 22:23:19    上午8:00 - 晨練課 🔄
2025-08-10 22:23:19  
2025-08-10 22:23:19  📆 8/15 (週五)
2025-08-10 22:23:19    上午7:00 - 晨練課 🔄
2025-08-10 22:23:19    上午8:00 - 晨練課 🔄
2025-08-10 22:23:19  {"ts":"2025-08-10T22:23:19.539Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864596928_wc5m44","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 22:23:32  📨 收到 1 個事件
2025-08-10 22:23:32  📋 事件類型: message
2025-08-10 22:23:32  🔍 完整事件 JSON: {
2025-08-10 22:23:32    "type": "message",
2025-08-10 22:23:32    "message": {
2025-08-10 22:23:32      "type": "text",
2025-08-10 22:23:32      "text": "查詢Lumi的重複課程"
2025-08-10 22:23:32    },
2025-08-10 22:23:32    "source": {
2025-08-10 22:23:32      "userId": "U_test_user_qa",
2025-08-10 22:23:32      "type": "user"
2025-08-10 22:23:32    },
2025-08-10 22:23:32    "replyToken": "test-reply-token-1754864611911",
2025-08-10 22:23:32    "timestamp": 1754864611911
2025-08-10 22:23:32  }
2025-08-10 22:23:32  📨 收到 1 個事件
2025-08-10 22:23:32  📋 事件類型: message
2025-08-10 22:23:32  🔍 完整事件 JSON: {
2025-08-10 22:23:32    "type": "message",
2025-08-10 22:23:32    "message": {
2025-08-10 22:23:32      "type": "text",
2025-08-10 22:23:32      "text": "查詢Lumi的重複課程"
2025-08-10 22:23:32    },
2025-08-10 22:23:32    "source": {
2025-08-10 22:23:32      "userId": "U_test_user_qa",
2025-08-10 22:23:32      "type": "user"
2025-08-10 22:23:32    },
2025-08-10 22:23:32    "replyToken": "test-reply-token-1754864611911",
2025-08-10 22:23:32    "timestamp": 1754864611911
2025-08-10 22:23:32  }
2025-08-10 22:23:32  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:23:32  {"ts":"2025-08-10T22:23:32.082Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864612082_uh20m7","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 22:23:32  🔍 用戶ID類型: string
2025-08-10 22:23:32  🔍 是否測試用戶: true
2025-08-10 22:23:32  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:23:32  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 22:23:32  ✅ 規則匹配成功: query_schedule
2025-08-10 22:23:32  {"ts":"2025-08-10T22:23:32.225Z","lvl":"info","stage":"nlp","traceId":"line_1754864612082_uh20m7","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 22:23:32  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 22:23:32  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:23:32  📊 規則提取置信度: 0.50
2025-08-10 22:23:32  🤖 啟用 AI 輔助提取...
2025-08-10 22:23:33  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 22:23:33  {"ts":"2025-08-10T22:23:33.789Z","lvl":"info","stage":"slots","traceId":"line_1754864612082_uh20m7","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 22:23:33  🎯 執行任務: query_schedule
2025-08-10 22:23:33  🎯 開始處理查詢課表任務
2025-08-10 22:23:33  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 22:23:33  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:23:33  📚 查詢到 342 筆課程資料
2025-08-10 22:23:34  📚 查詢到 0 筆課程
2025-08-10 22:23:34  📊 任務執行結果: {
2025-08-10 22:23:34    success: true,
2025-08-10 22:23:34    code: 'QUERY_OK_EMPTY',
2025-08-10 22:23:34    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 22:23:34      '\n' +
2025-08-10 22:23:34      '💡 您可以：\n' +
2025-08-10 22:23:34      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 22:23:34      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 22:23:34      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 22:23:34    data: {
2025-08-10 22:23:34      courseCount: 0,
2025-08-10 22:23:34      dateRange: {
2025-08-10 22:23:34        startDate: '2025-08-10',
2025-08-10 22:23:34        endDate: '2025-08-16',
2025-08-10 22:23:34        description: '本週'
2025-08-10 22:23:34      }
2025-08-10 22:23:34    }
2025-08-10 22:23:34  }
2025-08-10 22:23:34  {"ts":"2025-08-10T22:23:34.093Z","lvl":"info","stage":"task","traceId":"line_1754864612082_uh20m7","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":304}
2025-08-10 22:23:34  🔍 檢查 replyToken: test-reply-token-1754864611911
2025-08-10 22:23:34  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:23:34  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 22:23:34  
2025-08-10 22:23:34  💡 您可以：
2025-08-10 22:23:34  • 新增課程：「小明明天上午10點英文課」
2025-08-10 22:23:34  • 查詢其他時間：「小明下週的課表」
2025-08-10 22:23:34  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 22:23:34  {"ts":"2025-08-10T22:23:34.380Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864612082_uh20m7","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 22:23:46  📨 收到 1 個事件
2025-08-10 22:23:46  📋 事件類型: message
2025-08-10 22:23:46  🔍 完整事件 JSON: {
2025-08-10 22:23:46    "type": "message",
2025-08-10 22:23:46    "message": {
2025-08-10 22:23:46      "type": "text",
2025-08-10 22:23:46      "text": "今天小明的數學課學了分數加減法"
2025-08-10 22:23:46    },
2025-08-10 22:23:46    "source": {
2025-08-10 22:23:46      "userId": "U_test_user_qa",
2025-08-10 22:23:46      "type": "user"
2025-08-10 22:23:46    },
2025-08-10 22:23:46    "replyToken": "test-reply-token-1754864626868",
2025-08-10 22:23:46    "timestamp": 1754864626868
2025-08-10 22:23:46  }
2025-08-10 22:23:46  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:23:47  {"ts":"2025-08-10T22:23:47.037Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864627037_bg6d1x","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 22:23:47  🔍 用戶ID類型: string
2025-08-10 22:23:47  🔍 是否測試用戶: true
2025-08-10 22:23:47  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:23:47  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 22:23:47  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:23:47  {"ts":"2025-08-10T22:23:47.179Z","lvl":"info","stage":"nlp","traceId":"line_1754864627037_bg6d1x","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:23:47  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:23:47  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:23:47  📊 規則提取置信度: 1.00
2025-08-10 22:23:47  🤖 啟用 AI 輔助提取...
2025-08-10 22:23:48  ✅ 最終 slots: {
2025-08-10 22:23:48    studentName: '小明',
2025-08-10 22:23:48    courseName: '數學課',
2025-08-10 22:23:48    timeReference: 'today',
2025-08-10 22:23:48    content: '分數加減法'
2025-08-10 22:23:48  }
2025-08-10 22:23:48  {"ts":"2025-08-10T22:23:48.388Z","lvl":"info","stage":"slots","traceId":"line_1754864627037_bg6d1x","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:23:48  🎯 執行任務: record_content
2025-08-10 22:23:48  📝 開始處理記錄課程內容任務: {
2025-08-10 22:23:48    studentName: '小明',
2025-08-10 22:23:48  ✅ 最終 slots: {
2025-08-10 22:23:48    studentName: '小明',
2025-08-10 22:23:48    courseName: '數學課',
2025-08-10 22:23:48    timeReference: 'today',
2025-08-10 22:23:48    content: '分數加減法'
2025-08-10 22:23:48  }
2025-08-10 22:23:48  {"ts":"2025-08-10T22:23:48.388Z","lvl":"info","stage":"slots","traceId":"line_1754864627037_bg6d1x","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:23:48  🎯 執行任務: record_content
2025-08-10 22:23:48  📝 開始處理記錄課程內容任務: {
2025-08-10 22:23:48    studentName: '小明',
2025-08-10 22:23:48    courseName: '數學課',
2025-08-10 22:23:48    timeReference: 'today',
2025-08-10 22:23:48    content: '分數加減法'
2025-08-10 22:23:48  }
2025-08-10 22:23:48  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 22:23:48  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 22:23:48  ✅ 文檔已添加到 course_contents: lmGxJyBihxEQb1v1T9FW
2025-08-10 22:23:48  ✅ 課程內容記錄已儲存: lmGxJyBihxEQb1v1T9FW
2025-08-10 22:23:48  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 22:23:48  📊 任務執行結果: {
2025-08-10 22:23:48    success: true,
2025-08-10 22:23:48    code: 'RECORD_CONTENT_OK',
2025-08-10 22:23:48    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 22:23:48    data: {
2025-08-10 22:23:48      recordId: 'lmGxJyBihxEQb1v1T9FW',
2025-08-10 22:23:48      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 22:23:48      targetDate: '2025-08-10'
2025-08-10 22:23:48    }
2025-08-10 22:23:48  }
2025-08-10 22:23:48  {"ts":"2025-08-10T22:23:48.925Z","lvl":"info","stage":"task","traceId":"line_1754864627037_bg6d1x","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":537}
2025-08-10 22:23:49  🔍 檢查 replyToken: test-reply-token-1754864626868
2025-08-10 22:23:49  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:23:49  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:23:49  📚 課程：小明 - 數學課
2025-08-10 22:23:49  📅 日期：2025-08-10
2025-08-10 22:23:49  💬 內容：分數加減法
2025-08-10 22:23:49  {"ts":"2025-08-10T22:23:49.210Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864627037_bg6d1x","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 22:24:01  📨 收到 1 個事件
2025-08-10 22:24:01  📋 事件類型: message
2025-08-10 22:24:01  🔍 完整事件 JSON: {
2025-08-10 22:24:01    "type": "message",
2025-08-10 22:24:01    "message": {
2025-08-10 22:24:01      "type": "text",
2025-08-10 22:24:01      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 22:24:01    },
2025-08-10 22:24:01    "source": {
2025-08-10 22:24:01      "userId": "U_test_user_qa",
2025-08-10 22:24:01      "type": "user"
2025-08-10 22:24:01    },
2025-08-10 22:24:01    "replyToken": "test-reply-token-1754864641774",
2025-08-10 22:24:01    "timestamp": 1754864641774
2025-08-10 22:24:01  }
2025-08-10 22:24:01  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:24:01  {"ts":"2025-08-10T22:24:01.957Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864641957_bxylai","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 22:24:01  🔍 用戶ID類型: string
2025-08-10 22:24:01  🔍 是否測試用戶: true
2025-08-10 22:24:01  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:24:01  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 22:24:02  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:24:02  {"ts":"2025-08-10T22:24:02.098Z","lvl":"info","stage":"nlp","traceId":"line_1754864641957_bxylai","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:24:02  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:24:02  📊 規則提取置信度: 0.33
2025-08-10 22:24:02  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 22:24:03  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 22:24:03  {"ts":"2025-08-10T22:24:03.997Z","lvl":"info","stage":"slots","traceId":"line_1754864641957_bxylai","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 22:24:03  🎯 執行任務: record_content
2025-08-10 22:24:03  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 22:24:04  ✅ 文檔已添加到 course_contents: VjZIeSdGiQxczqDBrJNh
2025-08-10 22:24:04  ✅ 課程內容記錄已儲存: VjZIeSdGiQxczqDBrJNh
2025-08-10 22:24:04  📊 任務執行結果: {
2025-08-10 22:24:04    success: true,
2025-08-10 22:24:04    code: 'RECORD_CONTENT_OK',
2025-08-10 22:24:04    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 22:24:04    data: {
2025-08-10 22:24:04      recordId: 'VjZIeSdGiQxczqDBrJNh',
2025-08-10 22:24:04      courseId: null,
2025-08-10 22:24:04      targetDate: '2025-08-09'
2025-08-10 22:24:04    }
2025-08-10 22:24:04  }
2025-08-10 22:24:04  {"ts":"2025-08-10T22:24:04.081Z","lvl":"info","stage":"task","traceId":"line_1754864641957_bxylai","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":84}
2025-08-10 22:24:04  🔍 檢查 replyToken: test-reply-token-1754864641774
2025-08-10 22:24:04  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:24:04  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:24:04  📝 記錄為獨立內容
2025-08-10 22:24:04  📚 課程：鋼琴課
2025-08-10 22:24:04  📅 日期：2025-08-09
2025-08-10 22:24:04  💬 內容：練習了小星星
2025-08-10 22:24:04  {"ts":"2025-08-10T22:24:04.364Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864641957_bxylai","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 22:24:17  📨 收到 1 個事件
2025-08-10 22:24:17  📋 事件類型: message
2025-08-10 22:24:17  🔍 完整事件 JSON: {
2025-08-10 22:24:17    "type": "message",
2025-08-10 22:24:17    "message": {
2025-08-10 22:24:17      "type": "text",
2025-08-10 22:24:17      "text": "小明昨天數學課學了什麼？"
2025-08-10 22:24:17    },
2025-08-10 22:24:17    "source": {
2025-08-10 22:24:17      "userId": "U_test_user_qa",
2025-08-10 22:24:17      "type": "user"
2025-08-10 22:24:17    },
2025-08-10 22:24:17  📨 收到 1 個事件
2025-08-10 22:24:17  📋 事件類型: message
2025-08-10 22:24:17  🔍 完整事件 JSON: {
2025-08-10 22:24:17    "type": "message",
2025-08-10 22:24:17    "message": {
2025-08-10 22:24:17      "type": "text",
2025-08-10 22:24:17      "text": "小明昨天數學課學了什麼？"
2025-08-10 22:24:17    },
2025-08-10 22:24:17    "source": {
2025-08-10 22:24:17      "userId": "U_test_user_qa",
2025-08-10 22:24:17      "type": "user"
2025-08-10 22:24:17    },
2025-08-10 22:24:17    "replyToken": "test-reply-token-1754864656928",
2025-08-10 22:24:17    "timestamp": 1754864656928
2025-08-10 22:24:17  }
2025-08-10 22:24:17  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:24:17  {"ts":"2025-08-10T22:24:17.104Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864657104_xwo8x1","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 22:24:17  🔍 用戶ID類型: string
2025-08-10 22:24:17  🔍 是否測試用戶: true
2025-08-10 22:24:17  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:24:17  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 22:24:17  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:24:17  {"ts":"2025-08-10T22:24:17.246Z","lvl":"info","stage":"nlp","traceId":"line_1754864657104_xwo8x1","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:24:17  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:24:17  📊 規則提取置信度: 0.67
2025-08-10 22:24:17  🤖 啟用 AI 輔助提取...
2025-08-10 22:24:18  ✅ 最終 slots: {
2025-08-10 22:24:18    studentName: '小明',
2025-08-10 22:24:18    courseName: '數學課',
2025-08-10 22:24:18    timeReference: 'yesterday',
2025-08-10 22:24:18    content: '什麼？'
2025-08-10 22:24:18  }
2025-08-10 22:24:18  {"ts":"2025-08-10T22:24:18.704Z","lvl":"info","stage":"slots","traceId":"line_1754864657104_xwo8x1","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:24:18  🎯 執行任務: record_content
2025-08-10 22:24:18  📝 開始處理記錄課程內容任務: {
2025-08-10 22:24:18    studentName: '小明',
2025-08-10 22:24:18    courseName: '數學課',
2025-08-10 22:24:18    timeReference: 'yesterday',
2025-08-10 22:24:18    content: '什麼？'
2025-08-10 22:24:18  }
2025-08-10 22:24:18  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 22:24:18  ❓ 未找到完全匹配的課程
2025-08-10 22:24:18  ✅ 文檔已添加到 course_contents: BeKpautJIE8OEfgQ2iur
2025-08-10 22:24:18  ✅ 課程內容記錄已儲存: BeKpautJIE8OEfgQ2iur
2025-08-10 22:24:18  📊 任務執行結果: {
2025-08-10 22:24:18    success: true,
2025-08-10 22:24:18    code: 'RECORD_CONTENT_OK',
2025-08-10 22:24:18    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 22:24:18    data: {
2025-08-10 22:24:18      recordId: 'BeKpautJIE8OEfgQ2iur',
2025-08-10 22:24:18      courseId: null,
2025-08-10 22:24:18      targetDate: '2025-08-09'
2025-08-10 22:24:18    }
2025-08-10 22:24:18  }
2025-08-10 22:24:18  {"ts":"2025-08-10T22:24:18.927Z","lvl":"info","stage":"task","traceId":"line_1754864657104_xwo8x1","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":223}
2025-08-10 22:24:19  🔍 檢查 replyToken: test-reply-token-1754864656928
2025-08-10 22:24:19  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:24:19  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:24:19  📝 記錄為獨立內容
2025-08-10 22:24:19  👨‍🎓 學生：小明
2025-08-10 22:24:19  📚 課程：數學課
2025-08-10 22:24:19  📅 日期：2025-08-09
2025-08-10 22:24:19  💬 內容：什麼？
2025-08-10 22:24:19  {"ts":"2025-08-10T22:24:19.210Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864657104_xwo8x1","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 22:24:26  📨 收到 1 個事件
2025-08-10 22:24:26  📋 事件類型: message
2025-08-10 22:24:26  🔍 完整事件 JSON: {
2025-08-10 22:24:26    "type": "message",
2025-08-10 22:24:26    "message": {
2025-08-10 22:24:26      "type": "text",
2025-08-10 22:24:26      "text": "記錄小明今天化學課的內容"
2025-08-10 22:24:26    },
2025-08-10 22:24:26    "source": {
2025-08-10 22:24:26      "userId": "U_test_user_qa",
2025-08-10 22:24:26      "type": "user"
2025-08-10 22:24:26    },
2025-08-10 22:24:26    "replyToken": "test-reply-token-1754864666161",
2025-08-10 22:24:26    "timestamp": 1754864666161
2025-08-10 22:24:26  }
2025-08-10 22:24:26  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:24:26  {"ts":"2025-08-10T22:24:26.330Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864666330_lh05yk","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 22:24:26  🔍 用戶ID類型: string
2025-08-10 22:24:26  🔍 是否測試用戶: true
2025-08-10 22:24:26  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:24:26  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 22:24:26  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:24:26  {"ts":"2025-08-10T22:24:26.471Z","lvl":"info","stage":"nlp","traceId":"line_1754864666330_lh05yk","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:24:26  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:24:26  📊 規則提取置信度: 0.67
2025-08-10 22:24:26  🤖 啟用 AI 輔助提取...
2025-08-10 22:24:28  ✅ 最終 slots: {
2025-08-10 22:24:28    studentName: '小明',
2025-08-10 22:24:28    courseName: '化學課',
2025-08-10 22:24:28    timeReference: 'today',
2025-08-10 22:24:28    content: '小明今天化學課的內容'
2025-08-10 22:24:28  }
2025-08-10 22:24:28  {"ts":"2025-08-10T22:24:28.029Z","lvl":"info","stage":"slots","traceId":"line_1754864666330_lh05yk","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:24:28  🎯 執行任務: record_content
2025-08-10 22:24:28  📝 開始處理記錄課程內容任務: {
2025-08-10 22:24:28    studentName: '小明',
2025-08-10 22:24:28  ✅ 最終 slots: {
2025-08-10 22:24:28    studentName: '小明',
2025-08-10 22:24:28    courseName: '化學課',
2025-08-10 22:24:28    timeReference: 'today',
2025-08-10 22:24:28    content: '小明今天化學課的內容'
2025-08-10 22:24:28  }
2025-08-10 22:24:28  {"ts":"2025-08-10T22:24:28.029Z","lvl":"info","stage":"slots","traceId":"line_1754864666330_lh05yk","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:24:28  🎯 執行任務: record_content
2025-08-10 22:24:28  📝 開始處理記錄課程內容任務: {
2025-08-10 22:24:28    studentName: '小明',
2025-08-10 22:24:28    courseName: '化學課',
2025-08-10 22:24:28    timeReference: 'today',
2025-08-10 22:24:28    content: '小明今天化學課的內容'
2025-08-10 22:24:28  }
2025-08-10 22:24:28  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 22:24:28  ❓ 未找到完全匹配的課程
2025-08-10 22:24:28  ✅ 文檔已添加到 course_contents: QvNHOfUcvkudkwuTlaL1
2025-08-10 22:24:28  ✅ 課程內容記錄已儲存: QvNHOfUcvkudkwuTlaL1
2025-08-10 22:24:28  📊 任務執行結果: {
2025-08-10 22:24:28    success: true,
2025-08-10 22:24:28    code: 'RECORD_CONTENT_OK',
2025-08-10 22:24:28    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 22:24:28      '📝 記錄為獨立內容\n' +
2025-08-10 22:24:28      '👨‍🎓 學生：小明\n' +
2025-08-10 22:24:28      '📚 課程：化學課\n' +
2025-08-10 22:24:28      '📅 日期：2025-08-10\n' +
2025-08-10 22:24:28      '💬 內容：小明今天化學課的內容',
2025-08-10 22:24:28    data: {
2025-08-10 22:24:28      recordId: 'QvNHOfUcvkudkwuTlaL1',
2025-08-10 22:24:28      courseId: null,
2025-08-10 22:24:28      targetDate: '2025-08-10'
2025-08-10 22:24:28    }
2025-08-10 22:24:28  }
2025-08-10 22:24:28  {"ts":"2025-08-10T22:24:28.382Z","lvl":"info","stage":"task","traceId":"line_1754864666330_lh05yk","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":353}
2025-08-10 22:24:28  🔍 檢查 replyToken: test-reply-token-1754864666161
2025-08-10 22:24:28  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:24:28  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:24:28  📝 記錄為獨立內容
2025-08-10 22:24:28  👨‍🎓 學生：小明
2025-08-10 22:24:28  📚 課程：化學課
2025-08-10 22:24:28  📅 日期：2025-08-10
2025-08-10 22:24:28  💬 內容：小明今天化學課的內容
2025-08-10 22:24:28  {"ts":"2025-08-10T22:24:28.666Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864666330_lh05yk","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 22:24:41  📨 收到 1 個事件
2025-08-10 22:24:41  📋 事件類型: message
2025-08-10 22:24:41  🔍 完整事件 JSON: {
2025-08-10 22:24:41    "type": "message",
2025-08-10 22:24:41    "message": {
2025-08-10 22:24:41      "type": "text",
2025-08-10 22:24:41      "text": "提醒我小明的數學課"
2025-08-10 22:24:41    },
2025-08-10 22:24:41    "source": {
2025-08-10 22:24:41      "userId": "U_test_user_qa",
2025-08-10 22:24:41      "type": "user"
2025-08-10 22:24:41    },
2025-08-10 22:24:41    "replyToken": "test-reply-token-1754864681158",
2025-08-10 22:24:41    "timestamp": 1754864681158
2025-08-10 22:24:41  }
2025-08-10 22:24:41  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:24:41  {"ts":"2025-08-10T22:24:41.334Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864681334_a05wqm","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 22:24:41  🔍 用戶ID類型: string
2025-08-10 22:24:41  🔍 是否測試用戶: true
2025-08-10 22:24:41  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:24:41  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 22:24:41  ✅ 規則匹配成功: set_reminder
2025-08-10 22:24:41  {"ts":"2025-08-10T22:24:41.476Z","lvl":"info","stage":"nlp","traceId":"line_1754864681334_a05wqm","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:24:41  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:24:41  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:24:41  📊 規則提取置信度: 0.67
2025-08-10 22:24:41  🤖 啟用 AI 輔助提取...
2025-08-10 22:24:43  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 22:24:43  {"ts":"2025-08-10T22:24:43.213Z","lvl":"info","stage":"slots","traceId":"line_1754864681334_a05wqm","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 22:24:43  🎯 執行任務: set_reminder
2025-08-10 22:24:43  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 22:24:43  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 22:24:43  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 22:24:43  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 22:24:43  ✅ 提醒記錄已創建: gPtxLKgnYoFpBlE7GiuQ
2025-08-10 22:24:43  ✅ 提醒設定成功: gPtxLKgnYoFpBlE7GiuQ
2025-08-10 22:24:43  📊 任務執行結果: {
2025-08-10 22:24:43    success: true,
2025-08-10 22:24:43    code: 'REMINDER_SET_OK',
2025-08-10 22:24:43    message: '✅ 提醒設定完成！\n' +
2025-08-10 22:24:43      '📚 課程：小明 的 數學課\n' +
2025-08-10 22:24:43      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 22:24:43      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 22:24:43  }
2025-08-10 22:24:43  {"ts":"2025-08-10T22:24:43.499Z","lvl":"info","stage":"task","traceId":"line_1754864681334_a05wqm","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":286}
2025-08-10 22:24:43  🔍 檢查 replyToken: test-reply-token-1754864681158
2025-08-10 22:24:43  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:24:43  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 22:24:43  📚 課程：小明 的 數學課
2025-08-10 22:24:43  📅 上課時間：8/11 下午02:00
2025-08-10 22:24:43  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 22:24:43  {"ts":"2025-08-10T22:24:43.785Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864681334_a05wqm","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 22:24:56  📨 收到 1 個事件
2025-08-10 22:24:56  📋 事件類型: message
2025-08-10 22:24:56  🔍 完整事件 JSON: {
2025-08-10 22:24:56    "type": "message",
2025-08-10 22:24:56    "message": {
2025-08-10 22:24:56  📨 收到 1 個事件
2025-08-10 22:24:56  📋 事件類型: message
2025-08-10 22:24:56  🔍 完整事件 JSON: {
2025-08-10 22:24:56    "type": "message",
2025-08-10 22:24:56    "message": {
2025-08-10 22:24:56      "type": "text",
2025-08-10 22:24:56      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 22:24:56    },
2025-08-10 22:24:56    "source": {
2025-08-10 22:24:56      "userId": "U_test_user_qa",
2025-08-10 22:24:56      "type": "user"
2025-08-10 22:24:56    },
2025-08-10 22:24:56    "replyToken": "test-reply-token-1754864696198",
2025-08-10 22:24:56    "timestamp": 1754864696198
2025-08-10 22:24:56  }
2025-08-10 22:24:56  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:24:56  {"ts":"2025-08-10T22:24:56.470Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864696470_3les6m","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 22:24:56  🔍 用戶ID類型: string
2025-08-10 22:24:56  🔍 是否測試用戶: true
2025-08-10 22:24:56  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:24:56  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 22:24:56  ✅ 規則匹配成功: set_reminder
2025-08-10 22:24:56  {"ts":"2025-08-10T22:24:56.613Z","lvl":"info","stage":"nlp","traceId":"line_1754864696470_3les6m","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:24:56  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:24:56  📊 規則提取置信度: 0.67
2025-08-10 22:24:56  🤖 啟用 AI 輔助提取...
2025-08-10 22:24:58  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 22:24:58  {"ts":"2025-08-10T22:24:58.224Z","lvl":"info","stage":"slots","traceId":"line_1754864696470_3les6m","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 22:24:58  🎯 執行任務: set_reminder
2025-08-10 22:24:58  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 22:24:58  📊 任務執行結果: {
2025-08-10 22:24:58    success: false,
2025-08-10 22:24:58    code: 'MISSING_STUDENT',
2025-08-10 22:24:58    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 22:24:58  }
2025-08-10 22:24:58  {"ts":"2025-08-10T22:24:58.224Z","lvl":"info","stage":"task","traceId":"line_1754864696470_3les6m","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 22:24:58  🔍 檢查 replyToken: test-reply-token-1754864696198
2025-08-10 22:24:58  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:24:58  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 22:24:58  {"ts":"2025-08-10T22:24:58.510Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864696470_3les6m","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 22:25:11  📨 收到 1 個事件
2025-08-10 22:25:11  📋 事件類型: message
2025-08-10 22:25:11  🔍 完整事件 JSON: {
2025-08-10 22:25:11    "type": "message",
2025-08-10 22:25:11    "message": {
2025-08-10 22:25:11      "type": "text",
2025-08-10 22:25:11      "text": "提醒我小明的物理課"
2025-08-10 22:25:11    },
2025-08-10 22:25:11    "source": {
2025-08-10 22:25:11      "userId": "U_test_user_qa",
2025-08-10 22:25:11      "type": "user"
2025-08-10 22:25:11    },
2025-08-10 22:25:11    "replyToken": "test-reply-token-1754864711630",
2025-08-10 22:25:11    "timestamp": 1754864711630
2025-08-10 22:25:11  }
2025-08-10 22:25:11  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:25:11  {"ts":"2025-08-10T22:25:11.905Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864711905_z30ls5","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 22:25:11  🔍 用戶ID類型: string
2025-08-10 22:25:11  🔍 是否測試用戶: true
2025-08-10 22:25:11  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:25:11  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 22:25:12  ✅ 規則匹配成功: set_reminder
2025-08-10 22:25:12  {"ts":"2025-08-10T22:25:12.048Z","lvl":"info","stage":"nlp","traceId":"line_1754864711905_z30ls5","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:25:12  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:25:12  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:25:12  📊 規則提取置信度: 0.67
2025-08-10 22:25:12  🤖 啟用 AI 輔助提取...
2025-08-10 22:25:13  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 22:25:13  {"ts":"2025-08-10T22:25:13.284Z","lvl":"info","stage":"slots","traceId":"line_1754864711905_z30ls5","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 22:25:13  🎯 執行任務: set_reminder
2025-08-10 22:25:13  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 22:25:13  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 22:25:13  📊 任務執行結果: {
2025-08-10 22:25:13    success: false,
2025-08-10 22:25:13    code: 'NOT_FOUND',
2025-08-10 22:25:13    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 22:25:13  }
2025-08-10 22:25:13  {"ts":"2025-08-10T22:25:13.365Z","lvl":"info","stage":"task","traceId":"line_1754864711905_z30ls5","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":81}
2025-08-10 22:25:13  🔍 檢查 replyToken: test-reply-token-1754864711630
2025-08-10 22:25:13  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:25:13  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 22:25:13  {"ts":"2025-08-10T22:25:13.650Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864711905_z30ls5","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 22:25:26  📨 收到 1 個事件
2025-08-10 22:25:26  📋 事件類型: message
2025-08-10 22:25:26  🔍 完整事件 JSON: {
2025-08-10 22:25:26    "type": "message",
2025-08-10 22:25:26    "message": {
2025-08-10 22:25:26      "type": "text",
2025-08-10 22:25:26      "text": "小明的數學課改到下午4點"
2025-08-10 22:25:26    },
2025-08-10 22:25:26    "source": {
2025-08-10 22:25:26      "userId": "U_test_user_qa",
2025-08-10 22:25:26      "type": "user"
2025-08-10 22:25:26    },
2025-08-10 22:25:26    "replyToken": "test-reply-token-1754864726241",
2025-08-10 22:25:26    "timestamp": 1754864726241
2025-08-10 22:25:26  }
2025-08-10 22:25:26  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:25:26  {"ts":"2025-08-10T22:25:26.518Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864726518_cvv038","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 22:25:26  🔍 用戶ID類型: string
2025-08-10 22:25:26  📨 收到 1 個事件
2025-08-10 22:25:26  📋 事件類型: message
2025-08-10 22:25:26  🔍 完整事件 JSON: {
2025-08-10 22:25:26    "type": "message",
2025-08-10 22:25:26    "message": {
2025-08-10 22:25:26      "type": "text",
2025-08-10 22:25:26      "text": "小明的數學課改到下午4點"
2025-08-10 22:25:26    },
2025-08-10 22:25:26    "source": {
2025-08-10 22:25:26      "userId": "U_test_user_qa",
2025-08-10 22:25:26      "type": "user"
2025-08-10 22:25:26    },
2025-08-10 22:25:26    "replyToken": "test-reply-token-1754864726241",
2025-08-10 22:25:26    "timestamp": 1754864726241
2025-08-10 22:25:26  }
2025-08-10 22:25:26  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:25:26  {"ts":"2025-08-10T22:25:26.518Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864726518_cvv038","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 22:25:26  🔍 用戶ID類型: string
2025-08-10 22:25:26  🔍 是否測試用戶: true
2025-08-10 22:25:26  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:25:26  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 22:25:26  ✅ 規則匹配成功: modify_course
2025-08-10 22:25:26  {"ts":"2025-08-10T22:25:26.660Z","lvl":"info","stage":"nlp","traceId":"line_1754864726518_cvv038","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 22:25:26  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 22:25:26  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 22:25:26  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:25:26  📊 規則提取置信度: 0.00
2025-08-10 22:25:26  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 22:25:28  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 22:25:28  {"ts":"2025-08-10T22:25:28.493Z","lvl":"info","stage":"slots","traceId":"line_1754864726518_cvv038","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 22:25:28  🎯 執行任務: modify_course
2025-08-10 22:25:28  ✏️ 執行修改操作任務: {
2025-08-10 22:25:28    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 22:25:28    userId: 'U_test_user_qa'
2025-08-10 22:25:28  }
2025-08-10 22:25:28  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 22:25:28  {"ts":"2025-08-10T22:25:28.564Z","lvl":"info","stage":"task","traceId":"line_1754864726518_cvv038","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 22:25:28  🔍 檢查 replyToken: test-reply-token-1754864726241
2025-08-10 22:25:28  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:25:28  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 22:25:28  {"ts":"2025-08-10T22:25:28.850Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864726518_cvv038","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 22:25:41  📨 收到 1 個事件
2025-08-10 22:25:41  📋 事件類型: message
2025-08-10 22:25:41  🔍 完整事件 JSON: {
2025-08-10 22:25:41    "type": "message",
2025-08-10 22:25:41    "message": {
2025-08-10 22:25:41      "type": "text",
2025-08-10 22:25:41      "text": "小明每天的晨練課改到早上7點"
2025-08-10 22:25:41    },
2025-08-10 22:25:41    "source": {
2025-08-10 22:25:41      "userId": "U_test_user_qa",
2025-08-10 22:25:41      "type": "user"
2025-08-10 22:25:41    },
2025-08-10 22:25:41    "replyToken": "test-reply-token-1754864741304",
2025-08-10 22:25:41    "timestamp": 1754864741304
2025-08-10 22:25:41  }
2025-08-10 22:25:41  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:25:41  {"ts":"2025-08-10T22:25:41.695Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864741695_zby0mp","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 22:25:41  🔍 用戶ID類型: string
2025-08-10 22:25:41  🔍 是否測試用戶: true
2025-08-10 22:25:41  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:25:41  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 22:25:41  ✅ 規則匹配成功: create_recurring_course
2025-08-10 22:25:41  {"ts":"2025-08-10T22:25:41.838Z","lvl":"info","stage":"nlp","traceId":"line_1754864741695_zby0mp","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 22:25:41  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 22:25:41  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 22:25:41  ✅ 時間解析成功: {
2025-08-10 22:25:41    input: '小明每天的晨練課改到早上7點',
2025-08-10 22:25:41    output: '07:00',
2025-08-10 22:25:41    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 22:25:41  }
2025-08-10 22:25:42  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:25:42  📊 規則提取置信度: 0.67
2025-08-10 22:25:42  🤖 啟用 AI 輔助提取...
2025-08-10 22:25:43  ✅ 最終 slots: {
2025-08-10 22:25:43    studentName: '小明',
2025-08-10 22:25:43    courseName: '晨練課',
2025-08-10 22:25:43    scheduleTime: '07:00',
2025-08-10 22:25:43    recurring: false
2025-08-10 22:25:43  }
2025-08-10 22:25:43  {"ts":"2025-08-10T22:25:43.730Z","lvl":"info","stage":"slots","traceId":"line_1754864741695_zby0mp","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:43  🎯 執行任務: create_recurring_course
2025-08-10 22:25:43  🎯 開始處理新增課程任務
2025-08-10 22:25:43  📋 接收參數: {
2025-08-10 22:25:43    studentName: '小明',
2025-08-10 22:25:43    courseName: '晨練課',
2025-08-10 22:25:43    scheduleTime: '07:00',
2025-08-10 22:25:43    recurring: false
2025-08-10 22:25:43  }
2025-08-10 22:25:43  📊 任務執行結果: {
2025-08-10 22:25:43    success: false,
2025-08-10 22:25:43    code: 'MISSING_FIELDS',
2025-08-10 22:25:43    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 22:25:43    expectingInput: true,
2025-08-10 22:25:43    missingFields: [ '課程日期' ]
2025-08-10 22:25:43  }
2025-08-10 22:25:43  {"ts":"2025-08-10T22:25:43.873Z","lvl":"info","stage":"task","traceId":"line_1754864741695_zby0mp","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":143}
2025-08-10 22:25:44  🔍 檢查 replyToken: test-reply-token-1754864741304
2025-08-10 22:25:44  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:25:44  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 22:25:44  🔍 檢查 replyToken: test-reply-token-1754864741304
2025-08-10 22:25:44  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:25:44  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 22:25:44  
2025-08-10 22:25:44  範例：「小明每週三下午3點數學課」
2025-08-10 22:25:44  {"ts":"2025-08-10T22:25:44.159Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754864741695_zby0mp","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 22:25:56  📨 收到 1 個事件
2025-08-10 22:25:56  📋 事件類型: message
2025-08-10 22:25:56  🔍 完整事件 JSON: {
2025-08-10 22:25:56    "type": "message",
2025-08-10 22:25:56    "message": {
2025-08-10 22:25:56      "type": "text",
2025-08-10 22:25:56      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 22:25:56    },
2025-08-10 22:25:56    "source": {
2025-08-10 22:25:56      "userId": "U_test_user_qa",
2025-08-10 22:25:56      "type": "user"
2025-08-10 22:25:56    },
2025-08-10 22:25:56    "replyToken": "test-reply-token-1754864756681",
2025-08-10 22:25:56    "timestamp": 1754864756681
2025-08-10 22:25:56  }
2025-08-10 22:25:56  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:25:56  {"ts":"2025-08-10T22:25:56.848Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 22:25:56  🔍 用戶ID類型: string
2025-08-10 22:25:56  🔍 是否測試用戶: true
2025-08-10 22:25:56  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:25:56  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 22:25:56  ✅ 規則匹配成功: create_recurring_course
2025-08-10 22:25:56  {"ts":"2025-08-10T22:25:56.991Z","lvl":"info","stage":"nlp","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 22:25:57  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 22:25:57  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 22:25:57  ✅ 時間解析成功: {
2025-08-10 22:25:57    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 22:25:57    output: '15:00',
2025-08-10 22:25:57    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 22:25:57  }
2025-08-10 22:25:57  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:25:57  📊 規則提取置信度: 0.67
2025-08-10 22:25:57  🤖 啟用 AI 輔助提取...
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
2025-08-10 22:25:58  ✅ 最終 slots: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  {"ts":"2025-08-10T22:25:58.230Z","lvl":"info","stage":"slots","traceId":"line_1754864756848_ts9v1j","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:25:58  🎯 執行任務: create_recurring_course
2025-08-10 22:25:58  🎯 開始處理新增課程任務
2025-08-10 22:25:58  📋 接收參數: {
2025-08-10 22:25:58    studentName: 'Lumi',
2025-08-10 22:25:58    courseName: '鋼琴課',
2025-08-10 22:25:58    scheduleTime: '15:00',
2025-08-10 22:25:58    recurring: true
2025-08-10 22:25:58  }
2025-08-10 22:25:58  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:25:58  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:25:58      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:25:58      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:25:58      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:25:58      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:25:58      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:25:58      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:25:58      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:25:58      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:25:58      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:25:58      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:25:58    config: {
2025-08-10 22:25:58      url: URL {
2025-08-10 22:25:58        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        origin: 'https://www.googleapis.com',
2025-08-10 22:25:58        protocol: 'https:',
2025-08-10 22:25:58        username: '',
2025-08-10 22:25:58        password: '',
2025-08-10 22:25:58        host: 'www.googleapis.com',
2025-08-10 22:25:58        hostname: 'www.googleapis.com',
2025-08-10 22:25:58        port: '',
2025-08-10 22:25:58        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:25:58        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:25:58        searchParams: URLSearchParams {
2025-08-10 22:25:58          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58          'singleEvents' => 'true',
2025-08-10 22:25:58          'orderBy' => 'startTime' },
2025-08-10 22:25:58        hash: ''
2025-08-10 22:25:58      },
2025-08-10 22:25:58      method: 'GET',
2025-08-10 22:25:58      apiVersion: '',
2025-08-10 22:25:58      userAgentDirectives: [ [Object] ],
2025-08-10 22:25:58      paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58      headers: Headers {
2025-08-10 22:25:58        'accept-encoding': 'gzip',
2025-08-10 22:25:58        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      params: {
2025-08-10 22:25:58        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:25:58        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:25:58        singleEvents: true,
2025-08-10 22:25:58        orderBy: 'startTime'
2025-08-10 22:25:58      },
2025-08-10 22:25:58      validateStatus: [Function (anonymous)],
2025-08-10 22:25:58      retry: true,
2025-08-10 22:25:58      responseType: 'unknown',
2025-08-10 22:25:58      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:25:58      retryConfig: {
2025-08-10 22:25:58        currentRetryAttempt: 0,
2025-08-10 22:25:58        retry: 3,
2025-08-10 22:25:58        httpMethodsToRetry: [Array],
2025-08-10 22:25:58        noResponseRetries: 2,
2025-08-10 22:25:58        retryDelayMultiplier: 2,
2025-08-10 22:25:58        timeOfFirstRequest: 1754864758622,
2025-08-10 22:25:58        totalTimeout: 9007199254740991,
2025-08-10 22:25:58        maxRetryDelay: 9007199254740991,
2025-08-10 22:25:58        statusCodesToRetry: [Array]
2025-08-10 22:25:58      }
2025-08-10 22:25:58    },
2025-08-10 22:25:58    response: Response {
2025-08-10 22:25:58      size: 0,
2025-08-10 22:25:58      data: { error: [Object] },
2025-08-10 22:25:58      config: {
2025-08-10 22:25:58        url: URL {},
2025-08-10 22:25:58        method: 'GET',
2025-08-10 22:25:58        apiVersion: '',
2025-08-10 22:25:58        userAgentDirectives: [Array],
2025-08-10 22:25:58        paramsSerializer: [Function (anonymous)],
2025-08-10 22:25:58        headers: Headers {
2025-08-10 22:25:58          'accept-encoding': 'gzip',
2025-08-10 22:25:58          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:25:58          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:25:58          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:25:58        },
2025-08-10 22:25:58        params: [Object],
2025-08-10 22:25:58        validateStatus: [Function (anonymous)],
2025-08-10 22:25:58        retry: true,
2025-08-10 22:25:58        responseType: 'unknown',
2025-08-10 22:25:58        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:25:58      },
2025-08-10 22:25:58      Symbol(Body internals): {
