2025-08-10 18:47:07  📨 收到 1 個事件
2025-08-10 18:47:07  📋 事件類型: message
2025-08-10 18:47:07  🔍 完整事件 JSON: {
2025-08-10 18:47:07    "type": "message",
2025-08-10 18:47:07    "message": {
2025-08-10 18:47:07      "type": "text",
2025-08-10 18:47:07      "text": "小明的晨練課每天幾點？"
2025-08-10 18:47:07    },
2025-08-10 18:47:07    "source": {
2025-08-10 18:47:07      "userId": "U_test_user_qa",
2025-08-10 18:47:07      "type": "user"
2025-08-10 18:47:07    },
2025-08-10 18:47:07    "replyToken": "test-reply-token-1754851627431",
2025-08-10 18:47:07    "timestamp": 1754851627431
2025-08-10 18:47:07  }
2025-08-10 18:47:07  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:47:07  {"ts":"2025-08-10T18:47:07.619Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851627619_5bsell","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 18:47:07  🔍 用戶ID類型: string
2025-08-10 18:47:07  🔍 是否測試用戶: true
2025-08-10 18:47:07  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:47:07  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 18:47:07  🤖 啟用 AI 備援識別...
2025-08-10 18:47:08  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 18:47:08  {"ts":"2025-08-10T18:47:08.382Z","lvl":"info","stage":"nlp","traceId":"line_1754851627619_5bsell","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 18:47:08  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 18:47:08  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:47:08  📊 規則提取置信度: 0.50
2025-08-10 18:47:08  🤖 啟用 AI 輔助提取...
2025-08-10 18:47:09  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 18:47:09  {"ts":"2025-08-10T18:47:09.651Z","lvl":"info","stage":"slots","traceId":"line_1754851627619_5bsell","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 18:47:09  🎯 執行任務: query_schedule
2025-08-10 18:47:09  🎯 開始處理查詢課表任務
2025-08-10 18:47:09  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 18:47:09  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 18:47:09  📚 查詢到 327 筆課程資料
2025-08-10 18:47:09  📚 查詢到 14 筆課程
2025-08-10 18:47:09  📊 任務執行結果: {
2025-08-10 18:47:09    success: true,
2025-08-10 18:47:09    code: 'QUERY_OK',
2025-08-10 18:47:09    message: '📅 小明本週的課程安排\n' +
2025-08-10 18:47:09      '\n' +
2025-08-10 18:47:09      '📆 8/9 (週六)\n' +
2025-08-10 18:47:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '\n' +
2025-08-10 18:47:09      '📆 8/10 (週日)\n' +
2025-08-10 18:47:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '\n' +
2025-08-10 18:47:09      '📆 8/11 (週一)\n' +
2025-08-10 18:47:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '\n' +
2025-08-10 18:47:09      '📆 8/12 (週二)\n' +
2025-08-10 18:47:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '\n' +
2025-08-10 18:47:09      '📆 8/13 (週三)\n' +
2025-08-10 18:47:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '\n' +
2025-08-10 18:47:09      '📆 8/14 (週四)\n' +
2025-08-10 18:47:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '\n' +
2025-08-10 18:47:09      '📆 8/15 (週五)\n' +
2025-08-10 18:47:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 18:47:09      '  上午8:00 - 晨練課 🔄',
2025-08-10 18:47:09    data: {
2025-08-10 18:47:09      courses: [
2025-08-10 18:47:09        [Object], [Object],
2025-08-10 18:47:09        [Object], [Object],
2025-08-10 18:47:09        [Object], [Object],
2025-08-10 18:47:09        [Object], [Object],
2025-08-10 18:47:09        [Object], [Object],
2025-08-10 18:47:09        [Object], [Object],
2025-08-10 18:47:09        [Object], [Object]
2025-08-10 18:47:09      ],
2025-08-10 18:47:09      courseCount: 14,
2025-08-10 18:47:09      dateRange: {
2025-08-10 18:47:09        startDate: '2025-08-10',
2025-08-10 18:47:09        endDate: '2025-08-16',
2025-08-10 18:47:09        description: '本週'
2025-08-10 18:47:09      }
2025-08-10 18:47:09    }
2025-08-10 18:47:09  }
2025-08-10 18:47:09  {"ts":"2025-08-10T18:47:09.980Z","lvl":"info","stage":"task","traceId":"line_1754851627619_5bsell","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":329}
2025-08-10 18:47:10  🔍 檢查 replyToken: test-reply-token-1754851627431
2025-08-10 18:47:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:47:10  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/9 (週六)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/10 (週日)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/11 (週一)
2025-08-10 18:47:10  🔍 檢查 replyToken: test-reply-token-1754851627431
2025-08-10 18:47:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:47:10  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/9 (週六)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/10 (週日)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/11 (週一)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/12 (週二)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/13 (週三)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/14 (週四)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  
2025-08-10 18:47:10  📆 8/15 (週五)
2025-08-10 18:47:10    上午7:00 - 晨練課 🔄
2025-08-10 18:47:10    上午8:00 - 晨練課 🔄
2025-08-10 18:47:10  {"ts":"2025-08-10T18:47:10.267Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851627619_5bsell","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 18:47:23  📨 收到 1 個事件
2025-08-10 18:47:23  📋 事件類型: message
2025-08-10 18:47:23  🔍 完整事件 JSON: {
2025-08-10 18:47:23    "type": "message",
2025-08-10 18:47:23    "message": {
2025-08-10 18:47:23      "type": "text",
2025-08-10 18:47:23      "text": "查詢Lumi的重複課程"
2025-08-10 18:47:23    },
2025-08-10 18:47:23    "source": {
2025-08-10 18:47:23      "userId": "U_test_user_qa",
2025-08-10 18:47:23      "type": "user"
2025-08-10 18:47:23    },
2025-08-10 18:47:23    "replyToken": "test-reply-token-1754851642913",
2025-08-10 18:47:23    "timestamp": 1754851642913
2025-08-10 18:47:23  }
2025-08-10 18:47:23  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:47:23  {"ts":"2025-08-10T18:47:23.087Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851643087_f9a317","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 18:47:23  🔍 用戶ID類型: string
2025-08-10 18:47:23  🔍 是否測試用戶: true
2025-08-10 18:47:23  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:47:23  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 18:47:23  ✅ 規則匹配成功: query_schedule
2025-08-10 18:47:23  {"ts":"2025-08-10T18:47:23.230Z","lvl":"info","stage":"nlp","traceId":"line_1754851643087_f9a317","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 18:47:23  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 18:47:23  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:47:23  📊 規則提取置信度: 0.50
2025-08-10 18:47:23  🤖 啟用 AI 輔助提取...
2025-08-10 18:47:24  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 18:47:24  {"ts":"2025-08-10T18:47:24.489Z","lvl":"info","stage":"slots","traceId":"line_1754851643087_f9a317","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 18:47:24  🎯 執行任務: query_schedule
2025-08-10 18:47:24  🎯 開始處理查詢課表任務
2025-08-10 18:47:24  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 18:47:24  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 18:47:24  📚 查詢到 322 筆課程資料
2025-08-10 18:47:24  📚 查詢到 0 筆課程
2025-08-10 18:47:24  📊 任務執行結果: {
2025-08-10 18:47:24    success: true,
2025-08-10 18:47:24    code: 'QUERY_OK_EMPTY',
2025-08-10 18:47:24    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 18:47:24      '\n' +
2025-08-10 18:47:24      '💡 您可以：\n' +
2025-08-10 18:47:24      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 18:47:24      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 18:47:24      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 18:47:24    data: {
2025-08-10 18:47:24      courseCount: 0,
2025-08-10 18:47:24      dateRange: {
2025-08-10 18:47:24        startDate: '2025-08-10',
2025-08-10 18:47:24        endDate: '2025-08-16',
2025-08-10 18:47:24        description: '本週'
2025-08-10 18:47:24      }
2025-08-10 18:47:24    }
2025-08-10 18:47:24  }
2025-08-10 18:47:24  {"ts":"2025-08-10T18:47:24.775Z","lvl":"info","stage":"task","traceId":"line_1754851643087_f9a317","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":286}
2025-08-10 18:47:25  🔍 檢查 replyToken: test-reply-token-1754851642913
2025-08-10 18:47:25  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:47:25  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 18:47:25  
2025-08-10 18:47:25  💡 您可以：
2025-08-10 18:47:25  • 新增課程：「小明明天上午10點英文課」
2025-08-10 18:47:25  • 查詢其他時間：「小明下週的課表」
2025-08-10 18:47:25  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 18:47:25  {"ts":"2025-08-10T18:47:25.061Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851643087_f9a317","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 18:47:38  📨 收到 1 個事件
2025-08-10 18:47:38  📋 事件類型: message
2025-08-10 18:47:38  🔍 完整事件 JSON: {
2025-08-10 18:47:38    "type": "message",
2025-08-10 18:47:38    "message": {
2025-08-10 18:47:38  📨 收到 1 個事件
2025-08-10 18:47:38  📋 事件類型: message
2025-08-10 18:47:38  🔍 完整事件 JSON: {
2025-08-10 18:47:38    "type": "message",
2025-08-10 18:47:38    "message": {
2025-08-10 18:47:38      "type": "text",
2025-08-10 18:47:38      "text": "今天小明的數學課學了分數加減法"
2025-08-10 18:47:38    },
2025-08-10 18:47:38    "source": {
2025-08-10 18:47:38      "userId": "U_test_user_qa",
2025-08-10 18:47:38      "type": "user"
2025-08-10 18:47:38    },
2025-08-10 18:47:38    "replyToken": "test-reply-token-1754851658037",
2025-08-10 18:47:38    "timestamp": 1754851658037
2025-08-10 18:47:38  }
2025-08-10 18:47:38  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:47:38  {"ts":"2025-08-10T18:47:38.208Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851658208_1fbi1a","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 18:47:38  🔍 用戶ID類型: string
2025-08-10 18:47:38  🔍 是否測試用戶: true
2025-08-10 18:47:38  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:47:38  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 18:47:38  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:47:38  {"ts":"2025-08-10T18:47:38.350Z","lvl":"info","stage":"nlp","traceId":"line_1754851658208_1fbi1a","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:47:38  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:47:38  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:47:38  📊 規則提取置信度: 1.00
2025-08-10 18:47:38  🤖 啟用 AI 輔助提取...
2025-08-10 18:47:39  ✅ 最終 slots: {
2025-08-10 18:47:39    studentName: '小明',
2025-08-10 18:47:39    courseName: '數學課',
2025-08-10 18:47:39    timeReference: 'today',
2025-08-10 18:47:39    content: '分數加減法'
2025-08-10 18:47:39  }
2025-08-10 18:47:39  {"ts":"2025-08-10T18:47:39.725Z","lvl":"info","stage":"slots","traceId":"line_1754851658208_1fbi1a","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 18:47:39  🎯 執行任務: record_content
2025-08-10 18:47:39  📝 開始處理記錄課程內容任務: {
2025-08-10 18:47:39    studentName: '小明',
2025-08-10 18:47:39    courseName: '數學課',
2025-08-10 18:47:39    timeReference: 'today',
2025-08-10 18:47:39    content: '分數加減法'
2025-08-10 18:47:39  }
2025-08-10 18:47:39  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 18:47:39  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 18:47:39  ✅ 文檔已添加到 course_contents: kid9UHcRSP08RYR3SPT4
2025-08-10 18:47:39  ✅ 課程內容記錄已儲存: kid9UHcRSP08RYR3SPT4
2025-08-10 18:47:40  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 18:47:40  📊 任務執行結果: {
2025-08-10 18:47:40    success: true,
2025-08-10 18:47:40    code: 'RECORD_CONTENT_OK',
2025-08-10 18:47:40    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 18:47:40    data: {
2025-08-10 18:47:40      recordId: 'kid9UHcRSP08RYR3SPT4',
2025-08-10 18:47:40      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 18:47:40      targetDate: '2025-08-10'
2025-08-10 18:47:40    }
2025-08-10 18:47:40  }
2025-08-10 18:47:40  {"ts":"2025-08-10T18:47:40.040Z","lvl":"info","stage":"task","traceId":"line_1754851658208_1fbi1a","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":315}
2025-08-10 18:47:40  🔍 檢查 replyToken: test-reply-token-1754851658037
2025-08-10 18:47:40  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:47:40  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:47:40  📚 課程：小明 - 數學課
2025-08-10 18:47:40  📅 日期：2025-08-10
2025-08-10 18:47:40  💬 內容：分數加減法
2025-08-10 18:47:40  {"ts":"2025-08-10T18:47:40.327Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851658208_1fbi1a","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 18:47:53  📨 收到 1 個事件
2025-08-10 18:47:53  📋 事件類型: message
2025-08-10 18:47:53  🔍 完整事件 JSON: {
2025-08-10 18:47:53    "type": "message",
2025-08-10 18:47:53    "message": {
2025-08-10 18:47:53      "type": "text",
2025-08-10 18:47:53      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 18:47:53    },
2025-08-10 18:47:53    "source": {
2025-08-10 18:47:53      "userId": "U_test_user_qa",
2025-08-10 18:47:53      "type": "user"
2025-08-10 18:47:53    },
2025-08-10 18:47:53    "replyToken": "test-reply-token-1754851673012",
2025-08-10 18:47:53    "timestamp": 1754851673012
2025-08-10 18:47:53  }
2025-08-10 18:47:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:47:53  {"ts":"2025-08-10T18:47:53.294Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851673294_1ktg8i","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 18:47:53  🔍 用戶ID類型: string
2025-08-10 18:47:53  🔍 是否測試用戶: true
2025-08-10 18:47:53  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:47:53  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 18:47:53  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:47:53  {"ts":"2025-08-10T18:47:53.437Z","lvl":"info","stage":"nlp","traceId":"line_1754851673294_1ktg8i","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:47:53  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:47:53  📊 規則提取置信度: 0.33
2025-08-10 18:47:53  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 18:47:55  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:47:55  {"ts":"2025-08-10T18:47:55.278Z","lvl":"info","stage":"slots","traceId":"line_1754851673294_1ktg8i","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 18:47:55  🎯 執行任務: record_content
2025-08-10 18:47:55  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:47:55  ✅ 文檔已添加到 course_contents: 6h5nrBsJAJ4Bsra4Y7IO
2025-08-10 18:47:55  ✅ 課程內容記錄已儲存: 6h5nrBsJAJ4Bsra4Y7IO
2025-08-10 18:47:55  📊 任務執行結果: {
2025-08-10 18:47:55    success: true,
2025-08-10 18:47:55    code: 'RECORD_CONTENT_OK',
2025-08-10 18:47:55    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 18:47:55  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:47:55  {"ts":"2025-08-10T18:47:55.278Z","lvl":"info","stage":"slots","traceId":"line_1754851673294_1ktg8i","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 18:47:55  🎯 執行任務: record_content
2025-08-10 18:47:55  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:47:55  ✅ 文檔已添加到 course_contents: 6h5nrBsJAJ4Bsra4Y7IO
2025-08-10 18:47:55  ✅ 課程內容記錄已儲存: 6h5nrBsJAJ4Bsra4Y7IO
2025-08-10 18:47:55  📊 任務執行結果: {
2025-08-10 18:47:55    success: true,
2025-08-10 18:47:55    code: 'RECORD_CONTENT_OK',
2025-08-10 18:47:55    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 18:47:55    data: {
2025-08-10 18:47:55      recordId: '6h5nrBsJAJ4Bsra4Y7IO',
2025-08-10 18:47:55      courseId: null,
2025-08-10 18:47:55      targetDate: '2025-08-09'
2025-08-10 18:47:55    }
2025-08-10 18:47:55  }
2025-08-10 18:47:55  {"ts":"2025-08-10T18:47:55.365Z","lvl":"info","stage":"task","traceId":"line_1754851673294_1ktg8i","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":87}
2025-08-10 18:47:55  🔍 檢查 replyToken: test-reply-token-1754851673012
2025-08-10 18:47:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:47:55  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:47:55  📝 記錄為獨立內容
2025-08-10 18:47:55  📚 課程：鋼琴課
2025-08-10 18:47:55  📅 日期：2025-08-09
2025-08-10 18:47:55  💬 內容：練習了小星星
2025-08-10 18:47:55  {"ts":"2025-08-10T18:47:55.651Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851673294_1ktg8i","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 18:48:08  📨 收到 1 個事件
2025-08-10 18:48:08  📋 事件類型: message
2025-08-10 18:48:08  🔍 完整事件 JSON: {
2025-08-10 18:48:08    "type": "message",
2025-08-10 18:48:08    "message": {
2025-08-10 18:48:08      "type": "text",
2025-08-10 18:48:08      "text": "小明昨天數學課學了什麼？"
2025-08-10 18:48:08    },
2025-08-10 18:48:08    "source": {
2025-08-10 18:48:08      "userId": "U_test_user_qa",
2025-08-10 18:48:08      "type": "user"
2025-08-10 18:48:08    },
2025-08-10 18:48:08    "replyToken": "test-reply-token-1754851688216",
2025-08-10 18:48:08    "timestamp": 1754851688216
2025-08-10 18:48:08  }
2025-08-10 18:48:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:48:08  {"ts":"2025-08-10T18:48:08.383Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851688383_94g3n6","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 18:48:08  🔍 用戶ID類型: string
2025-08-10 18:48:08  🔍 是否測試用戶: true
2025-08-10 18:48:08  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:48:08  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 18:48:08  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:48:08  {"ts":"2025-08-10T18:48:08.526Z","lvl":"info","stage":"nlp","traceId":"line_1754851688383_94g3n6","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:48:08  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:48:08  📊 規則提取置信度: 0.67
2025-08-10 18:48:08  🤖 啟用 AI 輔助提取...
2025-08-10 18:48:09  ✅ 最終 slots: {
2025-08-10 18:48:09    studentName: '小明',
2025-08-10 18:48:09    courseName: '數學課',
2025-08-10 18:48:09    timeReference: 'yesterday',
2025-08-10 18:48:09    content: '什麼？'
2025-08-10 18:48:09  }
2025-08-10 18:48:09  {"ts":"2025-08-10T18:48:09.954Z","lvl":"info","stage":"slots","traceId":"line_1754851688383_94g3n6","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 18:48:09  🎯 執行任務: record_content
2025-08-10 18:48:09  📝 開始處理記錄課程內容任務: {
2025-08-10 18:48:09    studentName: '小明',
2025-08-10 18:48:09    courseName: '數學課',
2025-08-10 18:48:09    timeReference: 'yesterday',
2025-08-10 18:48:09    content: '什麼？'
2025-08-10 18:48:09  }
2025-08-10 18:48:09  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 18:48:10  ❓ 未找到完全匹配的課程
2025-08-10 18:48:10  ✅ 文檔已添加到 course_contents: lxmiDYjynQ5caFtQjMta
2025-08-10 18:48:10  ✅ 課程內容記錄已儲存: lxmiDYjynQ5caFtQjMta
2025-08-10 18:48:10  📊 任務執行結果: {
2025-08-10 18:48:10    success: true,
2025-08-10 18:48:10    code: 'RECORD_CONTENT_OK',
2025-08-10 18:48:10    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 18:48:10    data: {
2025-08-10 18:48:10      recordId: 'lxmiDYjynQ5caFtQjMta',
2025-08-10 18:48:10      courseId: null,
2025-08-10 18:48:10      targetDate: '2025-08-09'
2025-08-10 18:48:10    }
2025-08-10 18:48:10  }
2025-08-10 18:48:10  {"ts":"2025-08-10T18:48:10.200Z","lvl":"info","stage":"task","traceId":"line_1754851688383_94g3n6","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":246}
2025-08-10 18:48:10  🔍 檢查 replyToken: test-reply-token-1754851688216
2025-08-10 18:48:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:48:10  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:48:10  📝 記錄為獨立內容
2025-08-10 18:48:10  👨‍🎓 學生：小明
2025-08-10 18:48:10  📚 課程：數學課
2025-08-10 18:48:10  📅 日期：2025-08-09
2025-08-10 18:48:10  💬 內容：什麼？
2025-08-10 18:48:10  {"ts":"2025-08-10T18:48:10.487Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851688383_94g3n6","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 18:48:17  📨 收到 1 個事件
2025-08-10 18:48:17  📋 事件類型: message
2025-08-10 18:48:17  🔍 完整事件 JSON: {
2025-08-10 18:48:17    "type": "message",
2025-08-10 18:48:17    "message": {
2025-08-10 18:48:17      "type": "text",
2025-08-10 18:48:17      "text": "記錄小明今天化學課的內容"
2025-08-10 18:48:17    },
2025-08-10 18:48:17    "source": {
2025-08-10 18:48:17      "userId": "U_test_user_qa",
2025-08-10 18:48:17      "type": "user"
2025-08-10 18:48:17  📨 收到 1 個事件
2025-08-10 18:48:17  📋 事件類型: message
2025-08-10 18:48:17  🔍 完整事件 JSON: {
2025-08-10 18:48:17    "type": "message",
2025-08-10 18:48:17    "message": {
2025-08-10 18:48:17      "type": "text",
2025-08-10 18:48:17      "text": "記錄小明今天化學課的內容"
2025-08-10 18:48:17    },
2025-08-10 18:48:17    "source": {
2025-08-10 18:48:17      "userId": "U_test_user_qa",
2025-08-10 18:48:17      "type": "user"
2025-08-10 18:48:17    },
2025-08-10 18:48:17    "replyToken": "test-reply-token-1754851697578",
2025-08-10 18:48:17    "timestamp": 1754851697578
2025-08-10 18:48:17  }
2025-08-10 18:48:17  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:48:17  {"ts":"2025-08-10T18:48:17.862Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851697862_nwznvb","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 18:48:17  🔍 用戶ID類型: string
2025-08-10 18:48:17  🔍 是否測試用戶: true
2025-08-10 18:48:17  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:48:17  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 18:48:18  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:48:18  {"ts":"2025-08-10T18:48:18.005Z","lvl":"info","stage":"nlp","traceId":"line_1754851697862_nwznvb","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:48:18  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:48:18  📊 規則提取置信度: 0.67
2025-08-10 18:48:18  🤖 啟用 AI 輔助提取...
2025-08-10 18:48:19  ✅ 最終 slots: {
2025-08-10 18:48:19    studentName: '小明',
2025-08-10 18:48:19    courseName: '化學課',
2025-08-10 18:48:19    timeReference: 'today',
2025-08-10 18:48:19    content: '小明今天化學課的內容'
2025-08-10 18:48:19  }
2025-08-10 18:48:19  {"ts":"2025-08-10T18:48:19.606Z","lvl":"info","stage":"slots","traceId":"line_1754851697862_nwznvb","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 18:48:19  🎯 執行任務: record_content
2025-08-10 18:48:19  📝 開始處理記錄課程內容任務: {
2025-08-10 18:48:19    studentName: '小明',
2025-08-10 18:48:19    courseName: '化學課',
2025-08-10 18:48:19    timeReference: 'today',
2025-08-10 18:48:19    content: '小明今天化學課的內容'
2025-08-10 18:48:19  }
2025-08-10 18:48:19  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 18:48:19  ❓ 未找到完全匹配的課程
2025-08-10 18:48:19  ✅ 文檔已添加到 course_contents: QyJ01jdBYmaO9NhhuiUF
2025-08-10 18:48:19  ✅ 課程內容記錄已儲存: QyJ01jdBYmaO9NhhuiUF
2025-08-10 18:48:19  📊 任務執行結果: {
2025-08-10 18:48:19    success: true,
2025-08-10 18:48:19    code: 'RECORD_CONTENT_OK',
2025-08-10 18:48:19    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 18:48:19      '📝 記錄為獨立內容\n' +
2025-08-10 18:48:19      '👨‍🎓 學生：小明\n' +
2025-08-10 18:48:19      '📚 課程：化學課\n' +
2025-08-10 18:48:19      '📅 日期：2025-08-10\n' +
2025-08-10 18:48:19      '💬 內容：小明今天化學課的內容',
2025-08-10 18:48:19    data: {
2025-08-10 18:48:19      recordId: 'QyJ01jdBYmaO9NhhuiUF',
2025-08-10 18:48:19      courseId: null,
2025-08-10 18:48:19      targetDate: '2025-08-10'
2025-08-10 18:48:19    }
2025-08-10 18:48:19  }
2025-08-10 18:48:19  {"ts":"2025-08-10T18:48:19.958Z","lvl":"info","stage":"task","traceId":"line_1754851697862_nwznvb","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":352}
2025-08-10 18:48:20  🔍 檢查 replyToken: test-reply-token-1754851697578
2025-08-10 18:48:20  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:48:20  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:48:20  📝 記錄為獨立內容
2025-08-10 18:48:20  👨‍🎓 學生：小明
2025-08-10 18:48:20  📚 課程：化學課
2025-08-10 18:48:20  📅 日期：2025-08-10
2025-08-10 18:48:20  💬 內容：小明今天化學課的內容
2025-08-10 18:48:20  {"ts":"2025-08-10T18:48:20.249Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851697862_nwznvb","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 18:48:33  📨 收到 1 個事件
2025-08-10 18:48:33  📋 事件類型: message
2025-08-10 18:48:33  🔍 完整事件 JSON: {
2025-08-10 18:48:33    "type": "message",
2025-08-10 18:48:33    "message": {
2025-08-10 18:48:33      "type": "text",
2025-08-10 18:48:33      "text": "提醒我小明的數學課"
2025-08-10 18:48:33    },
2025-08-10 18:48:33    "source": {
2025-08-10 18:48:33      "userId": "U_test_user_qa",
2025-08-10 18:48:33      "type": "user"
2025-08-10 18:48:33    },
2025-08-10 18:48:33    "replyToken": "test-reply-token-1754851712849",
2025-08-10 18:48:33    "timestamp": 1754851712849
2025-08-10 18:48:33  }
2025-08-10 18:48:33  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:48:33  {"ts":"2025-08-10T18:48:33.131Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851713131_07qvxo","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 18:48:33  🔍 用戶ID類型: string
2025-08-10 18:48:33  🔍 是否測試用戶: true
2025-08-10 18:48:33  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:48:33  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 18:48:33  ✅ 規則匹配成功: set_reminder
2025-08-10 18:48:33  {"ts":"2025-08-10T18:48:33.278Z","lvl":"info","stage":"nlp","traceId":"line_1754851713131_07qvxo","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 18:48:33  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 18:48:33  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:48:33  📊 規則提取置信度: 0.67
2025-08-10 18:48:33  🤖 啟用 AI 輔助提取...
2025-08-10 18:48:35  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:48:35  {"ts":"2025-08-10T18:48:35.103Z","lvl":"info","stage":"slots","traceId":"line_1754851713131_07qvxo","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:48:35  🎯 執行任務: set_reminder
2025-08-10 18:48:35  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:48:35  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:48:35  {"ts":"2025-08-10T18:48:35.103Z","lvl":"info","stage":"slots","traceId":"line_1754851713131_07qvxo","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:48:35  🎯 執行任務: set_reminder
2025-08-10 18:48:35  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:48:35  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 18:48:35  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 18:48:35  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 18:48:35  ✅ 提醒記錄已創建: hBLgHthdoBxToANU3gBC
2025-08-10 18:48:35  ✅ 提醒設定成功: hBLgHthdoBxToANU3gBC
2025-08-10 18:48:35  📊 任務執行結果: {
2025-08-10 18:48:35    success: true,
2025-08-10 18:48:35    code: 'REMINDER_SET_OK',
2025-08-10 18:48:35    message: '✅ 提醒設定完成！\n' +
2025-08-10 18:48:35      '📚 課程：小明 的 數學課\n' +
2025-08-10 18:48:35      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 18:48:35      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 18:48:35  }
2025-08-10 18:48:35  {"ts":"2025-08-10T18:48:35.388Z","lvl":"info","stage":"task","traceId":"line_1754851713131_07qvxo","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":285}
2025-08-10 18:48:35  🔍 檢查 replyToken: test-reply-token-1754851712849
2025-08-10 18:48:35  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:48:35  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 18:48:35  📚 課程：小明 的 數學課
2025-08-10 18:48:35  📅 上課時間：8/11 下午02:00
2025-08-10 18:48:35  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 18:48:35  {"ts":"2025-08-10T18:48:35.674Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851713131_07qvxo","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 18:48:48  📨 收到 1 個事件
2025-08-10 18:48:48  📋 事件類型: message
2025-08-10 18:48:48  🔍 完整事件 JSON: {
2025-08-10 18:48:48    "type": "message",
2025-08-10 18:48:48    "message": {
2025-08-10 18:48:48      "type": "text",
2025-08-10 18:48:48      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 18:48:48    },
2025-08-10 18:48:48    "source": {
2025-08-10 18:48:48      "userId": "U_test_user_qa",
2025-08-10 18:48:48      "type": "user"
2025-08-10 18:48:48    },
2025-08-10 18:48:48    "replyToken": "test-reply-token-1754851728678",
2025-08-10 18:48:48    "timestamp": 1754851728678
2025-08-10 18:48:48  }
2025-08-10 18:48:48  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:48:48  {"ts":"2025-08-10T18:48:48.965Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851728965_arc12i","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 18:48:48  🔍 用戶ID類型: string
2025-08-10 18:48:48  🔍 是否測試用戶: true
2025-08-10 18:48:48  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:48:48  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 18:48:49  ✅ 規則匹配成功: set_reminder
2025-08-10 18:48:49  {"ts":"2025-08-10T18:48:49.108Z","lvl":"info","stage":"nlp","traceId":"line_1754851728965_arc12i","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 18:48:49  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 18:48:49  📊 規則提取置信度: 0.67
2025-08-10 18:48:49  🤖 啟用 AI 輔助提取...
2025-08-10 18:48:51  ✅ 最終 slots: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 18:48:51  {"ts":"2025-08-10T18:48:51.067Z","lvl":"info","stage":"slots","traceId":"line_1754851728965_arc12i","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","reminderTime","reminderNote"]}
2025-08-10 18:48:51  🎯 執行任務: set_reminder
2025-08-10 18:48:51  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 18:48:51  📊 任務執行結果: {
2025-08-10 18:48:51    success: false,
2025-08-10 18:48:51    code: 'MISSING_STUDENT',
2025-08-10 18:48:51    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 18:48:51  }
2025-08-10 18:48:51  {"ts":"2025-08-10T18:48:51.068Z","lvl":"info","stage":"task","traceId":"line_1754851728965_arc12i","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 18:48:51  🔍 檢查 replyToken: test-reply-token-1754851728678
2025-08-10 18:48:51  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:48:51  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 18:48:51  {"ts":"2025-08-10T18:48:51.354Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851728965_arc12i","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 18:49:04  📨 收到 1 個事件
2025-08-10 18:49:04  📋 事件類型: message
2025-08-10 18:49:04  🔍 完整事件 JSON: {
2025-08-10 18:49:04    "type": "message",
2025-08-10 18:49:04    "message": {
2025-08-10 18:49:04      "type": "text",
2025-08-10 18:49:04      "text": "提醒我小明的物理課"
2025-08-10 18:49:04    },
2025-08-10 18:49:04    "source": {
2025-08-10 18:49:04      "userId": "U_test_user_qa",
2025-08-10 18:49:04      "type": "user"
2025-08-10 18:49:04    },
2025-08-10 18:49:04    "replyToken": "test-reply-token-1754851744088",
2025-08-10 18:49:04    "timestamp": 1754851744088
2025-08-10 18:49:04  }
2025-08-10 18:49:04  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:49:04  {"ts":"2025-08-10T18:49:04.257Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851744257_522dfm","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 18:49:04  🔍 用戶ID類型: string
2025-08-10 18:49:04  🔍 是否測試用戶: true
2025-08-10 18:49:04  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:49:04  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 18:49:04  ✅ 規則匹配成功: set_reminder
2025-08-10 18:49:04  {"ts":"2025-08-10T18:49:04.400Z","lvl":"info","stage":"nlp","traceId":"line_1754851744257_522dfm","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 18:49:04  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 18:49:04  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:49:04  📊 規則提取置信度: 0.67
2025-08-10 18:49:04  🤖 啟用 AI 輔助提取...
2025-08-10 18:49:06  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:49:06  {"ts":"2025-08-10T18:49:06.243Z","lvl":"info","stage":"slots","traceId":"line_1754851744257_522dfm","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:49:06  🎯 執行任務: set_reminder
2025-08-10 18:49:06  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:49:06  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 18:49:06  📊 任務執行結果: {
2025-08-10 18:49:06    success: false,
2025-08-10 18:49:06    code: 'NOT_FOUND',
2025-08-10 18:49:06  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:49:06  {"ts":"2025-08-10T18:49:06.243Z","lvl":"info","stage":"slots","traceId":"line_1754851744257_522dfm","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:49:06  🎯 執行任務: set_reminder
2025-08-10 18:49:06  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:49:06  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 18:49:06  📊 任務執行結果: {
2025-08-10 18:49:06    success: false,
2025-08-10 18:49:06    code: 'NOT_FOUND',
2025-08-10 18:49:06    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 18:49:06  }
2025-08-10 18:49:06  {"ts":"2025-08-10T18:49:06.328Z","lvl":"info","stage":"task","traceId":"line_1754851744257_522dfm","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":85}
2025-08-10 18:49:06  🔍 檢查 replyToken: test-reply-token-1754851744088
2025-08-10 18:49:06  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:49:06  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 18:49:06  {"ts":"2025-08-10T18:49:06.613Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851744257_522dfm","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 18:49:19  📨 收到 1 個事件
2025-08-10 18:49:19  📋 事件類型: message
2025-08-10 18:49:19  🔍 完整事件 JSON: {
2025-08-10 18:49:19    "type": "message",
2025-08-10 18:49:19    "message": {
2025-08-10 18:49:19      "type": "text",
2025-08-10 18:49:19      "text": "小明的數學課改到下午4點"
2025-08-10 18:49:19    },
2025-08-10 18:49:19    "source": {
2025-08-10 18:49:19      "userId": "U_test_user_qa",
2025-08-10 18:49:19      "type": "user"
2025-08-10 18:49:19    },
2025-08-10 18:49:19    "replyToken": "test-reply-token-1754851759081",
2025-08-10 18:49:19    "timestamp": 1754851759081
2025-08-10 18:49:19  }
2025-08-10 18:49:19  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:49:19  {"ts":"2025-08-10T18:49:19.335Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851759335_hw9e71","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 18:49:19  🔍 用戶ID類型: string
2025-08-10 18:49:19  🔍 是否測試用戶: true
2025-08-10 18:49:19  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:49:19  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 18:49:19  ✅ 規則匹配成功: modify_course
2025-08-10 18:49:19  {"ts":"2025-08-10T18:49:19.478Z","lvl":"info","stage":"nlp","traceId":"line_1754851759335_hw9e71","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 18:49:19  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 18:49:19  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 18:49:19  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:49:19  📊 規則提取置信度: 0.00
2025-08-10 18:49:19  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 18:49:21  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 18:49:21  {"ts":"2025-08-10T18:49:21.124Z","lvl":"info","stage":"slots","traceId":"line_1754851759335_hw9e71","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 18:49:21  🎯 執行任務: modify_course
2025-08-10 18:49:21  ✏️ 執行修改操作任務: {
2025-08-10 18:49:21    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 18:49:21    userId: 'U_test_user_qa'
2025-08-10 18:49:21  }
2025-08-10 18:49:21  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 18:49:21  {"ts":"2025-08-10T18:49:21.196Z","lvl":"info","stage":"task","traceId":"line_1754851759335_hw9e71","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 18:49:21  🔍 檢查 replyToken: test-reply-token-1754851759081
2025-08-10 18:49:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:49:21  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 18:49:21  {"ts":"2025-08-10T18:49:21.482Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851759335_hw9e71","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 18:49:34  📨 收到 1 個事件
2025-08-10 18:49:34  📋 事件類型: message
2025-08-10 18:49:34  🔍 完整事件 JSON: {
2025-08-10 18:49:34    "type": "message",
2025-08-10 18:49:34    "message": {
2025-08-10 18:49:34      "type": "text",
2025-08-10 18:49:34      "text": "小明每天的晨練課改到早上7點"
2025-08-10 18:49:34    },
2025-08-10 18:49:34    "source": {
2025-08-10 18:49:34      "userId": "U_test_user_qa",
2025-08-10 18:49:34      "type": "user"
2025-08-10 18:49:34    },
2025-08-10 18:49:34    "replyToken": "test-reply-token-1754851773902",
2025-08-10 18:49:34    "timestamp": 1754851773902
2025-08-10 18:49:34  }
2025-08-10 18:49:34  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:49:34  {"ts":"2025-08-10T18:49:34.109Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851774109_xgbj7p","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 18:49:34  🔍 用戶ID類型: string
2025-08-10 18:49:34  🔍 是否測試用戶: true
2025-08-10 18:49:34  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:49:34  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 18:49:34  ✅ 規則匹配成功: create_recurring_course
2025-08-10 18:49:34  {"ts":"2025-08-10T18:49:34.252Z","lvl":"info","stage":"nlp","traceId":"line_1754851774109_xgbj7p","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 18:49:34  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 18:49:34  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 18:49:34  ✅ 時間解析成功: {
2025-08-10 18:49:34    input: '小明每天的晨練課改到早上7點',
2025-08-10 18:49:34    output: '07:00',
2025-08-10 18:49:34    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 18:49:34  }
2025-08-10 18:49:34  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:49:34  📊 規則提取置信度: 0.67
2025-08-10 18:49:34  🤖 啟用 AI 輔助提取...
2025-08-10 18:49:36  ✅ 最終 slots: {
2025-08-10 18:49:36    studentName: '小明',
2025-08-10 18:49:36    courseName: '晨練課',
2025-08-10 18:49:36    scheduleTime: '07:00',
2025-08-10 18:49:36    recurring: false
2025-08-10 18:49:36  }
2025-08-10 18:49:36  {"ts":"2025-08-10T18:49:36.165Z","lvl":"info","stage":"slots","traceId":"line_1754851774109_xgbj7p","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:36  🎯 執行任務: create_recurring_course
2025-08-10 18:49:36  🎯 開始處理新增課程任務
2025-08-10 18:49:36  📋 接收參數: {
2025-08-10 18:49:36    studentName: '小明',
2025-08-10 18:49:36  ✅ 最終 slots: {
2025-08-10 18:49:36    studentName: '小明',
2025-08-10 18:49:36    courseName: '晨練課',
2025-08-10 18:49:36    scheduleTime: '07:00',
2025-08-10 18:49:36    recurring: false
2025-08-10 18:49:36  }
2025-08-10 18:49:36  {"ts":"2025-08-10T18:49:36.165Z","lvl":"info","stage":"slots","traceId":"line_1754851774109_xgbj7p","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:36  🎯 執行任務: create_recurring_course
2025-08-10 18:49:36  🎯 開始處理新增課程任務
2025-08-10 18:49:36  📋 接收參數: {
2025-08-10 18:49:36    studentName: '小明',
2025-08-10 18:49:36    courseName: '晨練課',
2025-08-10 18:49:36    scheduleTime: '07:00',
2025-08-10 18:49:36    recurring: false
2025-08-10 18:49:36  }
2025-08-10 18:49:36  📊 任務執行結果: {
2025-08-10 18:49:36    success: false,
2025-08-10 18:49:36    code: 'MISSING_FIELDS',
2025-08-10 18:49:36    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 18:49:36    expectingInput: true,
2025-08-10 18:49:36    missingFields: [ '課程日期' ]
2025-08-10 18:49:36  }
2025-08-10 18:49:36  {"ts":"2025-08-10T18:49:36.308Z","lvl":"info","stage":"task","traceId":"line_1754851774109_xgbj7p","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":143}
2025-08-10 18:49:36  🔍 檢查 replyToken: test-reply-token-1754851773902
2025-08-10 18:49:36  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:49:36  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 18:49:36  
2025-08-10 18:49:36  範例：「小明每週三下午3點數學課」
2025-08-10 18:49:36  {"ts":"2025-08-10T18:49:36.598Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754851774109_xgbj7p","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 18:49:49  📨 收到 1 個事件
2025-08-10 18:49:49  📋 事件類型: message
2025-08-10 18:49:49  🔍 完整事件 JSON: {
2025-08-10 18:49:49    "type": "message",
2025-08-10 18:49:49    "message": {
2025-08-10 18:49:49      "type": "text",
2025-08-10 18:49:49      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 18:49:49    },
2025-08-10 18:49:49    "source": {
2025-08-10 18:49:49      "userId": "U_test_user_qa",
2025-08-10 18:49:49      "type": "user"
2025-08-10 18:49:49    },
2025-08-10 18:49:49    "replyToken": "test-reply-token-1754851789230",
2025-08-10 18:49:49    "timestamp": 1754851789230
2025-08-10 18:49:49  }
2025-08-10 18:49:49  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:49:49  {"ts":"2025-08-10T18:49:49.406Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 18:49:49  🔍 用戶ID類型: string
2025-08-10 18:49:49  🔍 是否測試用戶: true
2025-08-10 18:49:49  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:49:49  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 18:49:49  ✅ 規則匹配成功: create_recurring_course
2025-08-10 18:49:49  {"ts":"2025-08-10T18:49:49.549Z","lvl":"info","stage":"nlp","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 18:49:49  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 18:49:49  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 18:49:49  ✅ 時間解析成功: {
2025-08-10 18:49:49    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 18:49:49    output: '15:00',
2025-08-10 18:49:49    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 18:49:49  }
2025-08-10 18:49:49  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:49:49  📊 規則提取置信度: 0.67
2025-08-10 18:49:49  🤖 啟用 AI 輔助提取...
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
2025-08-10 18:49:51  ✅ 最終 slots: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  {"ts":"2025-08-10T18:49:51.361Z","lvl":"info","stage":"slots","traceId":"line_1754851789406_qdqk5y","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:49:51  🎯 執行任務: create_recurring_course
2025-08-10 18:49:51  🎯 開始處理新增課程任務
2025-08-10 18:49:51  📋 接收參數: {
2025-08-10 18:49:51    studentName: 'Lumi',
2025-08-10 18:49:51    courseName: '鋼琴課',
2025-08-10 18:49:51    scheduleTime: '15:00',
2025-08-10 18:49:51    recurring: true
2025-08-10 18:49:51  }
2025-08-10 18:49:51  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:49:51  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:49:51      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:49:51      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:49:51      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:49:51      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:49:51      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:49:51      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:49:51      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:49:51      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:49:51      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:49:51      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:49:51    config: {
2025-08-10 18:49:51      url: URL {
2025-08-10 18:49:51        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        origin: 'https://www.googleapis.com',
2025-08-10 18:49:51        protocol: 'https:',
2025-08-10 18:49:51        username: '',
2025-08-10 18:49:51        password: '',
2025-08-10 18:49:51        host: 'www.googleapis.com',
2025-08-10 18:49:51        hostname: 'www.googleapis.com',
2025-08-10 18:49:51        port: '',
2025-08-10 18:49:51        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:49:51        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:49:51        searchParams: URLSearchParams {
2025-08-10 18:49:51          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51          'singleEvents' => 'true',
2025-08-10 18:49:51          'orderBy' => 'startTime' },
2025-08-10 18:49:51        hash: ''
2025-08-10 18:49:51      },
2025-08-10 18:49:51      method: 'GET',
2025-08-10 18:49:51      apiVersion: '',
2025-08-10 18:49:51      userAgentDirectives: [ [Object] ],
2025-08-10 18:49:51      paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51      headers: Headers {
2025-08-10 18:49:51        'accept-encoding': 'gzip',
2025-08-10 18:49:51        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      params: {
2025-08-10 18:49:51        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:49:51        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:49:51        singleEvents: true,
2025-08-10 18:49:51        orderBy: 'startTime'
2025-08-10 18:49:51      },
2025-08-10 18:49:51      validateStatus: [Function (anonymous)],
2025-08-10 18:49:51      retry: true,
2025-08-10 18:49:51      responseType: 'unknown',
2025-08-10 18:49:51      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:49:51      retryConfig: {
2025-08-10 18:49:51        currentRetryAttempt: 0,
2025-08-10 18:49:51        retry: 3,
2025-08-10 18:49:51        httpMethodsToRetry: [Array],
2025-08-10 18:49:51        noResponseRetries: 2,
2025-08-10 18:49:51        retryDelayMultiplier: 2,
2025-08-10 18:49:51        timeOfFirstRequest: 1754851791763,
2025-08-10 18:49:51        totalTimeout: 9007199254740991,
2025-08-10 18:49:51        maxRetryDelay: 9007199254740991,
2025-08-10 18:49:51        statusCodesToRetry: [Array]
2025-08-10 18:49:51      }
2025-08-10 18:49:51    },
2025-08-10 18:49:51    response: Response {
2025-08-10 18:49:51      size: 0,
2025-08-10 18:49:51      data: { error: [Object] },
2025-08-10 18:49:51      config: {
2025-08-10 18:49:51        url: URL {},
2025-08-10 18:49:51        method: 'GET',
2025-08-10 18:49:51        apiVersion: '',
2025-08-10 18:49:51        userAgentDirectives: [Array],
2025-08-10 18:49:51        paramsSerializer: [Function (anonymous)],
2025-08-10 18:49:51        headers: Headers {
2025-08-10 18:49:51          'accept-encoding': 'gzip',
2025-08-10 18:49:51          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:49:51          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:49:51          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:49:51        },
2025-08-10 18:49:51        params: [Object],
2025-08-10 18:49:51        validateStatus: [Function (anonymous)],
2025-08-10 18:49:51        retry: true,
2025-08-10 18:49:51        responseType: 'unknown',
2025-08-10 18:49:51        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:49:51      },
2025-08-10 18:49:51      Symbol(Body internals): {
