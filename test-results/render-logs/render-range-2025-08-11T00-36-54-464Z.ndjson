2025-08-11 00:21:59  📨 收到 1 個事件
2025-08-11 00:21:59  📋 事件類型: message
2025-08-11 00:21:59  🔍 完整事件 JSON: {
2025-08-11 00:21:59    "type": "message",
2025-08-11 00:21:59    "message": {
2025-08-11 00:21:59      "type": "text",
2025-08-11 00:21:59      "text": "查詢Lumi的重複課程"
2025-08-11 00:21:59    },
2025-08-11 00:21:59    "source": {
2025-08-11 00:21:59      "userId": "U_test_user_qa",
2025-08-11 00:21:59      "type": "user"
2025-08-11 00:21:59    },
2025-08-11 00:21:59    "replyToken": "test-reply-token-1754871719067",
2025-08-11 00:21:59    "timestamp": 1754871719067
2025-08-11 00:21:59  }
2025-08-11 00:21:59  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:21:59  {"ts":"2025-08-11T00:21:59.427Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871719427_zafm31","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-11 00:21:59  🔍 用戶ID類型: string
2025-08-11 00:21:59  🔍 是否測試用戶: true
2025-08-11 00:21:59  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:21:59  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-11 00:21:59  ✅ 規則匹配成功: query_schedule
2025-08-11 00:21:59  {"ts":"2025-08-11T00:21:59.569Z","lvl":"info","stage":"nlp","traceId":"line_1754871719427_zafm31","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-11 00:21:59  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-11 00:21:59  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:21:59  📊 規則提取置信度: 0.50
2025-08-11 00:21:59  🤖 啟用 AI 輔助提取...
2025-08-11 00:22:00  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-11 00:22:00  {"ts":"2025-08-11T00:22:00.773Z","lvl":"info","stage":"slots","traceId":"line_1754871719427_zafm31","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-11 00:22:00  🎯 執行任務: query_schedule
2025-08-11 00:22:00  🎯 開始處理查詢課表任務
2025-08-11 00:22:00  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-11 00:22:00  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-11 00:22:00  📚 查詢到 353 筆課程資料
2025-08-11 00:22:01  📚 查詢到 0 筆課程
2025-08-11 00:22:01  📊 任務執行結果: {
2025-08-11 00:22:01    success: true,
2025-08-11 00:22:01    code: 'QUERY_OK_EMPTY',
2025-08-11 00:22:01    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-11 00:22:01      '\n' +
2025-08-11 00:22:01      '💡 您可以：\n' +
2025-08-11 00:22:01      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-11 00:22:01      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-11 00:22:01      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-11 00:22:01    data: {
2025-08-11 00:22:01      courseCount: 0,
2025-08-11 00:22:01      dateRange: {
2025-08-11 00:22:01        startDate: '2025-08-10',
2025-08-11 00:22:01        endDate: '2025-08-16',
2025-08-11 00:22:01        description: '本週'
2025-08-11 00:22:01      }
2025-08-11 00:22:01    }
2025-08-11 00:22:01  }
2025-08-11 00:22:01  {"ts":"2025-08-11T00:22:01.155Z","lvl":"info","stage":"task","traceId":"line_1754871719427_zafm31","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":382}
2025-08-11 00:22:01  🔍 檢查 replyToken: test-reply-token-1754871719067
2025-08-11 00:22:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:22:01  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-11 00:22:01  
2025-08-11 00:22:01  💡 您可以：
2025-08-11 00:22:01  • 新增課程：「小明明天上午10點英文課」
2025-08-11 00:22:01  • 查詢其他時間：「小明下週的課表」
2025-08-11 00:22:01  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-11 00:22:01  {"ts":"2025-08-11T00:22:01.438Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871719427_zafm31","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-11 00:22:14  📨 收到 1 個事件
2025-08-11 00:22:14  📋 事件類型: message
2025-08-11 00:22:14  🔍 完整事件 JSON: {
2025-08-11 00:22:14    "type": "message",
2025-08-11 00:22:14    "message": {
2025-08-11 00:22:14      "type": "text",
2025-08-11 00:22:14      "text": "今天小明的數學課學了分數加減法"
2025-08-11 00:22:14    },
2025-08-11 00:22:14    "source": {
2025-08-11 00:22:14      "userId": "U_test_user_qa",
2025-08-11 00:22:14      "type": "user"
2025-08-11 00:22:14    },
2025-08-11 00:22:14    "replyToken": "test-reply-token-1754871733842",
2025-08-11 00:22:14    "timestamp": 1754871733842
2025-08-11 00:22:14  }
2025-08-11 00:22:14  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:22:14  {"ts":"2025-08-11T00:22:14.098Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871734098_vxpulp","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-11 00:22:14  🔍 用戶ID類型: string
2025-08-11 00:22:14  🔍 是否測試用戶: true
2025-08-11 00:22:14  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:22:14  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-11 00:22:14  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:22:14  {"ts":"2025-08-11T00:22:14.239Z","lvl":"info","stage":"nlp","traceId":"line_1754871734098_vxpulp","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:22:14  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:22:14  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:22:14  📊 規則提取置信度: 1.00
2025-08-11 00:22:14  🤖 啟用 AI 輔助提取...
2025-08-11 00:22:15  ✅ 最終 slots: {
2025-08-11 00:22:15    studentName: '小明',
2025-08-11 00:22:15    courseName: '數學課',
2025-08-11 00:22:15    timeReference: 'today',
2025-08-11 00:22:15    content: '分數加減法'
2025-08-11 00:22:15  }
2025-08-11 00:22:15  {"ts":"2025-08-11T00:22:15.598Z","lvl":"info","stage":"slots","traceId":"line_1754871734098_vxpulp","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:22:15  🎯 執行任務: record_content
2025-08-11 00:22:15  📝 開始處理記錄課程內容任務: {
2025-08-11 00:22:15    studentName: '小明',
2025-08-11 00:22:15  ✅ 最終 slots: {
2025-08-11 00:22:15    studentName: '小明',
2025-08-11 00:22:15    courseName: '數學課',
2025-08-11 00:22:15    timeReference: 'today',
2025-08-11 00:22:15    content: '分數加減法'
2025-08-11 00:22:15  }
2025-08-11 00:22:15  {"ts":"2025-08-11T00:22:15.598Z","lvl":"info","stage":"slots","traceId":"line_1754871734098_vxpulp","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:22:15  🎯 執行任務: record_content
2025-08-11 00:22:15  📝 開始處理記錄課程內容任務: {
2025-08-11 00:22:15    studentName: '小明',
2025-08-11 00:22:15    courseName: '數學課',
2025-08-11 00:22:15    timeReference: 'today',
2025-08-11 00:22:15    content: '分數加減法'
2025-08-11 00:22:15  }
2025-08-11 00:22:15  🔍 查找課程: 小明 - 數學課 - 2025-08-11
2025-08-11 00:22:15  ✅ 找到匹配的單次課程: 0Gk6c0CUqgnYuYkJddgR
2025-08-11 00:22:15  ✅ 文檔已添加到 course_contents: 6kV1YFPX0zpE7tu91FrZ
2025-08-11 00:22:15  ✅ 課程內容記錄已儲存: 6kV1YFPX0zpE7tu91FrZ
2025-08-11 00:22:15  ✅ 文檔已更新 (courses/0Gk6c0CUqgnYuYkJddgR)
2025-08-11 00:22:15  📊 任務執行結果: {
2025-08-11 00:22:15    success: true,
2025-08-11 00:22:15    code: 'RECORD_CONTENT_OK',
2025-08-11 00:22:15    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-11\n💬 內容：分數加減法',
2025-08-11 00:22:15    data: {
2025-08-11 00:22:15      recordId: '6kV1YFPX0zpE7tu91FrZ',
2025-08-11 00:22:15      courseId: '0Gk6c0CUqgnYuYkJddgR',
2025-08-11 00:22:15      targetDate: '2025-08-11'
2025-08-11 00:22:15    }
2025-08-11 00:22:15  }
2025-08-11 00:22:15  {"ts":"2025-08-11T00:22:15.907Z","lvl":"info","stage":"task","traceId":"line_1754871734098_vxpulp","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":309}
2025-08-11 00:22:16  🔍 檢查 replyToken: test-reply-token-1754871733842
2025-08-11 00:22:16  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:22:16  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:22:16  📚 課程：小明 - 數學課
2025-08-11 00:22:16  📅 日期：2025-08-11
2025-08-11 00:22:16  💬 內容：分數加減法
2025-08-11 00:22:16  {"ts":"2025-08-11T00:22:16.191Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871734098_vxpulp","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-11\n💬 內容：分數加減法","quickReply":true}
2025-08-11 00:22:29  📨 收到 1 個事件
2025-08-11 00:22:29  📋 事件類型: message
2025-08-11 00:22:29  🔍 完整事件 JSON: {
2025-08-11 00:22:29    "type": "message",
2025-08-11 00:22:29    "message": {
2025-08-11 00:22:29      "type": "text",
2025-08-11 00:22:29      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-11 00:22:29    },
2025-08-11 00:22:29    "source": {
2025-08-11 00:22:29      "userId": "U_test_user_qa",
2025-08-11 00:22:29      "type": "user"
2025-08-11 00:22:29    },
2025-08-11 00:22:29    "replyToken": "test-reply-token-1754871748766",
2025-08-11 00:22:29    "timestamp": 1754871748766
2025-08-11 00:22:29  }
2025-08-11 00:22:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:22:29  {"ts":"2025-08-11T00:22:29.126Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871749126_mhhn4b","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-11 00:22:29  🔍 用戶ID類型: string
2025-08-11 00:22:29  🔍 是否測試用戶: true
2025-08-11 00:22:29  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:22:29  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-11 00:22:29  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:22:29  {"ts":"2025-08-11T00:22:29.269Z","lvl":"info","stage":"nlp","traceId":"line_1754871749126_mhhn4b","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:22:29  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:22:29  📊 規則提取置信度: 0.33
2025-08-11 00:22:29  🔄 規則提取信心度低，AI 輔助增強...
2025-08-11 00:22:30  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:22:30  {"ts":"2025-08-11T00:22:30.576Z","lvl":"info","stage":"slots","traceId":"line_1754871749126_mhhn4b","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-11 00:22:30  🎯 執行任務: record_content
2025-08-11 00:22:30  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:22:30  ✅ 文檔已添加到 course_contents: BA89NiXJ7Ax6s9L98Vb8
2025-08-11 00:22:30  ✅ 課程內容記錄已儲存: BA89NiXJ7Ax6s9L98Vb8
2025-08-11 00:22:30  📊 任務執行結果: {
2025-08-11 00:22:30    success: true,
2025-08-11 00:22:30    code: 'RECORD_CONTENT_OK',
2025-08-11 00:22:30    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-10\n💬 內容：練習了小星星',
2025-08-11 00:22:30    data: {
2025-08-11 00:22:30      recordId: 'BA89NiXJ7Ax6s9L98Vb8',
2025-08-11 00:22:30      courseId: null,
2025-08-11 00:22:30      targetDate: '2025-08-10'
2025-08-11 00:22:30    }
2025-08-11 00:22:30  }
2025-08-11 00:22:30  {"ts":"2025-08-11T00:22:30.648Z","lvl":"info","stage":"task","traceId":"line_1754871749126_mhhn4b","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":72}
2025-08-11 00:22:30  🔍 檢查 replyToken: test-reply-token-1754871748766
2025-08-11 00:22:30  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:22:30  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:22:30  📝 記錄為獨立內容
2025-08-11 00:22:30  📚 課程：鋼琴課
2025-08-11 00:22:30  📅 日期：2025-08-10
2025-08-11 00:22:30  💬 內容：練習了小星星
2025-08-11 00:22:30  {"ts":"2025-08-11T00:22:30.934Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871749126_mhhn4b","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-10\n💬 內容：練習了小星星","quickReply":true}
2025-08-11 00:22:43  📨 收到 1 個事件
2025-08-11 00:22:43  📋 事件類型: message
2025-08-11 00:22:43  🔍 完整事件 JSON: {
2025-08-11 00:22:43    "type": "message",
2025-08-11 00:22:43    "message": {
2025-08-11 00:22:43      "type": "text",
2025-08-11 00:22:43      "text": "小明昨天數學課學了什麼？"
2025-08-11 00:22:43    },
2025-08-11 00:22:43    "source": {
2025-08-11 00:22:43      "userId": "U_test_user_qa",
2025-08-11 00:22:43      "type": "user"
2025-08-11 00:22:43    },
2025-08-11 00:22:43  📨 收到 1 個事件
2025-08-11 00:22:43  📋 事件類型: message
2025-08-11 00:22:43  🔍 完整事件 JSON: {
2025-08-11 00:22:43    "type": "message",
2025-08-11 00:22:43    "message": {
2025-08-11 00:22:43      "type": "text",
2025-08-11 00:22:43      "text": "小明昨天數學課學了什麼？"
2025-08-11 00:22:43    },
2025-08-11 00:22:43    "source": {
2025-08-11 00:22:43      "userId": "U_test_user_qa",
2025-08-11 00:22:43      "type": "user"
2025-08-11 00:22:43    },
2025-08-11 00:22:43    "replyToken": "test-reply-token-1754871763203",
2025-08-11 00:22:43    "timestamp": 1754871763204
2025-08-11 00:22:43  }
2025-08-11 00:22:43  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:22:43  {"ts":"2025-08-11T00:22:43.477Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871763477_4of3ps","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-11 00:22:43  🔍 用戶ID類型: string
2025-08-11 00:22:43  🔍 是否測試用戶: true
2025-08-11 00:22:43  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:22:43  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-11 00:22:43  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:22:43  {"ts":"2025-08-11T00:22:43.619Z","lvl":"info","stage":"nlp","traceId":"line_1754871763477_4of3ps","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:22:43  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:22:43  📊 規則提取置信度: 0.67
2025-08-11 00:22:43  🤖 啟用 AI 輔助提取...
2025-08-11 00:22:45  ✅ 最終 slots: {
2025-08-11 00:22:45    studentName: '小明',
2025-08-11 00:22:45    courseName: '數學課',
2025-08-11 00:22:45    timeReference: 'yesterday',
2025-08-11 00:22:45    content: '什麼？'
2025-08-11 00:22:45  }
2025-08-11 00:22:45  {"ts":"2025-08-11T00:22:45.160Z","lvl":"info","stage":"slots","traceId":"line_1754871763477_4of3ps","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:22:45  🎯 執行任務: record_content
2025-08-11 00:22:45  📝 開始處理記錄課程內容任務: {
2025-08-11 00:22:45    studentName: '小明',
2025-08-11 00:22:45    courseName: '數學課',
2025-08-11 00:22:45    timeReference: 'yesterday',
2025-08-11 00:22:45    content: '什麼？'
2025-08-11 00:22:45  }
2025-08-11 00:22:45  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-11 00:22:45  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-11 00:22:45  ✅ 文檔已添加到 course_contents: oa3OEpPwnHcvlsJL3E4u
2025-08-11 00:22:45  ✅ 課程內容記錄已儲存: oa3OEpPwnHcvlsJL3E4u
2025-08-11 00:22:45  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-11 00:22:45  📊 任務執行結果: {
2025-08-11 00:22:45    success: true,
2025-08-11 00:22:45    code: 'RECORD_CONTENT_OK',
2025-08-11 00:22:45    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：什麼？',
2025-08-11 00:22:45    data: {
2025-08-11 00:22:45      recordId: 'oa3OEpPwnHcvlsJL3E4u',
2025-08-11 00:22:45      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-11 00:22:45      targetDate: '2025-08-10'
2025-08-11 00:22:45    }
2025-08-11 00:22:45  }
2025-08-11 00:22:45  {"ts":"2025-08-11T00:22:45.574Z","lvl":"info","stage":"task","traceId":"line_1754871763477_4of3ps","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":414}
2025-08-11 00:22:45  🔍 檢查 replyToken: test-reply-token-1754871763203
2025-08-11 00:22:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:22:45  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:22:45  📚 課程：小明 - 數學課
2025-08-11 00:22:45  📅 日期：2025-08-10
2025-08-11 00:22:45  💬 內容：什麼？
2025-08-11 00:22:45  {"ts":"2025-08-11T00:22:45.859Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871763477_4of3ps","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：什麼？","quickReply":true}
2025-08-11 00:22:52  📨 收到 1 個事件
2025-08-11 00:22:52  📋 事件類型: message
2025-08-11 00:22:52  🔍 完整事件 JSON: {
2025-08-11 00:22:52    "type": "message",
2025-08-11 00:22:52    "message": {
2025-08-11 00:22:52      "type": "text",
2025-08-11 00:22:52      "text": "記錄小明今天化學課的內容"
2025-08-11 00:22:52    },
2025-08-11 00:22:52    "source": {
2025-08-11 00:22:52      "userId": "U_test_user_qa",
2025-08-11 00:22:52      "type": "user"
2025-08-11 00:22:52    },
2025-08-11 00:22:52    "replyToken": "test-reply-token-1754871772763",
2025-08-11 00:22:52    "timestamp": 1754871772763
2025-08-11 00:22:52  }
2025-08-11 00:22:52  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:22:53  {"ts":"2025-08-11T00:22:53.020Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871773020_66b7g6","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-11 00:22:53  🔍 用戶ID類型: string
2025-08-11 00:22:53  🔍 是否測試用戶: true
2025-08-11 00:22:53  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:22:53  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-11 00:22:53  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:22:53  {"ts":"2025-08-11T00:22:53.162Z","lvl":"info","stage":"nlp","traceId":"line_1754871773020_66b7g6","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:22:53  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:22:53  📊 規則提取置信度: 0.67
2025-08-11 00:22:53  🤖 啟用 AI 輔助提取...
2025-08-11 00:22:54  ✅ 最終 slots: {
2025-08-11 00:22:54    studentName: '小明',
2025-08-11 00:22:54    courseName: '化學課',
2025-08-11 00:22:54    timeReference: 'today',
2025-08-11 00:22:54    content: '小明今天化學課的內容'
2025-08-11 00:22:54  }
2025-08-11 00:22:54  {"ts":"2025-08-11T00:22:54.865Z","lvl":"info","stage":"slots","traceId":"line_1754871773020_66b7g6","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:22:54  🎯 執行任務: record_content
2025-08-11 00:22:54  📝 開始處理記錄課程內容任務: {
2025-08-11 00:22:54    studentName: '小明',
2025-08-11 00:22:54    courseName: '化學課',
2025-08-11 00:22:54  ✅ 最終 slots: {
2025-08-11 00:22:54    studentName: '小明',
2025-08-11 00:22:54    courseName: '化學課',
2025-08-11 00:22:54    timeReference: 'today',
2025-08-11 00:22:54    content: '小明今天化學課的內容'
2025-08-11 00:22:54  }
2025-08-11 00:22:54  {"ts":"2025-08-11T00:22:54.865Z","lvl":"info","stage":"slots","traceId":"line_1754871773020_66b7g6","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:22:54  🎯 執行任務: record_content
2025-08-11 00:22:54  📝 開始處理記錄課程內容任務: {
2025-08-11 00:22:54    studentName: '小明',
2025-08-11 00:22:54    courseName: '化學課',
2025-08-11 00:22:54    timeReference: 'today',
2025-08-11 00:22:54    content: '小明今天化學課的內容'
2025-08-11 00:22:54  }
2025-08-11 00:22:54  🔍 查找課程: 小明 - 化學課 - 2025-08-11
2025-08-11 00:22:55  ❓ 未找到完全匹配的課程
2025-08-11 00:22:55  ✅ 文檔已添加到 course_contents: rnQ3fGfawYK7J567dMLV
2025-08-11 00:22:55  ✅ 課程內容記錄已儲存: rnQ3fGfawYK7J567dMLV
2025-08-11 00:22:55  📊 任務執行結果: {
2025-08-11 00:22:55    success: true,
2025-08-11 00:22:55    code: 'RECORD_CONTENT_OK',
2025-08-11 00:22:55    message: '✅ 課程內容已成功記錄！\n' +
2025-08-11 00:22:55      '📝 記錄為獨立內容\n' +
2025-08-11 00:22:55      '👨‍🎓 學生：小明\n' +
2025-08-11 00:22:55      '📚 課程：化學課\n' +
2025-08-11 00:22:55      '📅 日期：2025-08-11\n' +
2025-08-11 00:22:55      '💬 內容：小明今天化學課的內容',
2025-08-11 00:22:55    data: {
2025-08-11 00:22:55      recordId: 'rnQ3fGfawYK7J567dMLV',
2025-08-11 00:22:55      courseId: null,
2025-08-11 00:22:55      targetDate: '2025-08-11'
2025-08-11 00:22:55    }
2025-08-11 00:22:55  }
2025-08-11 00:22:55  {"ts":"2025-08-11T00:22:55.172Z","lvl":"info","stage":"task","traceId":"line_1754871773020_66b7g6","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":307}
2025-08-11 00:22:55  🔍 檢查 replyToken: test-reply-token-1754871772763
2025-08-11 00:22:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:22:55  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:22:55  📝 記錄為獨立內容
2025-08-11 00:22:55  👨‍🎓 學生：小明
2025-08-11 00:22:55  📚 課程：化學課
2025-08-11 00:22:55  📅 日期：2025-08-11
2025-08-11 00:22:55  💬 內容：小明今天化學課的內容
2025-08-11 00:22:55  {"ts":"2025-08-11T00:22:55.458Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871773020_66b7g6","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-11\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-11 00:23:08  📨 收到 1 個事件
2025-08-11 00:23:08  📋 事件類型: message
2025-08-11 00:23:08  🔍 完整事件 JSON: {
2025-08-11 00:23:08    "type": "message",
2025-08-11 00:23:08    "message": {
2025-08-11 00:23:08      "type": "text",
2025-08-11 00:23:08      "text": "提醒我小明的數學課"
2025-08-11 00:23:08    },
2025-08-11 00:23:08    "source": {
2025-08-11 00:23:08      "userId": "U_test_user_qa",
2025-08-11 00:23:08      "type": "user"
2025-08-11 00:23:08    },
2025-08-11 00:23:08    "replyToken": "test-reply-token-1754871787899",
2025-08-11 00:23:08    "timestamp": 1754871787899
2025-08-11 00:23:08  }
2025-08-11 00:23:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:23:08  {"ts":"2025-08-11T00:23:08.269Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871788269_6ulz9b","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-11 00:23:08  🔍 用戶ID類型: string
2025-08-11 00:23:08  🔍 是否測試用戶: true
2025-08-11 00:23:08  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:23:08  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-11 00:23:08  ✅ 規則匹配成功: set_reminder
2025-08-11 00:23:08  {"ts":"2025-08-11T00:23:08.412Z","lvl":"info","stage":"nlp","traceId":"line_1754871788269_6ulz9b","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:23:08  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:23:08  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:23:08  📊 規則提取置信度: 0.67
2025-08-11 00:23:08  🤖 啟用 AI 輔助提取...
2025-08-11 00:23:10  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:23:10  {"ts":"2025-08-11T00:23:10.215Z","lvl":"info","stage":"slots","traceId":"line_1754871788269_6ulz9b","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:23:10  🎯 執行任務: set_reminder
2025-08-11 00:23:10  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:23:10  📚 找到課程: 小明 的 數學課 (2025-08-12 14:00)
2025-08-11 00:23:10  📅 課程時間: 2025/8/12 下午2:00:00
2025-08-11 00:23:10  ⏰ 提醒時間: 2025/8/12 下午1:30:00
2025-08-11 00:23:10  ✅ 提醒記錄已創建: rTfnYtdycSd3NNlew6yf
2025-08-11 00:23:10  ✅ 提醒設定成功: rTfnYtdycSd3NNlew6yf
2025-08-11 00:23:10  📊 任務執行結果: {
2025-08-11 00:23:10    success: true,
2025-08-11 00:23:10    code: 'REMINDER_SET_OK',
2025-08-11 00:23:10    message: '✅ 提醒設定完成！\n' +
2025-08-11 00:23:10      '📚 課程：小明 的 數學課\n' +
2025-08-11 00:23:10      '📅 上課時間：8/12 下午02:00\n' +
2025-08-11 00:23:10      '⏰ 提醒時間：8/12 下午01:30 (提前 30 分鐘)'
2025-08-11 00:23:10  }
2025-08-11 00:23:10  {"ts":"2025-08-11T00:23:10.487Z","lvl":"info","stage":"task","traceId":"line_1754871788269_6ulz9b","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":272}
2025-08-11 00:23:10  🔍 檢查 replyToken: test-reply-token-1754871787899
2025-08-11 00:23:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:23:10  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-11 00:23:10  📚 課程：小明 的 數學課
2025-08-11 00:23:10  📅 上課時間：8/12 下午02:00
2025-08-11 00:23:10  ⏰ 提醒時間：8/12 下午01:30 (提前 30 分鐘)
2025-08-11 00:23:10  {"ts":"2025-08-11T00:23:10.772Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871788269_6ulz9b","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/12 下午02:00\n⏰ 提醒時間：8/12 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-11 00:23:23  📨 收到 1 個事件
2025-08-11 00:23:23  📋 事件類型: message
2025-08-11 00:23:23  🔍 完整事件 JSON: {
2025-08-11 00:23:23    "type": "message",
2025-08-11 00:23:23    "message": {
2025-08-11 00:23:23  📨 收到 1 個事件
2025-08-11 00:23:23  📋 事件類型: message
2025-08-11 00:23:23  🔍 完整事件 JSON: {
2025-08-11 00:23:23    "type": "message",
2025-08-11 00:23:23    "message": {
2025-08-11 00:23:23      "type": "text",
2025-08-11 00:23:23      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-11 00:23:23    },
2025-08-11 00:23:23    "source": {
2025-08-11 00:23:23      "userId": "U_test_user_qa",
2025-08-11 00:23:23      "type": "user"
2025-08-11 00:23:23    },
2025-08-11 00:23:23    "replyToken": "test-reply-token-1754871803146",
2025-08-11 00:23:23    "timestamp": 1754871803146
2025-08-11 00:23:23  }
2025-08-11 00:23:23  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:23:23  {"ts":"2025-08-11T00:23:23.502Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871803502_fphn1q","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-11 00:23:23  🔍 用戶ID類型: string
2025-08-11 00:23:23  🔍 是否測試用戶: true
2025-08-11 00:23:23  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:23:23  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-11 00:23:23  ✅ 規則匹配成功: set_reminder
2025-08-11 00:23:23  {"ts":"2025-08-11T00:23:23.644Z","lvl":"info","stage":"nlp","traceId":"line_1754871803502_fphn1q","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:23:23  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:23:23  📊 規則提取置信度: 0.67
2025-08-11 00:23:23  🤖 啟用 AI 輔助提取...
2025-08-11 00:23:24  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-11 00:23:24  {"ts":"2025-08-11T00:23:24.883Z","lvl":"info","stage":"slots","traceId":"line_1754871803502_fphn1q","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-11 00:23:24  🎯 執行任務: set_reminder
2025-08-11 00:23:24  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-11 00:23:24  📊 任務執行結果: {
2025-08-11 00:23:24    success: false,
2025-08-11 00:23:24    code: 'MISSING_STUDENT',
2025-08-11 00:23:24    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-11 00:23:24  }
2025-08-11 00:23:24  {"ts":"2025-08-11T00:23:24.883Z","lvl":"info","stage":"task","traceId":"line_1754871803502_fphn1q","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-11 00:23:25  🔍 檢查 replyToken: test-reply-token-1754871803146
2025-08-11 00:23:25  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:23:25  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-11 00:23:25  {"ts":"2025-08-11T00:23:25.168Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871803502_fphn1q","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-11 00:23:38  📨 收到 1 個事件
2025-08-11 00:23:38  📋 事件類型: message
2025-08-11 00:23:38  🔍 完整事件 JSON: {
2025-08-11 00:23:38    "type": "message",
2025-08-11 00:23:38    "message": {
2025-08-11 00:23:38      "type": "text",
2025-08-11 00:23:38      "text": "提醒我小明的物理課"
2025-08-11 00:23:38    },
2025-08-11 00:23:38    "source": {
2025-08-11 00:23:38      "userId": "U_test_user_qa",
2025-08-11 00:23:38      "type": "user"
2025-08-11 00:23:38    },
2025-08-11 00:23:38    "replyToken": "test-reply-token-1754871817720",
2025-08-11 00:23:38    "timestamp": 1754871817720
2025-08-11 00:23:38  }
2025-08-11 00:23:38  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:23:38  {"ts":"2025-08-11T00:23:38.097Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871818097_b2nrb8","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-11 00:23:38  🔍 用戶ID類型: string
2025-08-11 00:23:38  🔍 是否測試用戶: true
2025-08-11 00:23:38  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:23:38  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-11 00:23:38  ✅ 規則匹配成功: set_reminder
2025-08-11 00:23:38  {"ts":"2025-08-11T00:23:38.240Z","lvl":"info","stage":"nlp","traceId":"line_1754871818097_b2nrb8","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:23:38  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:23:38  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:23:38  📊 規則提取置信度: 0.67
2025-08-11 00:23:38  🤖 啟用 AI 輔助提取...
2025-08-11 00:23:39  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:23:39  {"ts":"2025-08-11T00:23:39.991Z","lvl":"info","stage":"slots","traceId":"line_1754871818097_b2nrb8","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:23:39  🎯 執行任務: set_reminder
2025-08-11 00:23:39  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:23:40  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-11 00:23:40  📊 任務執行結果: {
2025-08-11 00:23:40    success: false,
2025-08-11 00:23:40    code: 'NOT_FOUND',
2025-08-11 00:23:40    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-11 00:23:40  }
2025-08-11 00:23:40  {"ts":"2025-08-11T00:23:40.090Z","lvl":"info","stage":"task","traceId":"line_1754871818097_b2nrb8","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":99}
2025-08-11 00:23:40  🔍 檢查 replyToken: test-reply-token-1754871817720
2025-08-11 00:23:40  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:23:40  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-11 00:23:40  {"ts":"2025-08-11T00:23:40.374Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871818097_b2nrb8","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-11 00:23:52  📨 收到 1 個事件
2025-08-11 00:23:52  📋 事件類型: message
2025-08-11 00:23:52  🔍 完整事件 JSON: {
2025-08-11 00:23:52    "type": "message",
2025-08-11 00:23:52    "message": {
2025-08-11 00:23:52      "type": "text",
2025-08-11 00:23:52      "text": "小明的數學課改到下午4點"
2025-08-11 00:23:52    },
2025-08-11 00:23:52    "source": {
2025-08-11 00:23:52      "userId": "U_test_user_qa",
2025-08-11 00:23:52      "type": "user"
2025-08-11 00:23:52    },
2025-08-11 00:23:52    "replyToken": "test-reply-token-1754871832703",
2025-08-11 00:23:52    "timestamp": 1754871832703
2025-08-11 00:23:52  }
2025-08-11 00:23:52  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:23:53  {"ts":"2025-08-11T00:23:53.041Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871833041_kamx47","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-11 00:23:53  🔍 用戶ID類型: string
2025-08-11 00:23:53  {"ts":"2025-08-11T00:23:53.041Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871833041_kamx47","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-11 00:23:53  🔍 用戶ID類型: string
2025-08-11 00:23:53  🔍 是否測試用戶: true
2025-08-11 00:23:53  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:23:53  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-11 00:23:53  ✅ 規則匹配成功: modify_course
2025-08-11 00:23:53  {"ts":"2025-08-11T00:23:53.184Z","lvl":"info","stage":"nlp","traceId":"line_1754871833041_kamx47","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-11 00:23:53  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-11 00:23:53  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-11 00:23:53  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:23:53  📊 規則提取置信度: 0.00
2025-08-11 00:23:53  🔄 規則提取信心度低，AI 輔助增強...
2025-08-11 00:23:54  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-11 00:23:54  {"ts":"2025-08-11T00:23:54.902Z","lvl":"info","stage":"slots","traceId":"line_1754871833041_kamx47","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-11 00:23:54  🎯 執行任務: modify_course
2025-08-11 00:23:54  ✏️ 執行修改操作任務: {
2025-08-11 00:23:54    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-11 00:23:54    userId: 'U_test_user_qa'
2025-08-11 00:23:54  }
2025-08-11 00:23:54  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-11 00:23:54  {"ts":"2025-08-11T00:23:54.974Z","lvl":"info","stage":"task","traceId":"line_1754871833041_kamx47","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":72}
2025-08-11 00:23:55  🔍 檢查 replyToken: test-reply-token-1754871832703
2025-08-11 00:23:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:23:55  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-11 00:23:55  {"ts":"2025-08-11T00:23:55.274Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871833041_kamx47","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-11 00:24:08  📨 收到 1 個事件
2025-08-11 00:24:08  📋 事件類型: message
2025-08-11 00:24:08  🔍 完整事件 JSON: {
2025-08-11 00:24:08    "type": "message",
2025-08-11 00:24:08    "message": {
2025-08-11 00:24:08      "type": "text",
2025-08-11 00:24:08      "text": "小明每天的晨練課改到早上7點"
2025-08-11 00:24:08    },
2025-08-11 00:24:08    "source": {
2025-08-11 00:24:08      "userId": "U_test_user_qa",
2025-08-11 00:24:08      "type": "user"
2025-08-11 00:24:08    },
2025-08-11 00:24:08    "replyToken": "test-reply-token-1754871847801",
2025-08-11 00:24:08    "timestamp": 1754871847801
2025-08-11 00:24:08  }
2025-08-11 00:24:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:24:08  {"ts":"2025-08-11T00:24:08.239Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871848239_n9lch5","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-11 00:24:08  🔍 用戶ID類型: string
2025-08-11 00:24:08  🔍 是否測試用戶: true
2025-08-11 00:24:08  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:24:08  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-11 00:24:08  ✅ 規則匹配成功: create_recurring_course
2025-08-11 00:24:08  {"ts":"2025-08-11T00:24:08.382Z","lvl":"info","stage":"nlp","traceId":"line_1754871848239_n9lch5","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-11 00:24:08  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-11 00:24:08  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-11 00:24:08  ✅ 時間解析成功: {
2025-08-11 00:24:08    input: '小明每天的晨練課改到早上7點',
2025-08-11 00:24:08    output: '07:00',
2025-08-11 00:24:08    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-11 00:24:08  }
2025-08-11 00:24:08  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:24:08  📊 規則提取置信度: 0.67
2025-08-11 00:24:08  🤖 啟用 AI 輔助提取...
2025-08-11 00:24:10  ✅ 最終 slots: {
2025-08-11 00:24:10    studentName: '小明',
2025-08-11 00:24:10    courseName: '晨練課',
2025-08-11 00:24:10    scheduleTime: '07:00',
2025-08-11 00:24:10    recurring: false
2025-08-11 00:24:10  }
2025-08-11 00:24:10  {"ts":"2025-08-11T00:24:10.349Z","lvl":"info","stage":"slots","traceId":"line_1754871848239_n9lch5","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:10  🎯 執行任務: create_recurring_course
2025-08-11 00:24:10  🎯 開始處理新增課程任務
2025-08-11 00:24:10  📋 接收參數: {
2025-08-11 00:24:10    studentName: '小明',
2025-08-11 00:24:10    courseName: '晨練課',
2025-08-11 00:24:10    scheduleTime: '07:00',
2025-08-11 00:24:10    recurring: false
2025-08-11 00:24:10  }
2025-08-11 00:24:10  📊 任務執行結果: {
2025-08-11 00:24:10    success: false,
2025-08-11 00:24:10    code: 'MISSING_FIELDS',
2025-08-11 00:24:10    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-11 00:24:10    expectingInput: true,
2025-08-11 00:24:10    missingFields: [ '課程日期' ]
2025-08-11 00:24:10  }
2025-08-11 00:24:10  {"ts":"2025-08-11T00:24:10.492Z","lvl":"info","stage":"task","traceId":"line_1754871848239_n9lch5","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":143}
2025-08-11 00:24:10  🔍 檢查 replyToken: test-reply-token-1754871847801
2025-08-11 00:24:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:24:10  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-11 00:24:10  
2025-08-11 00:24:10  範例：「小明每週三下午3點數學課」
2025-08-11 00:24:10  {"ts":"2025-08-11T00:24:10.778Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754871848239_n9lch5","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-11 00:24:23  📨 收到 1 個事件
2025-08-11 00:24:23  📋 事件類型: message
2025-08-11 00:24:23  🔍 完整事件 JSON: {
2025-08-11 00:24:23    "type": "message",
2025-08-11 00:24:23    "message": {
2025-08-11 00:24:23      "type": "text",
2025-08-11 00:24:23      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-11 00:24:23    },
2025-08-11 00:24:23    "source": {
2025-08-11 00:24:23      "userId": "U_test_user_qa",
2025-08-11 00:24:23      "type": "user"
2025-08-11 00:24:23    },
2025-08-11 00:24:23    "replyToken": "test-reply-token-1754871863546",
2025-08-11 00:24:23  📨 收到 1 個事件
2025-08-11 00:24:23  📋 事件類型: message
2025-08-11 00:24:23  🔍 完整事件 JSON: {
2025-08-11 00:24:23    "type": "message",
2025-08-11 00:24:23    "message": {
2025-08-11 00:24:23      "type": "text",
2025-08-11 00:24:23      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-11 00:24:23    },
2025-08-11 00:24:23    "source": {
2025-08-11 00:24:23      "userId": "U_test_user_qa",
2025-08-11 00:24:23      "type": "user"
2025-08-11 00:24:23    },
2025-08-11 00:24:23    "replyToken": "test-reply-token-1754871863546",
2025-08-11 00:24:23    "timestamp": 1754871863546
2025-08-11 00:24:23  }
2025-08-11 00:24:23  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:24:23  {"ts":"2025-08-11T00:24:23.822Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-11 00:24:23  🔍 用戶ID類型: string
2025-08-11 00:24:23  🔍 是否測試用戶: true
2025-08-11 00:24:23  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:24:23  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-11 00:24:23  ✅ 規則匹配成功: create_recurring_course
2025-08-11 00:24:23  {"ts":"2025-08-11T00:24:23.965Z","lvl":"info","stage":"nlp","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-11 00:24:24  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-11 00:24:24  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-11 00:24:24  ✅ 時間解析成功: {
2025-08-11 00:24:24    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-11 00:24:24    output: '15:00',
2025-08-11 00:24:24    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-11 00:24:24  }
2025-08-11 00:24:24  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:24:24  📊 規則提取置信度: 0.67
2025-08-11 00:24:24  🤖 啟用 AI 輔助提取...
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
2025-08-11 00:24:25  ✅ 最終 slots: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  {"ts":"2025-08-11T00:24:25.505Z","lvl":"info","stage":"slots","traceId":"line_1754871863822_01iuod","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:24:25  🎯 執行任務: create_recurring_course
2025-08-11 00:24:25  🎯 開始處理新增課程任務
2025-08-11 00:24:25  📋 接收參數: {
2025-08-11 00:24:25    studentName: 'Lumi',
2025-08-11 00:24:25    courseName: '鋼琴課',
2025-08-11 00:24:25    scheduleTime: '15:00',
2025-08-11 00:24:25    recurring: true
2025-08-11 00:24:25  }
2025-08-11 00:24:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:24:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:24:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:24:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:24:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:24:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:24:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:24:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:24:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:24:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:24:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:24:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:24:25    config: {
2025-08-11 00:24:25      url: URL {
2025-08-11 00:24:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        origin: 'https://www.googleapis.com',
2025-08-11 00:24:25        protocol: 'https:',
2025-08-11 00:24:25        username: '',
2025-08-11 00:24:25        password: '',
2025-08-11 00:24:25        host: 'www.googleapis.com',
2025-08-11 00:24:25        hostname: 'www.googleapis.com',
2025-08-11 00:24:25        port: '',
2025-08-11 00:24:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:24:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:24:25        searchParams: URLSearchParams {
2025-08-11 00:24:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25          'singleEvents' => 'true',
2025-08-11 00:24:25          'orderBy' => 'startTime' },
2025-08-11 00:24:25        hash: ''
2025-08-11 00:24:25      },
2025-08-11 00:24:25      method: 'GET',
2025-08-11 00:24:25      apiVersion: '',
2025-08-11 00:24:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:24:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25      headers: Headers {
2025-08-11 00:24:25        'accept-encoding': 'gzip',
2025-08-11 00:24:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      params: {
2025-08-11 00:24:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:24:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:24:25        singleEvents: true,
2025-08-11 00:24:25        orderBy: 'startTime'
2025-08-11 00:24:25      },
2025-08-11 00:24:25      validateStatus: [Function (anonymous)],
2025-08-11 00:24:25      retry: true,
2025-08-11 00:24:25      responseType: 'unknown',
2025-08-11 00:24:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:24:25      retryConfig: {
2025-08-11 00:24:25        currentRetryAttempt: 0,
2025-08-11 00:24:25        retry: 3,
2025-08-11 00:24:25        httpMethodsToRetry: [Array],
2025-08-11 00:24:25        noResponseRetries: 2,
2025-08-11 00:24:25        retryDelayMultiplier: 2,
2025-08-11 00:24:25        timeOfFirstRequest: 1754871865902,
2025-08-11 00:24:25        totalTimeout: 9007199254740991,
2025-08-11 00:24:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:24:25        statusCodesToRetry: [Array]
2025-08-11 00:24:25      }
2025-08-11 00:24:25    },
2025-08-11 00:24:25    response: Response {
2025-08-11 00:24:25      size: 0,
2025-08-11 00:24:25      data: { error: [Object] },
2025-08-11 00:24:25      config: {
2025-08-11 00:24:25        url: URL {},
2025-08-11 00:24:25        method: 'GET',
2025-08-11 00:24:25        apiVersion: '',
2025-08-11 00:24:25        userAgentDirectives: [Array],
2025-08-11 00:24:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:24:25        headers: Headers {
2025-08-11 00:24:25          'accept-encoding': 'gzip',
2025-08-11 00:24:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:24:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:24:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:24:25        },
2025-08-11 00:24:25        params: [Object],
2025-08-11 00:24:25        validateStatus: [Function (anonymous)],
2025-08-11 00:24:25        retry: true,
2025-08-11 00:24:25        responseType: 'unknown',
2025-08-11 00:24:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:24:25      },
2025-08-11 00:24:25      Symbol(Body internals): {
