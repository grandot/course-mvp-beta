2025-08-11 00:00:18  📨 收到 1 個事件
2025-08-11 00:00:18  📋 事件類型: message
2025-08-11 00:00:18  🔍 完整事件 JSON: {
2025-08-11 00:00:18    "type": "message",
2025-08-11 00:00:18    "message": {
2025-08-11 00:00:18      "type": "text",
2025-08-11 00:00:18      "text": "小明的數學課什麼時候上？"
2025-08-11 00:00:18    },
2025-08-11 00:00:18    "source": {
2025-08-11 00:00:18      "userId": "U_test_user_qa",
2025-08-11 00:00:18      "type": "user"
2025-08-11 00:00:18    },
2025-08-11 00:00:18    "replyToken": "test-reply-token-1754870417976",
2025-08-11 00:00:18    "timestamp": 1754870417976
2025-08-11 00:00:18  }
2025-08-11 00:00:18  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:00:18  {"ts":"2025-08-11T00:00:18.219Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870418219_oimofh","userId":"U_test_user_qa","textIn":"小明的數學課什麼時候上？"}
2025-08-11 00:00:18  🔍 用戶ID類型: string
2025-08-11 00:00:18  🔍 是否測試用戶: true
2025-08-11 00:00:18  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:00:18  🎯 開始解析意圖: 小明的數學課什麼時候上？ (用戶: U_test_user_qa)
2025-08-11 00:00:18  🤖 啟用 AI 備援識別...
2025-08-11 00:00:19  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-11 00:00:19  {"ts":"2025-08-11T00:00:19.002Z","lvl":"info","stage":"nlp","traceId":"line_1754870418219_oimofh","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-11 00:00:19  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-11 00:00:19  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:00:19  📊 規則提取置信度: 0.50
2025-08-11 00:00:19  🤖 啟用 AI 輔助提取...
2025-08-11 00:00:20  🔧 自動修正提取結果: [ '移除無效課程名稱（問句殘片）: 課什麼時候上' ]
2025-08-11 00:00:20  ✅ 最終 slots: { studentName: '小明' }
2025-08-11 00:00:20  {"ts":"2025-08-11T00:00:20.642Z","lvl":"info","stage":"slots","traceId":"line_1754870418219_oimofh","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName"]}
2025-08-11 00:00:20  🎯 執行任務: query_schedule
2025-08-11 00:00:20  🎯 開始處理查詢課表任務
2025-08-11 00:00:20  📋 接收參數: { studentName: '小明' }
2025-08-11 00:00:20  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-11 00:00:20  📚 查詢到 360 筆課程資料
2025-08-11 00:00:21  📚 查詢到 19 筆課程
2025-08-11 00:00:21  📊 任務執行結果: {
2025-08-11 00:00:21    success: true,
2025-08-11 00:00:21    code: 'QUERY_OK',
2025-08-11 00:00:21    message: '📅 小明本週的課程安排\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/9 (週六)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/10 (週日)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  下午2:00 - 數學課\n' +
2025-08-11 00:00:21      '  下午2:00 - 小明今天有什麼課？\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/11 (週一)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 英文課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  下午2:00 - 數學課\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/12 (週二)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  下午7:00 - 游泳課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/13 (週三)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/14 (週四)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/15 (週五)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄',
2025-08-11 00:00:21    data: {
2025-08-11 00:00:21      courses: [
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object]
2025-08-11 00:00:21      ],
2025-08-11 00:00:21      courseCount: 19,
2025-08-11 00:00:21      dateRange: {
2025-08-11 00:00:21        startDate: '2025-08-10',
2025-08-11 00:00:21        endDate: '2025-08-16',
2025-08-11 00:00:21        description: '本週'
2025-08-11 00:00:21      }
2025-08-11 00:00:21    }
2025-08-11 00:00:21  }
2025-08-11 00:00:21  {"ts":"2025-08-11T00:00:21.045Z","lvl":"info","stage":"task","traceId":"line_1754870418219_oimofh","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":403}
2025-08-11 00:00:21  🔍 檢查 replyToken: test-reply-token-1754870417976
2025-08-11 00:00:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:00:21  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/9 (週六)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21  📚 查詢到 19 筆課程
2025-08-11 00:00:21  📊 任務執行結果: {
2025-08-11 00:00:21    success: true,
2025-08-11 00:00:21    code: 'QUERY_OK',
2025-08-11 00:00:21    message: '📅 小明本週的課程安排\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/9 (週六)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/10 (週日)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  下午2:00 - 數學課\n' +
2025-08-11 00:00:21      '  下午2:00 - 小明今天有什麼課？\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/11 (週一)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 英文課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  下午2:00 - 數學課\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/12 (週二)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  下午7:00 - 游泳課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/13 (週三)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/14 (週四)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '\n' +
2025-08-11 00:00:21      '📆 8/15 (週五)\n' +
2025-08-11 00:00:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:21      '  上午8:00 - 晨練課 🔄',
2025-08-11 00:00:21    data: {
2025-08-11 00:00:21      courses: [
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object], [Object], [Object],
2025-08-11 00:00:21        [Object]
2025-08-11 00:00:21      ],
2025-08-11 00:00:21      courseCount: 19,
2025-08-11 00:00:21      dateRange: {
2025-08-11 00:00:21        startDate: '2025-08-10',
2025-08-11 00:00:21        endDate: '2025-08-16',
2025-08-11 00:00:21        description: '本週'
2025-08-11 00:00:21      }
2025-08-11 00:00:21    }
2025-08-11 00:00:21  }
2025-08-11 00:00:21  {"ts":"2025-08-11T00:00:21.045Z","lvl":"info","stage":"task","traceId":"line_1754870418219_oimofh","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":403}
2025-08-11 00:00:21  🔍 檢查 replyToken: test-reply-token-1754870417976
2025-08-11 00:00:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:00:21  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/9 (週六)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/10 (週日)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21    下午2:00 - 數學課
2025-08-11 00:00:21    下午2:00 - 小明今天有什麼課？
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/11 (週一)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 英文課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21    下午2:00 - 數學課
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/12 (週二)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21    下午7:00 - 游泳課 🔄
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/13 (週三)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/14 (週四)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21  
2025-08-11 00:00:21  📆 8/15 (週五)
2025-08-11 00:00:21    上午7:00 - 晨練課 🔄
2025-08-11 00:00:21    上午8:00 - 晨練課 🔄
2025-08-11 00:00:21  {"ts":"2025-08-11T00:00:21.332Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870418219_oimofh","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n  下午2:00 - 數學課\n  下午2:00 - 小明今天有什麼課？\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 英文課 🔄\n  上午8:00 - 晨練課 🔄\n  下午2:00 - 數學課\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n  下午7:00 - 游泳課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-11 00:00:34  📨 收到 1 個事件
2025-08-11 00:00:34  📋 事件類型: message
2025-08-11 00:00:34  🔍 完整事件 JSON: {
2025-08-11 00:00:34    "type": "message",
2025-08-11 00:00:34    "message": {
2025-08-11 00:00:34      "type": "text",
2025-08-11 00:00:34  📨 收到 1 個事件
2025-08-11 00:00:34  📋 事件類型: message
2025-08-11 00:00:34  🔍 完整事件 JSON: {
2025-08-11 00:00:34    "type": "message",
2025-08-11 00:00:34    "message": {
2025-08-11 00:00:34      "type": "text",
2025-08-11 00:00:34      "text": "小明的晨練課每天幾點？"
2025-08-11 00:00:34    },
2025-08-11 00:00:34    "source": {
2025-08-11 00:00:34      "userId": "U_test_user_qa",
2025-08-11 00:00:34      "type": "user"
2025-08-11 00:00:34    },
2025-08-11 00:00:34    "replyToken": "test-reply-token-1754870433855",
2025-08-11 00:00:34    "timestamp": 1754870433855
2025-08-11 00:00:34  }
2025-08-11 00:00:34  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:00:34  {"ts":"2025-08-11T00:00:34.098Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870434098_6p2zpr","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-11 00:00:34  🔍 用戶ID類型: string
2025-08-11 00:00:34  🔍 是否測試用戶: true
2025-08-11 00:00:34  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:00:34  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-11 00:00:34  🤖 啟用 AI 備援識別...
2025-08-11 00:00:35  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-11 00:00:35  {"ts":"2025-08-11T00:00:35.057Z","lvl":"info","stage":"nlp","traceId":"line_1754870434098_6p2zpr","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-11 00:00:35  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-11 00:00:35  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:00:35  📊 規則提取置信度: 0.50
2025-08-11 00:00:35  🤖 啟用 AI 輔助提取...
2025-08-11 00:00:37  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-11 00:00:37  {"ts":"2025-08-11T00:00:37.306Z","lvl":"info","stage":"slots","traceId":"line_1754870434098_6p2zpr","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-11 00:00:37  🎯 執行任務: query_schedule
2025-08-11 00:00:37  🎯 開始處理查詢課表任務
2025-08-11 00:00:37  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-11 00:00:37  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-11 00:00:37  📚 查詢到 360 筆課程資料
2025-08-11 00:00:37  📚 查詢到 14 筆課程
2025-08-11 00:00:37  📊 任務執行結果: {
2025-08-11 00:00:37    success: true,
2025-08-11 00:00:37    code: 'QUERY_OK',
2025-08-11 00:00:37    message: '📅 小明本週的課程安排\n' +
2025-08-11 00:00:37      '\n' +
2025-08-11 00:00:37      '📆 8/9 (週六)\n' +
2025-08-11 00:00:37      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '\n' +
2025-08-11 00:00:37      '📆 8/10 (週日)\n' +
2025-08-11 00:00:37      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '\n' +
2025-08-11 00:00:37      '📆 8/11 (週一)\n' +
2025-08-11 00:00:37      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '\n' +
2025-08-11 00:00:37      '📆 8/12 (週二)\n' +
2025-08-11 00:00:37      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '\n' +
2025-08-11 00:00:37      '📆 8/13 (週三)\n' +
2025-08-11 00:00:37      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '\n' +
2025-08-11 00:00:37      '📆 8/14 (週四)\n' +
2025-08-11 00:00:37      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '\n' +
2025-08-11 00:00:37      '📆 8/15 (週五)\n' +
2025-08-11 00:00:37      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:00:37      '  上午8:00 - 晨練課 🔄',
2025-08-11 00:00:37    data: {
2025-08-11 00:00:37      courses: [
2025-08-11 00:00:37        [Object], [Object],
2025-08-11 00:00:37        [Object], [Object],
2025-08-11 00:00:37        [Object], [Object],
2025-08-11 00:00:37        [Object], [Object],
2025-08-11 00:00:37        [Object], [Object],
2025-08-11 00:00:37        [Object], [Object],
2025-08-11 00:00:37        [Object], [Object]
2025-08-11 00:00:37      ],
2025-08-11 00:00:37      courseCount: 14,
2025-08-11 00:00:37      dateRange: {
2025-08-11 00:00:37        startDate: '2025-08-10',
2025-08-11 00:00:37        endDate: '2025-08-16',
2025-08-11 00:00:37        description: '本週'
2025-08-11 00:00:37      }
2025-08-11 00:00:37    }
2025-08-11 00:00:37  }
2025-08-11 00:00:37  {"ts":"2025-08-11T00:00:37.857Z","lvl":"info","stage":"task","traceId":"line_1754870434098_6p2zpr","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":551}
2025-08-11 00:00:38  🔍 檢查 replyToken: test-reply-token-1754870433855
2025-08-11 00:00:38  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:00:38  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/9 (週六)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/10 (週日)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/11 (週一)
2025-08-11 00:00:38  🔍 檢查 replyToken: test-reply-token-1754870433855
2025-08-11 00:00:38  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:00:38  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/9 (週六)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/10 (週日)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/11 (週一)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/12 (週二)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/13 (週三)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/14 (週四)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  
2025-08-11 00:00:38  📆 8/15 (週五)
2025-08-11 00:00:38    上午7:00 - 晨練課 🔄
2025-08-11 00:00:38    上午8:00 - 晨練課 🔄
2025-08-11 00:00:38  {"ts":"2025-08-11T00:00:38.142Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870434098_6p2zpr","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-11 00:00:51  📨 收到 1 個事件
2025-08-11 00:00:51  📋 事件類型: message
2025-08-11 00:00:51  🔍 完整事件 JSON: {
2025-08-11 00:00:51    "type": "message",
2025-08-11 00:00:51    "message": {
2025-08-11 00:00:51      "type": "text",
2025-08-11 00:00:51      "text": "查詢Lumi的重複課程"
2025-08-11 00:00:51    },
2025-08-11 00:00:51    "source": {
2025-08-11 00:00:51      "userId": "U_test_user_qa",
2025-08-11 00:00:51      "type": "user"
2025-08-11 00:00:51    },
2025-08-11 00:00:51    "replyToken": "test-reply-token-1754870450980",
2025-08-11 00:00:51    "timestamp": 1754870450980
2025-08-11 00:00:51  }
2025-08-11 00:00:51  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:00:51  {"ts":"2025-08-11T00:00:51.357Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870451357_8kk7lm","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-11 00:00:51  🔍 用戶ID類型: string
2025-08-11 00:00:51  🔍 是否測試用戶: true
2025-08-11 00:00:51  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:00:51  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-11 00:00:51  ✅ 規則匹配成功: query_schedule
2025-08-11 00:00:51  {"ts":"2025-08-11T00:00:51.499Z","lvl":"info","stage":"nlp","traceId":"line_1754870451357_8kk7lm","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-11 00:00:51  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-11 00:00:51  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:00:51  📊 規則提取置信度: 0.50
2025-08-11 00:00:51  🤖 啟用 AI 輔助提取...
2025-08-11 00:00:52  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-11 00:00:52  {"ts":"2025-08-11T00:00:52.812Z","lvl":"info","stage":"slots","traceId":"line_1754870451357_8kk7lm","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-11 00:00:52  🎯 執行任務: query_schedule
2025-08-11 00:00:52  🎯 開始處理查詢課表任務
2025-08-11 00:00:52  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-11 00:00:52  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-11 00:00:52  📚 查詢到 351 筆課程資料
2025-08-11 00:00:53  📚 查詢到 0 筆課程
2025-08-11 00:00:53  📊 任務執行結果: {
2025-08-11 00:00:53    success: true,
2025-08-11 00:00:53    code: 'QUERY_OK_EMPTY',
2025-08-11 00:00:53    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-11 00:00:53      '\n' +
2025-08-11 00:00:53      '💡 您可以：\n' +
2025-08-11 00:00:53      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-11 00:00:53      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-11 00:00:53      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-11 00:00:53    data: {
2025-08-11 00:00:53      courseCount: 0,
2025-08-11 00:00:53      dateRange: {
2025-08-11 00:00:53        startDate: '2025-08-10',
2025-08-11 00:00:53        endDate: '2025-08-16',
2025-08-11 00:00:53        description: '本週'
2025-08-11 00:00:53      }
2025-08-11 00:00:53    }
2025-08-11 00:00:53  }
2025-08-11 00:00:53  {"ts":"2025-08-11T00:00:53.160Z","lvl":"info","stage":"task","traceId":"line_1754870451357_8kk7lm","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":348}
2025-08-11 00:00:53  🔍 檢查 replyToken: test-reply-token-1754870450980
2025-08-11 00:00:53  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:00:53  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-11 00:00:53  
2025-08-11 00:00:53  💡 您可以：
2025-08-11 00:00:53  • 新增課程：「小明明天上午10點英文課」
2025-08-11 00:00:53  • 查詢其他時間：「小明下週的課表」
2025-08-11 00:00:53  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-11 00:00:53  {"ts":"2025-08-11T00:00:53.445Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870451357_8kk7lm","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-11 00:01:06  📨 收到 1 個事件
2025-08-11 00:01:06  📋 事件類型: message
2025-08-11 00:01:06  🔍 完整事件 JSON: {
2025-08-11 00:01:06    "type": "message",
2025-08-11 00:01:06    "message": {
2025-08-11 00:01:06  📨 收到 1 個事件
2025-08-11 00:01:06  📋 事件類型: message
2025-08-11 00:01:06  🔍 完整事件 JSON: {
2025-08-11 00:01:06    "type": "message",
2025-08-11 00:01:06    "message": {
2025-08-11 00:01:06      "type": "text",
2025-08-11 00:01:06      "text": "今天小明的數學課學了分數加減法"
2025-08-11 00:01:06    },
2025-08-11 00:01:06    "source": {
2025-08-11 00:01:06      "userId": "U_test_user_qa",
2025-08-11 00:01:06      "type": "user"
2025-08-11 00:01:06    },
2025-08-11 00:01:06    "replyToken": "test-reply-token-1754870466347",
2025-08-11 00:01:06    "timestamp": 1754870466347
2025-08-11 00:01:06  }
2025-08-11 00:01:06  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:01:06  {"ts":"2025-08-11T00:01:06.586Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870466586_4m0i8i","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-11 00:01:06  🔍 用戶ID類型: string
2025-08-11 00:01:06  🔍 是否測試用戶: true
2025-08-11 00:01:06  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:01:06  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-11 00:01:06  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:01:06  {"ts":"2025-08-11T00:01:06.729Z","lvl":"info","stage":"nlp","traceId":"line_1754870466586_4m0i8i","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:01:06  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:01:07  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:01:07  📊 規則提取置信度: 1.00
2025-08-11 00:01:07  🤖 啟用 AI 輔助提取...
2025-08-11 00:01:08  ✅ 最終 slots: {
2025-08-11 00:01:08    studentName: '小明',
2025-08-11 00:01:08    courseName: '數學課',
2025-08-11 00:01:08    timeReference: 'today',
2025-08-11 00:01:08    content: '分數加減法'
2025-08-11 00:01:08  }
2025-08-11 00:01:08  {"ts":"2025-08-11T00:01:08.293Z","lvl":"info","stage":"slots","traceId":"line_1754870466586_4m0i8i","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:01:08  🎯 執行任務: record_content
2025-08-11 00:01:08  📝 開始處理記錄課程內容任務: {
2025-08-11 00:01:08    studentName: '小明',
2025-08-11 00:01:08    courseName: '數學課',
2025-08-11 00:01:08    timeReference: 'today',
2025-08-11 00:01:08    content: '分數加減法'
2025-08-11 00:01:08  }
2025-08-11 00:01:08  🔍 查找課程: 小明 - 數學課 - 2025-08-11
2025-08-11 00:01:08  ✅ 找到匹配的單次課程: 0Gk6c0CUqgnYuYkJddgR
2025-08-11 00:01:08  ✅ 文檔已添加到 course_contents: 6M1iV0fy5HUyTgxdNnYg
2025-08-11 00:01:08  ✅ 課程內容記錄已儲存: 6M1iV0fy5HUyTgxdNnYg
2025-08-11 00:01:08  ✅ 文檔已更新 (courses/0Gk6c0CUqgnYuYkJddgR)
2025-08-11 00:01:08  📊 任務執行結果: {
2025-08-11 00:01:08    success: true,
2025-08-11 00:01:08    code: 'RECORD_CONTENT_OK',
2025-08-11 00:01:08    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-11\n💬 內容：分數加減法',
2025-08-11 00:01:08    data: {
2025-08-11 00:01:08      recordId: '6M1iV0fy5HUyTgxdNnYg',
2025-08-11 00:01:08      courseId: '0Gk6c0CUqgnYuYkJddgR',
2025-08-11 00:01:08      targetDate: '2025-08-11'
2025-08-11 00:01:08    }
2025-08-11 00:01:08  }
2025-08-11 00:01:08  {"ts":"2025-08-11T00:01:08.680Z","lvl":"info","stage":"task","traceId":"line_1754870466586_4m0i8i","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":387}
2025-08-11 00:01:08  🔍 檢查 replyToken: test-reply-token-1754870466347
2025-08-11 00:01:08  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:01:08  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:01:08  📚 課程：小明 - 數學課
2025-08-11 00:01:08  📅 日期：2025-08-11
2025-08-11 00:01:08  💬 內容：分數加減法
2025-08-11 00:01:08  {"ts":"2025-08-11T00:01:08.967Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870466586_4m0i8i","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-11\n💬 內容：分數加減法","quickReply":true}
2025-08-11 00:01:21  📨 收到 1 個事件
2025-08-11 00:01:21  📋 事件類型: message
2025-08-11 00:01:21  🔍 完整事件 JSON: {
2025-08-11 00:01:21    "type": "message",
2025-08-11 00:01:21    "message": {
2025-08-11 00:01:21      "type": "text",
2025-08-11 00:01:21      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-11 00:01:21    },
2025-08-11 00:01:21    "source": {
2025-08-11 00:01:21      "userId": "U_test_user_qa",
2025-08-11 00:01:21      "type": "user"
2025-08-11 00:01:21    },
2025-08-11 00:01:21    "replyToken": "test-reply-token-1754870481242",
2025-08-11 00:01:21    "timestamp": 1754870481242
2025-08-11 00:01:21  }
2025-08-11 00:01:21  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:01:21  {"ts":"2025-08-11T00:01:21.597Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870481597_0u2e0k","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-11 00:01:21  🔍 用戶ID類型: string
2025-08-11 00:01:21  🔍 是否測試用戶: true
2025-08-11 00:01:21  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:01:21  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-11 00:01:21  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:01:21  {"ts":"2025-08-11T00:01:21.739Z","lvl":"info","stage":"nlp","traceId":"line_1754870481597_0u2e0k","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:01:21  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:01:22  📊 規則提取置信度: 0.33
2025-08-11 00:01:22  🔄 規則提取信心度低，AI 輔助增強...
2025-08-11 00:01:23  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:01:23  {"ts":"2025-08-11T00:01:23.575Z","lvl":"info","stage":"slots","traceId":"line_1754870481597_0u2e0k","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-11 00:01:23  🎯 執行任務: record_content
2025-08-11 00:01:23  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:01:23  ✅ 文檔已添加到 course_contents: sv5sJigA0cBVCf7S73Iz
2025-08-11 00:01:23  ✅ 課程內容記錄已儲存: sv5sJigA0cBVCf7S73Iz
2025-08-11 00:01:23  📊 任務執行結果: {
2025-08-11 00:01:23    success: true,
2025-08-11 00:01:23    code: 'RECORD_CONTENT_OK',
2025-08-11 00:01:23    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-10\n💬 內容：練習了小星星',
2025-08-11 00:01:23  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:01:23  {"ts":"2025-08-11T00:01:23.575Z","lvl":"info","stage":"slots","traceId":"line_1754870481597_0u2e0k","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-11 00:01:23  🎯 執行任務: record_content
2025-08-11 00:01:23  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:01:23  ✅ 文檔已添加到 course_contents: sv5sJigA0cBVCf7S73Iz
2025-08-11 00:01:23  ✅ 課程內容記錄已儲存: sv5sJigA0cBVCf7S73Iz
2025-08-11 00:01:23  📊 任務執行結果: {
2025-08-11 00:01:23    success: true,
2025-08-11 00:01:23    code: 'RECORD_CONTENT_OK',
2025-08-11 00:01:23    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-10\n💬 內容：練習了小星星',
2025-08-11 00:01:23    data: {
2025-08-11 00:01:23      recordId: 'sv5sJigA0cBVCf7S73Iz',
2025-08-11 00:01:23      courseId: null,
2025-08-11 00:01:23      targetDate: '2025-08-10'
2025-08-11 00:01:23    }
2025-08-11 00:01:23  }
2025-08-11 00:01:23  {"ts":"2025-08-11T00:01:23.638Z","lvl":"info","stage":"task","traceId":"line_1754870481597_0u2e0k","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":63}
2025-08-11 00:01:23  🔍 檢查 replyToken: test-reply-token-1754870481242
2025-08-11 00:01:23  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:01:23  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:01:23  📝 記錄為獨立內容
2025-08-11 00:01:23  📚 課程：鋼琴課
2025-08-11 00:01:23  📅 日期：2025-08-10
2025-08-11 00:01:23  💬 內容：練習了小星星
2025-08-11 00:01:23  {"ts":"2025-08-11T00:01:23.923Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870481597_0u2e0k","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-10\n💬 內容：練習了小星星","quickReply":true}
2025-08-11 00:01:36  📨 收到 1 個事件
2025-08-11 00:01:36  📋 事件類型: message
2025-08-11 00:01:36  🔍 完整事件 JSON: {
2025-08-11 00:01:36    "type": "message",
2025-08-11 00:01:36    "message": {
2025-08-11 00:01:36      "type": "text",
2025-08-11 00:01:36      "text": "小明昨天數學課學了什麼？"
2025-08-11 00:01:36    },
2025-08-11 00:01:36    "source": {
2025-08-11 00:01:36      "userId": "U_test_user_qa",
2025-08-11 00:01:36      "type": "user"
2025-08-11 00:01:36    },
2025-08-11 00:01:36    "replyToken": "test-reply-token-1754870496237",
2025-08-11 00:01:36    "timestamp": 1754870496237
2025-08-11 00:01:36  }
2025-08-11 00:01:36  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:01:36  {"ts":"2025-08-11T00:01:36.483Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870496483_k2t0a6","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-11 00:01:36  🔍 用戶ID類型: string
2025-08-11 00:01:36  🔍 是否測試用戶: true
2025-08-11 00:01:36  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:01:36  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-11 00:01:36  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:01:36  {"ts":"2025-08-11T00:01:36.625Z","lvl":"info","stage":"nlp","traceId":"line_1754870496483_k2t0a6","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:01:36  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:01:36  📊 規則提取置信度: 0.67
2025-08-11 00:01:36  🤖 啟用 AI 輔助提取...
2025-08-11 00:01:38  ✅ 最終 slots: {
2025-08-11 00:01:38    studentName: '小明',
2025-08-11 00:01:38    courseName: '數學課',
2025-08-11 00:01:38    timeReference: 'yesterday',
2025-08-11 00:01:38    content: '什麼？'
2025-08-11 00:01:38  }
2025-08-11 00:01:38  {"ts":"2025-08-11T00:01:38.018Z","lvl":"info","stage":"slots","traceId":"line_1754870496483_k2t0a6","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:01:38  🎯 執行任務: record_content
2025-08-11 00:01:38  📝 開始處理記錄課程內容任務: {
2025-08-11 00:01:38    studentName: '小明',
2025-08-11 00:01:38    courseName: '數學課',
2025-08-11 00:01:38    timeReference: 'yesterday',
2025-08-11 00:01:38    content: '什麼？'
2025-08-11 00:01:38  }
2025-08-11 00:01:38  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-11 00:01:38  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-11 00:01:38  ✅ 文檔已添加到 course_contents: fRtAfgtqg5XnMKPLESda
2025-08-11 00:01:38  ✅ 課程內容記錄已儲存: fRtAfgtqg5XnMKPLESda
2025-08-11 00:01:38  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-11 00:01:38  📊 任務執行結果: {
2025-08-11 00:01:38    success: true,
2025-08-11 00:01:38    code: 'RECORD_CONTENT_OK',
2025-08-11 00:01:38    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：什麼？',
2025-08-11 00:01:38    data: {
2025-08-11 00:01:38      recordId: 'fRtAfgtqg5XnMKPLESda',
2025-08-11 00:01:38      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-11 00:01:38      targetDate: '2025-08-10'
2025-08-11 00:01:38    }
2025-08-11 00:01:38  }
2025-08-11 00:01:38  {"ts":"2025-08-11T00:01:38.357Z","lvl":"info","stage":"task","traceId":"line_1754870496483_k2t0a6","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":339}
2025-08-11 00:01:38  🔍 檢查 replyToken: test-reply-token-1754870496237
2025-08-11 00:01:38  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:01:38  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:01:38  📚 課程：小明 - 數學課
2025-08-11 00:01:38  📅 日期：2025-08-10
2025-08-11 00:01:38  💬 內容：什麼？
2025-08-11 00:01:38  {"ts":"2025-08-11T00:01:38.642Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870496483_k2t0a6","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：什麼？","quickReply":true}
2025-08-11 00:01:45  📨 收到 1 個事件
2025-08-11 00:01:45  📋 事件類型: message
2025-08-11 00:01:45  🔍 完整事件 JSON: {
2025-08-11 00:01:45    "type": "message",
2025-08-11 00:01:45    "message": {
2025-08-11 00:01:45      "type": "text",
2025-08-11 00:01:45      "text": "記錄小明今天化學課的內容"
2025-08-11 00:01:45    },
2025-08-11 00:01:45    "source": {
2025-08-11 00:01:45      "userId": "U_test_user_qa",
2025-08-11 00:01:45      "type": "user"
2025-08-11 00:01:45    },
2025-08-11 00:01:45  📨 收到 1 個事件
2025-08-11 00:01:45  📋 事件類型: message
2025-08-11 00:01:45  🔍 完整事件 JSON: {
2025-08-11 00:01:45    "type": "message",
2025-08-11 00:01:45    "message": {
2025-08-11 00:01:45      "type": "text",
2025-08-11 00:01:45      "text": "記錄小明今天化學課的內容"
2025-08-11 00:01:45    },
2025-08-11 00:01:45    "source": {
2025-08-11 00:01:45      "userId": "U_test_user_qa",
2025-08-11 00:01:45      "type": "user"
2025-08-11 00:01:45    },
2025-08-11 00:01:45    "replyToken": "test-reply-token-1754870505505",
2025-08-11 00:01:45    "timestamp": 1754870505505
2025-08-11 00:01:45  }
2025-08-11 00:01:45  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:01:45  {"ts":"2025-08-11T00:01:45.753Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870505753_ql6tv5","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-11 00:01:45  🔍 用戶ID類型: string
2025-08-11 00:01:45  🔍 是否測試用戶: true
2025-08-11 00:01:45  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:01:45  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-11 00:01:45  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:01:45  {"ts":"2025-08-11T00:01:45.895Z","lvl":"info","stage":"nlp","traceId":"line_1754870505753_ql6tv5","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:01:46  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:01:46  📊 規則提取置信度: 0.67
2025-08-11 00:01:46  🤖 啟用 AI 輔助提取...
2025-08-11 00:01:47  ✅ 最終 slots: {
2025-08-11 00:01:47    studentName: '小明',
2025-08-11 00:01:47    courseName: '化學課',
2025-08-11 00:01:47    timeReference: 'today',
2025-08-11 00:01:47    content: '小明今天化學課的內容'
2025-08-11 00:01:47  }
2025-08-11 00:01:47  {"ts":"2025-08-11T00:01:47.155Z","lvl":"info","stage":"slots","traceId":"line_1754870505753_ql6tv5","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:01:47  🎯 執行任務: record_content
2025-08-11 00:01:47  📝 開始處理記錄課程內容任務: {
2025-08-11 00:01:47    studentName: '小明',
2025-08-11 00:01:47    courseName: '化學課',
2025-08-11 00:01:47    timeReference: 'today',
2025-08-11 00:01:47    content: '小明今天化學課的內容'
2025-08-11 00:01:47  }
2025-08-11 00:01:47  🔍 查找課程: 小明 - 化學課 - 2025-08-11
2025-08-11 00:01:47  ❓ 未找到完全匹配的課程
2025-08-11 00:01:47  ✅ 文檔已添加到 course_contents: i4mX7yKhQYNTLk6gRCCz
2025-08-11 00:01:47  ✅ 課程內容記錄已儲存: i4mX7yKhQYNTLk6gRCCz
2025-08-11 00:01:47  📊 任務執行結果: {
2025-08-11 00:01:47    success: true,
2025-08-11 00:01:47    code: 'RECORD_CONTENT_OK',
2025-08-11 00:01:47    message: '✅ 課程內容已成功記錄！\n' +
2025-08-11 00:01:47      '📝 記錄為獨立內容\n' +
2025-08-11 00:01:47      '👨‍🎓 學生：小明\n' +
2025-08-11 00:01:47      '📚 課程：化學課\n' +
2025-08-11 00:01:47      '📅 日期：2025-08-11\n' +
2025-08-11 00:01:47      '💬 內容：小明今天化學課的內容',
2025-08-11 00:01:47    data: {
2025-08-11 00:01:47      recordId: 'i4mX7yKhQYNTLk6gRCCz',
2025-08-11 00:01:47      courseId: null,
2025-08-11 00:01:47      targetDate: '2025-08-11'
2025-08-11 00:01:47    }
2025-08-11 00:01:47  }
2025-08-11 00:01:47  {"ts":"2025-08-11T00:01:47.588Z","lvl":"info","stage":"task","traceId":"line_1754870505753_ql6tv5","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":433}
2025-08-11 00:01:47  🔍 檢查 replyToken: test-reply-token-1754870505505
2025-08-11 00:01:47  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:01:47  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:01:47  📝 記錄為獨立內容
2025-08-11 00:01:47  👨‍🎓 學生：小明
2025-08-11 00:01:47  📚 課程：化學課
2025-08-11 00:01:47  📅 日期：2025-08-11
2025-08-11 00:01:47  💬 內容：小明今天化學課的內容
2025-08-11 00:01:47  {"ts":"2025-08-11T00:01:47.873Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870505753_ql6tv5","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-11\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-11 00:02:00  📨 收到 1 個事件
2025-08-11 00:02:00  📋 事件類型: message
2025-08-11 00:02:00  🔍 完整事件 JSON: {
2025-08-11 00:02:00    "type": "message",
2025-08-11 00:02:00    "message": {
2025-08-11 00:02:00      "type": "text",
2025-08-11 00:02:00      "text": "提醒我小明的數學課"
2025-08-11 00:02:00    },
2025-08-11 00:02:00    "source": {
2025-08-11 00:02:00      "userId": "U_test_user_qa",
2025-08-11 00:02:00      "type": "user"
2025-08-11 00:02:00    },
2025-08-11 00:02:00    "replyToken": "test-reply-token-1754870520310",
2025-08-11 00:02:00    "timestamp": 1754870520310
2025-08-11 00:02:00  }
2025-08-11 00:02:00  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:02:00  {"ts":"2025-08-11T00:02:00.556Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870520556_6yeusa","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-11 00:02:00  🔍 用戶ID類型: string
2025-08-11 00:02:00  🔍 是否測試用戶: true
2025-08-11 00:02:00  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:02:00  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-11 00:02:00  ✅ 規則匹配成功: set_reminder
2025-08-11 00:02:00  {"ts":"2025-08-11T00:02:00.698Z","lvl":"info","stage":"nlp","traceId":"line_1754870520556_6yeusa","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:02:00  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:02:00  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:02:00  📊 規則提取置信度: 0.67
2025-08-11 00:02:00  🤖 啟用 AI 輔助提取...
2025-08-11 00:02:02  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:02:02  {"ts":"2025-08-11T00:02:02.212Z","lvl":"info","stage":"slots","traceId":"line_1754870520556_6yeusa","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:02:02  🎯 執行任務: set_reminder
2025-08-11 00:02:02  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:02:02  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:02:02  {"ts":"2025-08-11T00:02:02.212Z","lvl":"info","stage":"slots","traceId":"line_1754870520556_6yeusa","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:02:02  🎯 執行任務: set_reminder
2025-08-11 00:02:02  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:02:02  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-11 00:02:02  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-11 00:02:02  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-11 00:02:02  ✅ 提醒記錄已創建: DCLIiOQJC4asH7eXnxPe
2025-08-11 00:02:02  ✅ 提醒設定成功: DCLIiOQJC4asH7eXnxPe
2025-08-11 00:02:02  📊 任務執行結果: {
2025-08-11 00:02:02    success: true,
2025-08-11 00:02:02    code: 'REMINDER_SET_OK',
2025-08-11 00:02:02    message: '✅ 提醒設定完成！\n' +
2025-08-11 00:02:02      '📚 課程：小明 的 數學課\n' +
2025-08-11 00:02:02      '📅 上課時間：8/11 下午02:00\n' +
2025-08-11 00:02:02      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-11 00:02:02  }
2025-08-11 00:02:02  {"ts":"2025-08-11T00:02:02.474Z","lvl":"info","stage":"task","traceId":"line_1754870520556_6yeusa","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":262}
2025-08-11 00:02:02  🔍 檢查 replyToken: test-reply-token-1754870520310
2025-08-11 00:02:02  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:02:02  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-11 00:02:02  📚 課程：小明 的 數學課
2025-08-11 00:02:02  📅 上課時間：8/11 下午02:00
2025-08-11 00:02:02  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-11 00:02:02  {"ts":"2025-08-11T00:02:02.760Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870520556_6yeusa","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-11 00:02:15  📨 收到 1 個事件
2025-08-11 00:02:15  📋 事件類型: message
2025-08-11 00:02:15  🔍 完整事件 JSON: {
2025-08-11 00:02:15    "type": "message",
2025-08-11 00:02:15    "message": {
2025-08-11 00:02:15      "type": "text",
2025-08-11 00:02:15      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-11 00:02:15    },
2025-08-11 00:02:15    "source": {
2025-08-11 00:02:15      "userId": "U_test_user_qa",
2025-08-11 00:02:15      "type": "user"
2025-08-11 00:02:15    },
2025-08-11 00:02:15    "replyToken": "test-reply-token-1754870535170",
2025-08-11 00:02:15    "timestamp": 1754870535170
2025-08-11 00:02:15  }
2025-08-11 00:02:15  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:02:15  {"ts":"2025-08-11T00:02:15.410Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870535410_c7s2wz","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-11 00:02:15  🔍 用戶ID類型: string
2025-08-11 00:02:15  🔍 是否測試用戶: true
2025-08-11 00:02:15  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:02:15  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-11 00:02:15  ✅ 規則匹配成功: set_reminder
2025-08-11 00:02:15  {"ts":"2025-08-11T00:02:15.551Z","lvl":"info","stage":"nlp","traceId":"line_1754870535410_c7s2wz","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:02:15  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:02:15  📊 規則提取置信度: 0.67
2025-08-11 00:02:15  🤖 啟用 AI 輔助提取...
2025-08-11 00:02:17  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-11 00:02:17  {"ts":"2025-08-11T00:02:17.407Z","lvl":"info","stage":"slots","traceId":"line_1754870535410_c7s2wz","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-11 00:02:17  🎯 執行任務: set_reminder
2025-08-11 00:02:17  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-11 00:02:17  📊 任務執行結果: {
2025-08-11 00:02:17    success: false,
2025-08-11 00:02:17    code: 'MISSING_STUDENT',
2025-08-11 00:02:17    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-11 00:02:17  }
2025-08-11 00:02:17  {"ts":"2025-08-11T00:02:17.407Z","lvl":"info","stage":"task","traceId":"line_1754870535410_c7s2wz","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-11 00:02:17  🔍 檢查 replyToken: test-reply-token-1754870535170
2025-08-11 00:02:17  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:02:17  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-11 00:02:17  {"ts":"2025-08-11T00:02:17.690Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870535410_c7s2wz","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-11 00:02:30  📨 收到 1 個事件
2025-08-11 00:02:30  📋 事件類型: message
2025-08-11 00:02:30  🔍 完整事件 JSON: {
2025-08-11 00:02:30    "type": "message",
2025-08-11 00:02:30    "message": {
2025-08-11 00:02:30      "type": "text",
2025-08-11 00:02:30      "text": "提醒我小明的物理課"
2025-08-11 00:02:30    },
2025-08-11 00:02:30    "source": {
2025-08-11 00:02:30      "userId": "U_test_user_qa",
2025-08-11 00:02:30      "type": "user"
2025-08-11 00:02:30    },
2025-08-11 00:02:30    "replyToken": "test-reply-token-1754870550230",
2025-08-11 00:02:30    "timestamp": 1754870550230
2025-08-11 00:02:30  }
2025-08-11 00:02:30  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:02:30  {"ts":"2025-08-11T00:02:30.585Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870550585_hifr8f","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-11 00:02:30  🔍 用戶ID類型: string
2025-08-11 00:02:30  🔍 是否測試用戶: true
2025-08-11 00:02:30  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:02:30  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-11 00:02:30  ✅ 規則匹配成功: set_reminder
2025-08-11 00:02:30  {"ts":"2025-08-11T00:02:30.726Z","lvl":"info","stage":"nlp","traceId":"line_1754870550585_hifr8f","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:02:30  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:02:31  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:02:31  📊 規則提取置信度: 0.67
2025-08-11 00:02:31  🤖 啟用 AI 輔助提取...
2025-08-11 00:02:32  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:02:32  {"ts":"2025-08-11T00:02:32.070Z","lvl":"info","stage":"slots","traceId":"line_1754870550585_hifr8f","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:02:32  🎯 執行任務: set_reminder
2025-08-11 00:02:32  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:02:32  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-11 00:02:32  📊 任務執行結果: {
2025-08-11 00:02:32    success: false,
2025-08-11 00:02:32    code: 'NOT_FOUND',
2025-08-11 00:02:32  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:02:32  {"ts":"2025-08-11T00:02:32.070Z","lvl":"info","stage":"slots","traceId":"line_1754870550585_hifr8f","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:02:32  🎯 執行任務: set_reminder
2025-08-11 00:02:32  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:02:32  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-11 00:02:32  📊 任務執行結果: {
2025-08-11 00:02:32    success: false,
2025-08-11 00:02:32    code: 'NOT_FOUND',
2025-08-11 00:02:32    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-11 00:02:32  }
2025-08-11 00:02:32  {"ts":"2025-08-11T00:02:32.143Z","lvl":"info","stage":"task","traceId":"line_1754870550585_hifr8f","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":73}
2025-08-11 00:02:32  🔍 檢查 replyToken: test-reply-token-1754870550230
2025-08-11 00:02:32  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:02:32  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-11 00:02:32  {"ts":"2025-08-11T00:02:32.427Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870550585_hifr8f","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-11 00:02:45  📨 收到 1 個事件
2025-08-11 00:02:45  📋 事件類型: message
2025-08-11 00:02:45  🔍 完整事件 JSON: {
2025-08-11 00:02:45    "type": "message",
2025-08-11 00:02:45    "message": {
2025-08-11 00:02:45      "type": "text",
2025-08-11 00:02:45      "text": "小明的數學課改到下午4點"
2025-08-11 00:02:45    },
2025-08-11 00:02:45    "source": {
2025-08-11 00:02:45      "userId": "U_test_user_qa",
2025-08-11 00:02:45      "type": "user"
2025-08-11 00:02:45    },
2025-08-11 00:02:45    "replyToken": "test-reply-token-1754870564871",
2025-08-11 00:02:45    "timestamp": 1754870564871
2025-08-11 00:02:45  }
2025-08-11 00:02:45  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:02:45  {"ts":"2025-08-11T00:02:45.216Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870565216_faci2v","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-11 00:02:45  🔍 用戶ID類型: string
2025-08-11 00:02:45  🔍 是否測試用戶: true
2025-08-11 00:02:45  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:02:45  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-11 00:02:45  ✅ 規則匹配成功: modify_course
2025-08-11 00:02:45  {"ts":"2025-08-11T00:02:45.360Z","lvl":"info","stage":"nlp","traceId":"line_1754870565216_faci2v","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-11 00:02:45  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-11 00:02:45  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-11 00:02:45  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:02:45  📊 規則提取置信度: 0.00
2025-08-11 00:02:45  🔄 規則提取信心度低，AI 輔助增強...
2025-08-11 00:02:46  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-11 00:02:46  {"ts":"2025-08-11T00:02:46.977Z","lvl":"info","stage":"slots","traceId":"line_1754870565216_faci2v","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-11 00:02:46  🎯 執行任務: modify_course
2025-08-11 00:02:46  ✏️ 執行修改操作任務: {
2025-08-11 00:02:46    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-11 00:02:46    userId: 'U_test_user_qa'
2025-08-11 00:02:46  }
2025-08-11 00:02:47  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-11 00:02:47  {"ts":"2025-08-11T00:02:47.048Z","lvl":"info","stage":"task","traceId":"line_1754870565216_faci2v","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-11 00:02:47  🔍 檢查 replyToken: test-reply-token-1754870564871
2025-08-11 00:02:47  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:02:47  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-11 00:02:47  {"ts":"2025-08-11T00:02:47.332Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870565216_faci2v","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-11 00:02:59  📨 收到 1 個事件
2025-08-11 00:02:59  📋 事件類型: message
2025-08-11 00:02:59  🔍 完整事件 JSON: {
2025-08-11 00:02:59    "type": "message",
2025-08-11 00:02:59    "message": {
2025-08-11 00:02:59      "type": "text",
2025-08-11 00:02:59      "text": "小明每天的晨練課改到早上7點"
2025-08-11 00:02:59    },
2025-08-11 00:02:59    "source": {
2025-08-11 00:02:59      "userId": "U_test_user_qa",
2025-08-11 00:02:59      "type": "user"
2025-08-11 00:02:59    },
2025-08-11 00:02:59    "replyToken": "test-reply-token-1754870579639",
2025-08-11 00:02:59    "timestamp": 1754870579639
2025-08-11 00:02:59  }
2025-08-11 00:02:59  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:02:59  {"ts":"2025-08-11T00:02:59.893Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870579893_4jwvxf","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-11 00:02:59  🔍 用戶ID類型: string
2025-08-11 00:02:59  🔍 是否測試用戶: true
2025-08-11 00:02:59  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:02:59  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-11 00:03:00  ✅ 規則匹配成功: create_recurring_course
2025-08-11 00:03:00  {"ts":"2025-08-11T00:03:00.035Z","lvl":"info","stage":"nlp","traceId":"line_1754870579893_4jwvxf","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-11 00:03:00  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-11 00:03:00  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-11 00:03:00  ✅ 時間解析成功: {
2025-08-11 00:03:00    input: '小明每天的晨練課改到早上7點',
2025-08-11 00:03:00    output: '07:00',
2025-08-11 00:03:00    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-11 00:03:00  }
2025-08-11 00:03:00  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:03:00  📊 規則提取置信度: 0.67
2025-08-11 00:03:00  🤖 啟用 AI 輔助提取...
2025-08-11 00:03:01  ✅ 最終 slots: {
2025-08-11 00:03:01    studentName: '小明',
2025-08-11 00:03:01    courseName: '晨練課',
2025-08-11 00:03:01    scheduleTime: '07:00',
2025-08-11 00:03:01    recurring: false
2025-08-11 00:03:01  }
2025-08-11 00:03:01  {"ts":"2025-08-11T00:03:01.334Z","lvl":"info","stage":"slots","traceId":"line_1754870579893_4jwvxf","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:01  🎯 執行任務: create_recurring_course
2025-08-11 00:03:01  🎯 開始處理新增課程任務
2025-08-11 00:03:01  📋 接收參數: {
2025-08-11 00:03:01    studentName: '小明',
2025-08-11 00:03:01  ✅ 最終 slots: {
2025-08-11 00:03:01    studentName: '小明',
2025-08-11 00:03:01    courseName: '晨練課',
2025-08-11 00:03:01    scheduleTime: '07:00',
2025-08-11 00:03:01    recurring: false
2025-08-11 00:03:01  }
2025-08-11 00:03:01  {"ts":"2025-08-11T00:03:01.334Z","lvl":"info","stage":"slots","traceId":"line_1754870579893_4jwvxf","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:01  🎯 執行任務: create_recurring_course
2025-08-11 00:03:01  🎯 開始處理新增課程任務
2025-08-11 00:03:01  📋 接收參數: {
2025-08-11 00:03:01    studentName: '小明',
2025-08-11 00:03:01    courseName: '晨練課',
2025-08-11 00:03:01    scheduleTime: '07:00',
2025-08-11 00:03:01    recurring: false
2025-08-11 00:03:01  }
2025-08-11 00:03:01  📊 任務執行結果: {
2025-08-11 00:03:01    success: false,
2025-08-11 00:03:01    code: 'MISSING_FIELDS',
2025-08-11 00:03:01    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-11 00:03:01    expectingInput: true,
2025-08-11 00:03:01    missingFields: [ '課程日期' ]
2025-08-11 00:03:01  }
2025-08-11 00:03:01  {"ts":"2025-08-11T00:03:01.546Z","lvl":"info","stage":"task","traceId":"line_1754870579893_4jwvxf","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":212}
2025-08-11 00:03:01  🔍 檢查 replyToken: test-reply-token-1754870579639
2025-08-11 00:03:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:03:01  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-11 00:03:01  
2025-08-11 00:03:01  範例：「小明每週三下午3點數學課」
2025-08-11 00:03:01  {"ts":"2025-08-11T00:03:01.832Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754870579893_4jwvxf","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-11 00:03:14  📨 收到 1 個事件
2025-08-11 00:03:14  📋 事件類型: message
2025-08-11 00:03:14  🔍 完整事件 JSON: {
2025-08-11 00:03:14    "type": "message",
2025-08-11 00:03:14    "message": {
2025-08-11 00:03:14      "type": "text",
2025-08-11 00:03:14      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-11 00:03:14    },
2025-08-11 00:03:14    "source": {
2025-08-11 00:03:14      "userId": "U_test_user_qa",
2025-08-11 00:03:14      "type": "user"
2025-08-11 00:03:14    },
2025-08-11 00:03:14    "replyToken": "test-reply-token-1754870594689",
2025-08-11 00:03:14    "timestamp": 1754870594690
2025-08-11 00:03:14  }
2025-08-11 00:03:14  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:03:14  {"ts":"2025-08-11T00:03:14.936Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-11 00:03:14  🔍 用戶ID類型: string
2025-08-11 00:03:14  🔍 是否測試用戶: true
2025-08-11 00:03:14  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:03:14  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-11 00:03:15  ✅ 規則匹配成功: create_recurring_course
2025-08-11 00:03:15  {"ts":"2025-08-11T00:03:15.078Z","lvl":"info","stage":"nlp","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-11 00:03:15  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-11 00:03:15  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-11 00:03:15  ✅ 時間解析成功: {
2025-08-11 00:03:15    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-11 00:03:15    output: '15:00',
2025-08-11 00:03:15    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-11 00:03:15  }
2025-08-11 00:03:15  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:03:15  📊 規則提取置信度: 0.67
2025-08-11 00:03:15  🤖 啟用 AI 輔助提取...
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
2025-08-11 00:03:16  ✅ 最終 slots: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  {"ts":"2025-08-11T00:03:16.543Z","lvl":"info","stage":"slots","traceId":"line_1754870594936_515tes","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:03:16  🎯 執行任務: create_recurring_course
2025-08-11 00:03:16  🎯 開始處理新增課程任務
2025-08-11 00:03:16  📋 接收參數: {
2025-08-11 00:03:16    studentName: 'Lumi',
2025-08-11 00:03:16    courseName: '鋼琴課',
2025-08-11 00:03:16    scheduleTime: '15:00',
2025-08-11 00:03:16    recurring: true
2025-08-11 00:03:16  }
2025-08-11 00:03:16  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:03:16  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:03:16      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:03:16      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:03:16      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:03:16      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:03:16      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:03:16      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:03:16  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-12T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-12T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-11 00:03:16      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:03:16      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:03:16      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:03:16      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:03:16    config: {
2025-08-11 00:03:16      url: URL {
2025-08-11 00:03:16        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        origin: 'https://www.googleapis.com',
2025-08-11 00:03:16        protocol: 'https:',
2025-08-11 00:03:16        username: '',
2025-08-11 00:03:16        password: '',
2025-08-11 00:03:16        host: 'www.googleapis.com',
2025-08-11 00:03:16        hostname: 'www.googleapis.com',
2025-08-11 00:03:16        port: '',
2025-08-11 00:03:16        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:03:16        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:03:16        searchParams: URLSearchParams {
2025-08-11 00:03:16          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16          'singleEvents' => 'true',
2025-08-11 00:03:16          'orderBy' => 'startTime' },
2025-08-11 00:03:16        hash: ''
2025-08-11 00:03:16      },
2025-08-11 00:03:16      method: 'GET',
2025-08-11 00:03:16      apiVersion: '',
2025-08-11 00:03:16      userAgentDirectives: [ [Object] ],
2025-08-11 00:03:16      paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16      headers: Headers {
2025-08-11 00:03:16        'accept-encoding': 'gzip',
2025-08-11 00:03:16        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      params: {
2025-08-11 00:03:16        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:03:16        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:03:16        singleEvents: true,
2025-08-11 00:03:16        orderBy: 'startTime'
2025-08-11 00:03:16      },
2025-08-11 00:03:16      validateStatus: [Function (anonymous)],
2025-08-11 00:03:16      retry: true,
2025-08-11 00:03:16      responseType: 'unknown',
2025-08-11 00:03:16      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:03:16      retryConfig: {
2025-08-11 00:03:16        currentRetryAttempt: 0,
2025-08-11 00:03:16        retry: 3,
2025-08-11 00:03:16        httpMethodsToRetry: [Array],
2025-08-11 00:03:16        noResponseRetries: 2,
2025-08-11 00:03:16        retryDelayMultiplier: 2,
2025-08-11 00:03:16        timeOfFirstRequest: 1754870596961,
2025-08-11 00:03:16        totalTimeout: 9007199254740991,
2025-08-11 00:03:16        maxRetryDelay: 9007199254740991,
2025-08-11 00:03:16        statusCodesToRetry: [Array]
2025-08-11 00:03:16      }
2025-08-11 00:03:16    },
2025-08-11 00:03:16    response: Response {
2025-08-11 00:03:16      size: 0,
2025-08-11 00:03:16      data: { error: [Object] },
2025-08-11 00:03:16      config: {
2025-08-11 00:03:16        url: URL {},
2025-08-11 00:03:16        method: 'GET',
2025-08-11 00:03:16        apiVersion: '',
2025-08-11 00:03:16        userAgentDirectives: [Array],
2025-08-11 00:03:16        paramsSerializer: [Function (anonymous)],
2025-08-11 00:03:16        headers: Headers {
2025-08-11 00:03:16          'accept-encoding': 'gzip',
2025-08-11 00:03:16          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:03:16          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:03:16          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:03:16        },
2025-08-11 00:03:16        params: [Object],
2025-08-11 00:03:16        validateStatus: [Function (anonymous)],
2025-08-11 00:03:16        retry: true,
2025-08-11 00:03:16        responseType: 'unknown',
2025-08-11 00:03:16        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:03:16      },
