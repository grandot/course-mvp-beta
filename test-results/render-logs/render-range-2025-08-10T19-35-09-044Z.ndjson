2025-08-10 19:20:12  📨 收到 1 個事件
2025-08-10 19:20:12  📋 事件類型: message
2025-08-10 19:20:12  🔍 完整事件 JSON: {
2025-08-10 19:20:12    "type": "message",
2025-08-10 19:20:12    "message": {
2025-08-10 19:20:12      "type": "text",
2025-08-10 19:20:12      "text": "今天小明的數學課學了分數加減法"
2025-08-10 19:20:12    },
2025-08-10 19:20:12    "source": {
2025-08-10 19:20:12      "userId": "U_test_user_qa",
2025-08-10 19:20:12      "type": "user"
2025-08-10 19:20:12    },
2025-08-10 19:20:12    "replyToken": "test-reply-token-1754853612697",
2025-08-10 19:20:12    "timestamp": 1754853612697
2025-08-10 19:20:12  }
2025-08-10 19:20:12  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:20:12  {"ts":"2025-08-10T19:20:12.868Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853612868_8ksc16","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 19:20:12  🔍 用戶ID類型: string
2025-08-10 19:20:12  🔍 是否測試用戶: true
2025-08-10 19:20:12  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:20:12  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 19:20:13  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:20:13  {"ts":"2025-08-10T19:20:13.011Z","lvl":"info","stage":"nlp","traceId":"line_1754853612868_8ksc16","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:20:13  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:20:13  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:20:13  📊 規則提取置信度: 1.00
2025-08-10 19:20:13  🤖 啟用 AI 輔助提取...
2025-08-10 19:20:14  ✅ 最終 slots: {
2025-08-10 19:20:14    studentName: '小明',
2025-08-10 19:20:14    courseName: '數學課',
2025-08-10 19:20:14    timeReference: 'today',
2025-08-10 19:20:14    content: '分數加減法'
2025-08-10 19:20:14  }
2025-08-10 19:20:14  {"ts":"2025-08-10T19:20:14.329Z","lvl":"info","stage":"slots","traceId":"line_1754853612868_8ksc16","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:20:14  🎯 執行任務: record_content
2025-08-10 19:20:14  📝 開始處理記錄課程內容任務: {
2025-08-10 19:20:14    studentName: '小明',
2025-08-10 19:20:14    courseName: '數學課',
2025-08-10 19:20:14    timeReference: 'today',
2025-08-10 19:20:14    content: '分數加減法'
2025-08-10 19:20:14  }
2025-08-10 19:20:14  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 19:20:14  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 19:20:14  ✅ 文檔已添加到 course_contents: gRga69sisfxX7Bzwdu0y
2025-08-10 19:20:14  ✅ 課程內容記錄已儲存: gRga69sisfxX7Bzwdu0y
2025-08-10 19:20:14  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 19:20:14  📊 任務執行結果: {
2025-08-10 19:20:14    success: true,
2025-08-10 19:20:14    code: 'RECORD_CONTENT_OK',
2025-08-10 19:20:14    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 19:20:14    data: {
2025-08-10 19:20:14      recordId: 'gRga69sisfxX7Bzwdu0y',
2025-08-10 19:20:14      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 19:20:14      targetDate: '2025-08-10'
2025-08-10 19:20:14    }
2025-08-10 19:20:14  }
2025-08-10 19:20:14  {"ts":"2025-08-10T19:20:14.701Z","lvl":"info","stage":"task","traceId":"line_1754853612868_8ksc16","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":372}
2025-08-10 19:20:14  🔍 檢查 replyToken: test-reply-token-1754853612697
2025-08-10 19:20:14  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:20:14  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:20:14  📚 課程：小明 - 數學課
2025-08-10 19:20:14  📅 日期：2025-08-10
2025-08-10 19:20:14  💬 內容：分數加減法
2025-08-10 19:20:14  {"ts":"2025-08-10T19:20:14.988Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853612868_8ksc16","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 19:20:27  📨 收到 1 個事件
2025-08-10 19:20:27  📋 事件類型: message
2025-08-10 19:20:27  🔍 完整事件 JSON: {
2025-08-10 19:20:27    "type": "message",
2025-08-10 19:20:27    "message": {
2025-08-10 19:20:27      "type": "text",
2025-08-10 19:20:27      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 19:20:27    },
2025-08-10 19:20:27    "source": {
2025-08-10 19:20:27      "userId": "U_test_user_qa",
2025-08-10 19:20:27      "type": "user"
2025-08-10 19:20:27    },
2025-08-10 19:20:27    "replyToken": "test-reply-token-1754853627533",
2025-08-10 19:20:27    "timestamp": 1754853627533
2025-08-10 19:20:27  }
2025-08-10 19:20:27  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:20:27  {"ts":"2025-08-10T19:20:27.702Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853627702_vfa2fg","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 19:20:27  🔍 用戶ID類型: string
2025-08-10 19:20:27  🔍 是否測試用戶: true
2025-08-10 19:20:27  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:20:27  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 19:20:27  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:20:27  {"ts":"2025-08-10T19:20:27.844Z","lvl":"info","stage":"nlp","traceId":"line_1754853627702_vfa2fg","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:20:27  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:20:28  📊 規則提取置信度: 0.33
2025-08-10 19:20:28  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:20:29  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:20:29  {"ts":"2025-08-10T19:20:29.440Z","lvl":"info","stage":"slots","traceId":"line_1754853627702_vfa2fg","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 19:20:29  🎯 執行任務: record_content
2025-08-10 19:20:29  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:20:29  ✅ 文檔已添加到 course_contents: 1KE5xSOsZespNsETHKcH
2025-08-10 19:20:29  ✅ 課程內容記錄已儲存: 1KE5xSOsZespNsETHKcH
2025-08-10 19:20:29  📊 任務執行結果: {
2025-08-10 19:20:29    success: true,
2025-08-10 19:20:29    code: 'RECORD_CONTENT_OK',
2025-08-10 19:20:29    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 19:20:29  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:20:29  {"ts":"2025-08-10T19:20:29.440Z","lvl":"info","stage":"slots","traceId":"line_1754853627702_vfa2fg","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 19:20:29  🎯 執行任務: record_content
2025-08-10 19:20:29  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:20:29  ✅ 文檔已添加到 course_contents: 1KE5xSOsZespNsETHKcH
2025-08-10 19:20:29  ✅ 課程內容記錄已儲存: 1KE5xSOsZespNsETHKcH
2025-08-10 19:20:29  📊 任務執行結果: {
2025-08-10 19:20:29    success: true,
2025-08-10 19:20:29    code: 'RECORD_CONTENT_OK',
2025-08-10 19:20:29    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 19:20:29    data: {
2025-08-10 19:20:29      recordId: '1KE5xSOsZespNsETHKcH',
2025-08-10 19:20:29      courseId: null,
2025-08-10 19:20:29      targetDate: '2025-08-09'
2025-08-10 19:20:29    }
2025-08-10 19:20:29  }
2025-08-10 19:20:29  {"ts":"2025-08-10T19:20:29.522Z","lvl":"info","stage":"task","traceId":"line_1754853627702_vfa2fg","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":82}
2025-08-10 19:20:29  🔍 檢查 replyToken: test-reply-token-1754853627533
2025-08-10 19:20:29  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:20:29  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:20:29  📝 記錄為獨立內容
2025-08-10 19:20:29  📚 課程：鋼琴課
2025-08-10 19:20:29  📅 日期：2025-08-09
2025-08-10 19:20:29  💬 內容：練習了小星星
2025-08-10 19:20:29  {"ts":"2025-08-10T19:20:29.810Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853627702_vfa2fg","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 19:20:42  📨 收到 1 個事件
2025-08-10 19:20:42  📋 事件類型: message
2025-08-10 19:20:42  🔍 完整事件 JSON: {
2025-08-10 19:20:42    "type": "message",
2025-08-10 19:20:42    "message": {
2025-08-10 19:20:42      "type": "text",
2025-08-10 19:20:42      "text": "小明昨天數學課學了什麼？"
2025-08-10 19:20:42    },
2025-08-10 19:20:42    "source": {
2025-08-10 19:20:42      "userId": "U_test_user_qa",
2025-08-10 19:20:42      "type": "user"
2025-08-10 19:20:42    },
2025-08-10 19:20:42    "replyToken": "test-reply-token-1754853642460",
2025-08-10 19:20:42    "timestamp": 1754853642460
2025-08-10 19:20:42  }
2025-08-10 19:20:42  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:20:42  {"ts":"2025-08-10T19:20:42.647Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853642647_5hg9o8","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 19:20:42  🔍 用戶ID類型: string
2025-08-10 19:20:42  🔍 是否測試用戶: true
2025-08-10 19:20:42  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:20:42  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 19:20:42  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:20:42  {"ts":"2025-08-10T19:20:42.789Z","lvl":"info","stage":"nlp","traceId":"line_1754853642647_5hg9o8","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:20:42  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:20:43  📊 規則提取置信度: 0.67
2025-08-10 19:20:43  🤖 啟用 AI 輔助提取...
2025-08-10 19:20:44  ✅ 最終 slots: {
2025-08-10 19:20:44    studentName: '小明',
2025-08-10 19:20:44    courseName: '數學課',
2025-08-10 19:20:44    timeReference: 'yesterday',
2025-08-10 19:20:44    content: '什麼？'
2025-08-10 19:20:44  }
2025-08-10 19:20:44  {"ts":"2025-08-10T19:20:44.038Z","lvl":"info","stage":"slots","traceId":"line_1754853642647_5hg9o8","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:20:44  🎯 執行任務: record_content
2025-08-10 19:20:44  📝 開始處理記錄課程內容任務: {
2025-08-10 19:20:44    studentName: '小明',
2025-08-10 19:20:44    courseName: '數學課',
2025-08-10 19:20:44    timeReference: 'yesterday',
2025-08-10 19:20:44    content: '什麼？'
2025-08-10 19:20:44  }
2025-08-10 19:20:44  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 19:20:44  ❓ 未找到完全匹配的課程
2025-08-10 19:20:44  ✅ 文檔已添加到 course_contents: l16Rj2BL8AYTrN8N5NEE
2025-08-10 19:20:44  ✅ 課程內容記錄已儲存: l16Rj2BL8AYTrN8N5NEE
2025-08-10 19:20:44  📊 任務執行結果: {
2025-08-10 19:20:44    success: true,
2025-08-10 19:20:44    code: 'RECORD_CONTENT_OK',
2025-08-10 19:20:44    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 19:20:44    data: {
2025-08-10 19:20:44      recordId: 'l16Rj2BL8AYTrN8N5NEE',
2025-08-10 19:20:44      courseId: null,
2025-08-10 19:20:44      targetDate: '2025-08-09'
2025-08-10 19:20:44    }
2025-08-10 19:20:44  }
2025-08-10 19:20:44  {"ts":"2025-08-10T19:20:44.360Z","lvl":"info","stage":"task","traceId":"line_1754853642647_5hg9o8","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":322}
2025-08-10 19:20:44  🔍 檢查 replyToken: test-reply-token-1754853642460
2025-08-10 19:20:44  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:20:44  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:20:44  📝 記錄為獨立內容
2025-08-10 19:20:44  👨‍🎓 學生：小明
2025-08-10 19:20:44  📚 課程：數學課
2025-08-10 19:20:44  📅 日期：2025-08-09
2025-08-10 19:20:44  💬 內容：什麼？
2025-08-10 19:20:44  {"ts":"2025-08-10T19:20:44.646Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853642647_5hg9o8","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 19:20:51  📨 收到 1 個事件
2025-08-10 19:20:51  📋 事件類型: message
2025-08-10 19:20:51  🔍 完整事件 JSON: {
2025-08-10 19:20:51    "type": "message",
2025-08-10 19:20:51    "message": {
2025-08-10 19:20:51      "type": "text",
2025-08-10 19:20:51      "text": "記錄小明今天化學課的內容"
2025-08-10 19:20:51    },
2025-08-10 19:20:51    "source": {
2025-08-10 19:20:51      "userId": "U_test_user_qa",
2025-08-10 19:20:51      "type": "user"
2025-08-10 19:20:51  📨 收到 1 個事件
2025-08-10 19:20:51  📋 事件類型: message
2025-08-10 19:20:51  🔍 完整事件 JSON: {
2025-08-10 19:20:51    "type": "message",
2025-08-10 19:20:51    "message": {
2025-08-10 19:20:51      "type": "text",
2025-08-10 19:20:51      "text": "記錄小明今天化學課的內容"
2025-08-10 19:20:51    },
2025-08-10 19:20:51    "source": {
2025-08-10 19:20:51      "userId": "U_test_user_qa",
2025-08-10 19:20:51      "type": "user"
2025-08-10 19:20:51    },
2025-08-10 19:20:51    "replyToken": "test-reply-token-1754853651654",
2025-08-10 19:20:51    "timestamp": 1754853651654
2025-08-10 19:20:51  }
2025-08-10 19:20:51  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:20:51  {"ts":"2025-08-10T19:20:51.931Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853651931_5wb8mq","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 19:20:51  🔍 用戶ID類型: string
2025-08-10 19:20:51  🔍 是否測試用戶: true
2025-08-10 19:20:51  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:20:51  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 19:20:52  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:20:52  {"ts":"2025-08-10T19:20:52.074Z","lvl":"info","stage":"nlp","traceId":"line_1754853651931_5wb8mq","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:20:52  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:20:52  📊 規則提取置信度: 0.67
2025-08-10 19:20:52  🤖 啟用 AI 輔助提取...
2025-08-10 19:20:53  ✅ 最終 slots: {
2025-08-10 19:20:53    studentName: '小明',
2025-08-10 19:20:53    courseName: '化學課',
2025-08-10 19:20:53    timeReference: 'today',
2025-08-10 19:20:53    content: '小明今天化學課的內容'
2025-08-10 19:20:53  }
2025-08-10 19:20:53  {"ts":"2025-08-10T19:20:53.300Z","lvl":"info","stage":"slots","traceId":"line_1754853651931_5wb8mq","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:20:53  🎯 執行任務: record_content
2025-08-10 19:20:53  📝 開始處理記錄課程內容任務: {
2025-08-10 19:20:53    studentName: '小明',
2025-08-10 19:20:53    courseName: '化學課',
2025-08-10 19:20:53    timeReference: 'today',
2025-08-10 19:20:53    content: '小明今天化學課的內容'
2025-08-10 19:20:53  }
2025-08-10 19:20:53  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 19:20:53  ❓ 未找到完全匹配的課程
2025-08-10 19:20:53  ✅ 文檔已添加到 course_contents: 0AZ1yIF198LIRCoDf2W0
2025-08-10 19:20:53  ✅ 課程內容記錄已儲存: 0AZ1yIF198LIRCoDf2W0
2025-08-10 19:20:53  📊 任務執行結果: {
2025-08-10 19:20:53    success: true,
2025-08-10 19:20:53    code: 'RECORD_CONTENT_OK',
2025-08-10 19:20:53    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 19:20:53      '📝 記錄為獨立內容\n' +
2025-08-10 19:20:53      '👨‍🎓 學生：小明\n' +
2025-08-10 19:20:53      '📚 課程：化學課\n' +
2025-08-10 19:20:53      '📅 日期：2025-08-10\n' +
2025-08-10 19:20:53      '💬 內容：小明今天化學課的內容',
2025-08-10 19:20:53    data: {
2025-08-10 19:20:53      recordId: '0AZ1yIF198LIRCoDf2W0',
2025-08-10 19:20:53      courseId: null,
2025-08-10 19:20:53      targetDate: '2025-08-10'
2025-08-10 19:20:53    }
2025-08-10 19:20:53  }
2025-08-10 19:20:53  {"ts":"2025-08-10T19:20:53.530Z","lvl":"info","stage":"task","traceId":"line_1754853651931_5wb8mq","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":230}
2025-08-10 19:20:53  🔍 檢查 replyToken: test-reply-token-1754853651654
2025-08-10 19:20:53  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:20:53  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:20:53  📝 記錄為獨立內容
2025-08-10 19:20:53  👨‍🎓 學生：小明
2025-08-10 19:20:53  📚 課程：化學課
2025-08-10 19:20:53  📅 日期：2025-08-10
2025-08-10 19:20:53  💬 內容：小明今天化學課的內容
2025-08-10 19:20:53  {"ts":"2025-08-10T19:20:53.815Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853651931_5wb8mq","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 19:21:06  📨 收到 1 個事件
2025-08-10 19:21:06  📋 事件類型: message
2025-08-10 19:21:06  🔍 完整事件 JSON: {
2025-08-10 19:21:06    "type": "message",
2025-08-10 19:21:06    "message": {
2025-08-10 19:21:06      "type": "text",
2025-08-10 19:21:06      "text": "提醒我小明的數學課"
2025-08-10 19:21:06    },
2025-08-10 19:21:06    "source": {
2025-08-10 19:21:06      "userId": "U_test_user_qa",
2025-08-10 19:21:06      "type": "user"
2025-08-10 19:21:06    },
2025-08-10 19:21:06    "replyToken": "test-reply-token-1754853666290",
2025-08-10 19:21:06    "timestamp": 1754853666290
2025-08-10 19:21:06  }
2025-08-10 19:21:06  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:21:06  {"ts":"2025-08-10T19:21:06.462Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853666462_jm2mvp","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 19:21:06  🔍 用戶ID類型: string
2025-08-10 19:21:06  🔍 是否測試用戶: true
2025-08-10 19:21:06  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:21:06  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 19:21:06  ✅ 規則匹配成功: set_reminder
2025-08-10 19:21:06  {"ts":"2025-08-10T19:21:06.607Z","lvl":"info","stage":"nlp","traceId":"line_1754853666462_jm2mvp","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:21:06  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:21:06  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:21:06  📊 規則提取置信度: 0.67
2025-08-10 19:21:06  🤖 啟用 AI 輔助提取...
2025-08-10 19:21:08  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:21:08  {"ts":"2025-08-10T19:21:08.303Z","lvl":"info","stage":"slots","traceId":"line_1754853666462_jm2mvp","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:21:08  🎯 執行任務: set_reminder
2025-08-10 19:21:08  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:21:08  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:21:08  {"ts":"2025-08-10T19:21:08.303Z","lvl":"info","stage":"slots","traceId":"line_1754853666462_jm2mvp","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:21:08  🎯 執行任務: set_reminder
2025-08-10 19:21:08  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:21:08  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 19:21:08  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 19:21:08  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 19:21:08  ✅ 提醒記錄已創建: 1xE5oJJkuPACLVpLy1ZE
2025-08-10 19:21:08  ✅ 提醒設定成功: 1xE5oJJkuPACLVpLy1ZE
2025-08-10 19:21:08  📊 任務執行結果: {
2025-08-10 19:21:08    success: true,
2025-08-10 19:21:08    code: 'REMINDER_SET_OK',
2025-08-10 19:21:08    message: '✅ 提醒設定完成！\n' +
2025-08-10 19:21:08      '📚 課程：小明 的 數學課\n' +
2025-08-10 19:21:08      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 19:21:08      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 19:21:08  }
2025-08-10 19:21:08  {"ts":"2025-08-10T19:21:08.636Z","lvl":"info","stage":"task","traceId":"line_1754853666462_jm2mvp","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":333}
2025-08-10 19:21:08  🔍 檢查 replyToken: test-reply-token-1754853666290
2025-08-10 19:21:08  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:21:08  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 19:21:08  📚 課程：小明 的 數學課
2025-08-10 19:21:08  📅 上課時間：8/11 下午02:00
2025-08-10 19:21:08  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 19:21:08  {"ts":"2025-08-10T19:21:08.922Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853666462_jm2mvp","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 19:21:21  📨 收到 1 個事件
2025-08-10 19:21:21  📋 事件類型: message
2025-08-10 19:21:21  🔍 完整事件 JSON: {
2025-08-10 19:21:21    "type": "message",
2025-08-10 19:21:21    "message": {
2025-08-10 19:21:21      "type": "text",
2025-08-10 19:21:21      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 19:21:21    },
2025-08-10 19:21:21    "source": {
2025-08-10 19:21:21      "userId": "U_test_user_qa",
2025-08-10 19:21:21      "type": "user"
2025-08-10 19:21:21    },
2025-08-10 19:21:21    "replyToken": "test-reply-token-1754853681424",
2025-08-10 19:21:21    "timestamp": 1754853681424
2025-08-10 19:21:21  }
2025-08-10 19:21:21  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:21:21  {"ts":"2025-08-10T19:21:21.596Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853681596_fweuug","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 19:21:21  🔍 用戶ID類型: string
2025-08-10 19:21:21  🔍 是否測試用戶: true
2025-08-10 19:21:21  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:21:21  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 19:21:21  ✅ 規則匹配成功: set_reminder
2025-08-10 19:21:21  {"ts":"2025-08-10T19:21:21.738Z","lvl":"info","stage":"nlp","traceId":"line_1754853681596_fweuug","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:21:21  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:21:22  📊 規則提取置信度: 0.67
2025-08-10 19:21:22  🤖 啟用 AI 輔助提取...
2025-08-10 19:21:23  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:21:23  {"ts":"2025-08-10T19:21:23.000Z","lvl":"info","stage":"slots","traceId":"line_1754853681596_fweuug","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 19:21:23  🎯 執行任務: set_reminder
2025-08-10 19:21:23  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:21:23  📊 任務執行結果: {
2025-08-10 19:21:23    success: false,
2025-08-10 19:21:23    code: 'MISSING_STUDENT',
2025-08-10 19:21:23    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 19:21:23  }
2025-08-10 19:21:23  {"ts":"2025-08-10T19:21:23.000Z","lvl":"info","stage":"task","traceId":"line_1754853681596_fweuug","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 19:21:23  🔍 檢查 replyToken: test-reply-token-1754853681424
2025-08-10 19:21:23  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:21:23  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 19:21:23  {"ts":"2025-08-10T19:21:23.286Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853681596_fweuug","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 19:21:36  📨 收到 1 個事件
2025-08-10 19:21:36  📋 事件類型: message
2025-08-10 19:21:36  🔍 完整事件 JSON: {
2025-08-10 19:21:36    "type": "message",
2025-08-10 19:21:36    "message": {
2025-08-10 19:21:36      "type": "text",
2025-08-10 19:21:36      "text": "提醒我小明的物理課"
2025-08-10 19:21:36    },
2025-08-10 19:21:36    "source": {
2025-08-10 19:21:36      "userId": "U_test_user_qa",
2025-08-10 19:21:36      "type": "user"
2025-08-10 19:21:36    },
2025-08-10 19:21:36    "replyToken": "test-reply-token-1754853696035",
2025-08-10 19:21:36    "timestamp": 1754853696035
2025-08-10 19:21:36  }
2025-08-10 19:21:36  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:21:36  {"ts":"2025-08-10T19:21:36.312Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853696312_3pjk6w","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 19:21:36  🔍 用戶ID類型: string
2025-08-10 19:21:36  🔍 是否測試用戶: true
2025-08-10 19:21:36  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:21:36  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 19:21:36  ✅ 規則匹配成功: set_reminder
2025-08-10 19:21:36  {"ts":"2025-08-10T19:21:36.455Z","lvl":"info","stage":"nlp","traceId":"line_1754853696312_3pjk6w","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:21:36  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:21:36  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:21:36  📊 規則提取置信度: 0.67
2025-08-10 19:21:36  🤖 啟用 AI 輔助提取...
2025-08-10 19:21:37  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:21:37  {"ts":"2025-08-10T19:21:37.855Z","lvl":"info","stage":"slots","traceId":"line_1754853696312_3pjk6w","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:21:37  🎯 執行任務: set_reminder
2025-08-10 19:21:37  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:21:37  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 19:21:37  📊 任務執行結果: {
2025-08-10 19:21:37    success: false,
2025-08-10 19:21:37    code: 'NOT_FOUND',
2025-08-10 19:21:37  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:21:37  {"ts":"2025-08-10T19:21:37.855Z","lvl":"info","stage":"slots","traceId":"line_1754853696312_3pjk6w","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:21:37  🎯 執行任務: set_reminder
2025-08-10 19:21:37  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:21:37  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 19:21:37  📊 任務執行結果: {
2025-08-10 19:21:37    success: false,
2025-08-10 19:21:37    code: 'NOT_FOUND',
2025-08-10 19:21:37    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 19:21:37  }
2025-08-10 19:21:37  {"ts":"2025-08-10T19:21:37.925Z","lvl":"info","stage":"task","traceId":"line_1754853696312_3pjk6w","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":70}
2025-08-10 19:21:38  🔍 檢查 replyToken: test-reply-token-1754853696035
2025-08-10 19:21:38  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:21:38  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 19:21:38  {"ts":"2025-08-10T19:21:38.211Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853696312_3pjk6w","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 19:21:50  📨 收到 1 個事件
2025-08-10 19:21:50  📋 事件類型: message
2025-08-10 19:21:50  🔍 完整事件 JSON: {
2025-08-10 19:21:50    "type": "message",
2025-08-10 19:21:50    "message": {
2025-08-10 19:21:50      "type": "text",
2025-08-10 19:21:50      "text": "小明的數學課改到下午4點"
2025-08-10 19:21:50    },
2025-08-10 19:21:50    "source": {
2025-08-10 19:21:50      "userId": "U_test_user_qa",
2025-08-10 19:21:50      "type": "user"
2025-08-10 19:21:50    },
2025-08-10 19:21:50    "replyToken": "test-reply-token-1754853710671",
2025-08-10 19:21:50    "timestamp": 1754853710671
2025-08-10 19:21:50  }
2025-08-10 19:21:50  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:21:50  {"ts":"2025-08-10T19:21:50.953Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853710953_7wu6w4","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 19:21:50  🔍 用戶ID類型: string
2025-08-10 19:21:50  🔍 是否測試用戶: true
2025-08-10 19:21:50  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:21:50  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 19:21:51  ✅ 規則匹配成功: modify_course
2025-08-10 19:21:51  {"ts":"2025-08-10T19:21:51.096Z","lvl":"info","stage":"nlp","traceId":"line_1754853710953_7wu6w4","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 19:21:51  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 19:21:51  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 19:21:51  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:21:51  📊 規則提取置信度: 0.00
2025-08-10 19:21:51  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:21:52  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 19:21:52  {"ts":"2025-08-10T19:21:52.521Z","lvl":"info","stage":"slots","traceId":"line_1754853710953_7wu6w4","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 19:21:52  🎯 執行任務: modify_course
2025-08-10 19:21:52  ✏️ 執行修改操作任務: {
2025-08-10 19:21:52    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 19:21:52    userId: 'U_test_user_qa'
2025-08-10 19:21:52  }
2025-08-10 19:21:52  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 19:21:52  {"ts":"2025-08-10T19:21:52.592Z","lvl":"info","stage":"task","traceId":"line_1754853710953_7wu6w4","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 19:21:52  🔍 檢查 replyToken: test-reply-token-1754853710671
2025-08-10 19:21:52  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:21:52  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 19:21:52  {"ts":"2025-08-10T19:21:52.881Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853710953_7wu6w4","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 19:22:05  📨 收到 1 個事件
2025-08-10 19:22:05  📋 事件類型: message
2025-08-10 19:22:05  🔍 完整事件 JSON: {
2025-08-10 19:22:05    "type": "message",
2025-08-10 19:22:05    "message": {
2025-08-10 19:22:05      "type": "text",
2025-08-10 19:22:05      "text": "小明每天的晨練課改到早上7點"
2025-08-10 19:22:05    },
2025-08-10 19:22:05    "source": {
2025-08-10 19:22:05      "userId": "U_test_user_qa",
2025-08-10 19:22:05      "type": "user"
2025-08-10 19:22:05    },
2025-08-10 19:22:05    "replyToken": "test-reply-token-1754853725568",
2025-08-10 19:22:05    "timestamp": 1754853725568
2025-08-10 19:22:05  }
2025-08-10 19:22:05  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:22:05  {"ts":"2025-08-10T19:22:05.865Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853725865_ojywft","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 19:22:05  🔍 用戶ID類型: string
2025-08-10 19:22:05  🔍 是否測試用戶: true
2025-08-10 19:22:05  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:22:05  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 19:22:06  ✅ 規則匹配成功: create_recurring_course
2025-08-10 19:22:06  {"ts":"2025-08-10T19:22:06.008Z","lvl":"info","stage":"nlp","traceId":"line_1754853725865_ojywft","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 19:22:06  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 19:22:06  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 19:22:06  ✅ 時間解析成功: {
2025-08-10 19:22:06    input: '小明每天的晨練課改到早上7點',
2025-08-10 19:22:06    output: '07:00',
2025-08-10 19:22:06    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 19:22:06  }
2025-08-10 19:22:06  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:22:06  📊 規則提取置信度: 0.67
2025-08-10 19:22:06  🤖 啟用 AI 輔助提取...
2025-08-10 19:22:07  ✅ 最終 slots: {
2025-08-10 19:22:07    studentName: '小明',
2025-08-10 19:22:07    courseName: '晨練課',
2025-08-10 19:22:07    scheduleTime: '07:00',
2025-08-10 19:22:07    recurring: false
2025-08-10 19:22:07  }
2025-08-10 19:22:07  {"ts":"2025-08-10T19:22:07.626Z","lvl":"info","stage":"slots","traceId":"line_1754853725865_ojywft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:07  🎯 執行任務: create_recurring_course
2025-08-10 19:22:07  🎯 開始處理新增課程任務
2025-08-10 19:22:07  📋 接收參數: {
2025-08-10 19:22:07    studentName: '小明',
2025-08-10 19:22:07  ✅ 最終 slots: {
2025-08-10 19:22:07    studentName: '小明',
2025-08-10 19:22:07    courseName: '晨練課',
2025-08-10 19:22:07    scheduleTime: '07:00',
2025-08-10 19:22:07    recurring: false
2025-08-10 19:22:07  }
2025-08-10 19:22:07  {"ts":"2025-08-10T19:22:07.626Z","lvl":"info","stage":"slots","traceId":"line_1754853725865_ojywft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:07  🎯 執行任務: create_recurring_course
2025-08-10 19:22:07  🎯 開始處理新增課程任務
2025-08-10 19:22:07  📋 接收參數: {
2025-08-10 19:22:07    studentName: '小明',
2025-08-10 19:22:07    courseName: '晨練課',
2025-08-10 19:22:07    scheduleTime: '07:00',
2025-08-10 19:22:07    recurring: false
2025-08-10 19:22:07  }
2025-08-10 19:22:07  📊 任務執行結果: {
2025-08-10 19:22:07    success: false,
2025-08-10 19:22:07    code: 'MISSING_FIELDS',
2025-08-10 19:22:07    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 19:22:07    expectingInput: true,
2025-08-10 19:22:07    missingFields: [ '課程日期' ]
2025-08-10 19:22:07  }
2025-08-10 19:22:07  {"ts":"2025-08-10T19:22:07.772Z","lvl":"info","stage":"task","traceId":"line_1754853725865_ojywft","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":145}
2025-08-10 19:22:08  🔍 檢查 replyToken: test-reply-token-1754853725568
2025-08-10 19:22:08  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:22:08  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 19:22:08  
2025-08-10 19:22:08  範例：「小明每週三下午3點數學課」
2025-08-10 19:22:08  {"ts":"2025-08-10T19:22:08.060Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853725865_ojywft","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 19:22:20  📨 收到 1 個事件
2025-08-10 19:22:20  📋 事件類型: message
2025-08-10 19:22:20  🔍 完整事件 JSON: {
2025-08-10 19:22:20    "type": "message",
2025-08-10 19:22:20    "message": {
2025-08-10 19:22:20      "type": "text",
2025-08-10 19:22:20      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 19:22:20    },
2025-08-10 19:22:20    "source": {
2025-08-10 19:22:20      "userId": "U_test_user_qa",
2025-08-10 19:22:20      "type": "user"
2025-08-10 19:22:20    },
2025-08-10 19:22:20    "replyToken": "test-reply-token-1754853740421",
2025-08-10 19:22:20    "timestamp": 1754853740421
2025-08-10 19:22:20  }
2025-08-10 19:22:20  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:22:20  {"ts":"2025-08-10T19:22:20.590Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 19:22:20  🔍 用戶ID類型: string
2025-08-10 19:22:20  🔍 是否測試用戶: true
2025-08-10 19:22:20  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:22:20  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 19:22:20  ✅ 規則匹配成功: create_recurring_course
2025-08-10 19:22:20  {"ts":"2025-08-10T19:22:20.733Z","lvl":"info","stage":"nlp","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 19:22:20  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 19:22:20  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 19:22:20  ✅ 時間解析成功: {
2025-08-10 19:22:20    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 19:22:20    output: '15:00',
2025-08-10 19:22:20    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 19:22:20  }
2025-08-10 19:22:21  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:22:21  📊 規則提取置信度: 0.67
2025-08-10 19:22:21  🤖 啟用 AI 輔助提取...
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
2025-08-10 19:22:22  ✅ 最終 slots: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  {"ts":"2025-08-10T19:22:22.156Z","lvl":"info","stage":"slots","traceId":"line_1754853740589_nr3dmh","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:22:22  🎯 執行任務: create_recurring_course
2025-08-10 19:22:22  🎯 開始處理新增課程任務
2025-08-10 19:22:22  📋 接收參數: {
2025-08-10 19:22:22    studentName: 'Lumi',
2025-08-10 19:22:22    courseName: '鋼琴課',
2025-08-10 19:22:22    scheduleTime: '15:00',
2025-08-10 19:22:22    recurring: true
2025-08-10 19:22:22  }
2025-08-10 19:22:22  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:22:22  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:22:22      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:22:22      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:22:22      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:22:22      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:22:22      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:22:22      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:22:22      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:22:22      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:22:22      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:22:22      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:22:22    config: {
2025-08-10 19:22:22      url: URL {
2025-08-10 19:22:22        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        origin: 'https://www.googleapis.com',
2025-08-10 19:22:22        protocol: 'https:',
2025-08-10 19:22:22        username: '',
2025-08-10 19:22:22        password: '',
2025-08-10 19:22:22        host: 'www.googleapis.com',
2025-08-10 19:22:22        hostname: 'www.googleapis.com',
2025-08-10 19:22:22        port: '',
2025-08-10 19:22:22        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:22:22        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:22:22        searchParams: URLSearchParams {
2025-08-10 19:22:22          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22          'singleEvents' => 'true',
2025-08-10 19:22:22          'orderBy' => 'startTime' },
2025-08-10 19:22:22        hash: ''
2025-08-10 19:22:22      },
2025-08-10 19:22:22      method: 'GET',
2025-08-10 19:22:22      apiVersion: '',
2025-08-10 19:22:22      userAgentDirectives: [ [Object] ],
2025-08-10 19:22:22      paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22      headers: Headers {
2025-08-10 19:22:22        'accept-encoding': 'gzip',
2025-08-10 19:22:22        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      params: {
2025-08-10 19:22:22        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:22:22        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:22:22        singleEvents: true,
2025-08-10 19:22:22        orderBy: 'startTime'
2025-08-10 19:22:22      },
2025-08-10 19:22:22      validateStatus: [Function (anonymous)],
2025-08-10 19:22:22      retry: true,
2025-08-10 19:22:22      responseType: 'unknown',
2025-08-10 19:22:22      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:22:22      retryConfig: {
2025-08-10 19:22:22        currentRetryAttempt: 0,
2025-08-10 19:22:22        retry: 3,
2025-08-10 19:22:22        httpMethodsToRetry: [Array],
2025-08-10 19:22:22        noResponseRetries: 2,
2025-08-10 19:22:22        retryDelayMultiplier: 2,
2025-08-10 19:22:22        timeOfFirstRequest: 1754853742552,
2025-08-10 19:22:22        totalTimeout: 9007199254740991,
2025-08-10 19:22:22        maxRetryDelay: 9007199254740991,
2025-08-10 19:22:22        statusCodesToRetry: [Array]
2025-08-10 19:22:22      }
2025-08-10 19:22:22    },
2025-08-10 19:22:22    response: Response {
2025-08-10 19:22:22      size: 0,
2025-08-10 19:22:22      data: { error: [Object] },
2025-08-10 19:22:22      config: {
2025-08-10 19:22:22        url: URL {},
2025-08-10 19:22:22        method: 'GET',
2025-08-10 19:22:22        apiVersion: '',
2025-08-10 19:22:22        userAgentDirectives: [Array],
2025-08-10 19:22:22        paramsSerializer: [Function (anonymous)],
2025-08-10 19:22:22        headers: Headers {
2025-08-10 19:22:22          'accept-encoding': 'gzip',
2025-08-10 19:22:22          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:22:22          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:22:22          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:22:22        },
2025-08-10 19:22:22        params: [Object],
2025-08-10 19:22:22        validateStatus: [Function (anonymous)],
2025-08-10 19:22:22        retry: true,
2025-08-10 19:22:22        responseType: 'unknown',
2025-08-10 19:22:22        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:22:22      },
2025-08-10 19:22:22      Symbol(Body internals): {
