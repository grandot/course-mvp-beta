2025-08-10 23:38:09  📚 查詢到 14 筆課程
2025-08-10 23:38:09  📊 任務執行結果: {
2025-08-10 23:38:09    success: true,
2025-08-10 23:38:09    code: 'QUERY_OK',
2025-08-10 23:38:09    message: '📅 小明本週的課程安排\n' +
2025-08-10 23:38:09      '\n' +
2025-08-10 23:38:09      '📆 8/9 (週六)\n' +
2025-08-10 23:38:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '\n' +
2025-08-10 23:38:09      '📆 8/10 (週日)\n' +
2025-08-10 23:38:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '\n' +
2025-08-10 23:38:09      '📆 8/11 (週一)\n' +
2025-08-10 23:38:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '\n' +
2025-08-10 23:38:09      '📆 8/12 (週二)\n' +
2025-08-10 23:38:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '\n' +
2025-08-10 23:38:09      '📆 8/13 (週三)\n' +
2025-08-10 23:38:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '\n' +
2025-08-10 23:38:09      '📆 8/14 (週四)\n' +
2025-08-10 23:38:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '\n' +
2025-08-10 23:38:09      '📆 8/15 (週五)\n' +
2025-08-10 23:38:09      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 23:38:09      '  上午8:00 - 晨練課 🔄',
2025-08-10 23:38:09    data: {
2025-08-10 23:38:09      courses: [
2025-08-10 23:38:09        [Object], [Object],
2025-08-10 23:38:09        [Object], [Object],
2025-08-10 23:38:09        [Object], [Object],
2025-08-10 23:38:09        [Object], [Object],
2025-08-10 23:38:09        [Object], [Object],
2025-08-10 23:38:09        [Object], [Object],
2025-08-10 23:38:09        [Object], [Object]
2025-08-10 23:38:09      ],
2025-08-10 23:38:09      courseCount: 14,
2025-08-10 23:38:09      dateRange: {
2025-08-10 23:38:09        startDate: '2025-08-10',
2025-08-10 23:38:09        endDate: '2025-08-16',
2025-08-10 23:38:09        description: '本週'
2025-08-10 23:38:09      }
2025-08-10 23:38:09    }
2025-08-10 23:38:09  }
2025-08-10 23:38:09  {"ts":"2025-08-10T23:38:09.028Z","lvl":"info","stage":"task","traceId":"line_1754869086333_35itex","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":365}
2025-08-10 23:38:09  🔍 檢查 replyToken: test-reply-token-1754869086112
2025-08-10 23:38:09  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:38:09  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 23:38:09  
2025-08-10 23:38:09  📆 8/9 (週六)
2025-08-10 23:38:09    上午7:00 - 晨練課 🔄
2025-08-10 23:38:09    上午8:00 - 晨練課 🔄
2025-08-10 23:38:09  
2025-08-10 23:38:09  📆 8/10 (週日)
2025-08-10 23:38:09    上午7:00 - 晨練課 🔄
2025-08-10 23:38:09    上午8:00 - 晨練課 🔄
2025-08-10 23:38:09  
2025-08-10 23:38:09  📆 8/11 (週一)
2025-08-10 23:38:09    上午7:00 - 晨練課 🔄
2025-08-10 23:38:09    上午8:00 - 晨練課 🔄
2025-08-10 23:38:09  
2025-08-10 23:38:09  📆 8/12 (週二)
2025-08-10 23:38:09    上午7:00 - 晨練課 🔄
2025-08-10 23:38:09    上午8:00 - 晨練課 🔄
2025-08-10 23:38:09  
2025-08-10 23:38:09  📆 8/13 (週三)
2025-08-10 23:38:09    上午7:00 - 晨練課 🔄
2025-08-10 23:38:09    上午8:00 - 晨練課 🔄
2025-08-10 23:38:09  
2025-08-10 23:38:09  📆 8/14 (週四)
2025-08-10 23:38:09    上午7:00 - 晨練課 🔄
2025-08-10 23:38:09    上午8:00 - 晨練課 🔄
2025-08-10 23:38:09  
2025-08-10 23:38:09  📆 8/15 (週五)
2025-08-10 23:38:09    上午7:00 - 晨練課 🔄
2025-08-10 23:38:09    上午8:00 - 晨練課 🔄
2025-08-10 23:38:09  {"ts":"2025-08-10T23:38:09.311Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869086333_35itex","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 23:38:22  📨 收到 1 個事件
2025-08-10 23:38:22  📋 事件類型: message
2025-08-10 23:38:22  🔍 完整事件 JSON: {
2025-08-10 23:38:22    "type": "message",
2025-08-10 23:38:22    "message": {
2025-08-10 23:38:22      "type": "text",
2025-08-10 23:38:22      "text": "查詢Lumi的重複課程"
2025-08-10 23:38:22    },
2025-08-10 23:38:22    "source": {
2025-08-10 23:38:22      "userId": "U_test_user_qa",
2025-08-10 23:38:22      "type": "user"
2025-08-10 23:38:22    },
2025-08-10 23:38:22    "replyToken": "test-reply-token-1754869102288",
2025-08-10 23:38:22    "timestamp": 1754869102288
2025-08-10 23:38:22  }
2025-08-10 23:38:22  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:38:22  📨 收到 1 個事件
2025-08-10 23:38:22  📋 事件類型: message
2025-08-10 23:38:22  🔍 完整事件 JSON: {
2025-08-10 23:38:22    "type": "message",
2025-08-10 23:38:22    "message": {
2025-08-10 23:38:22      "type": "text",
2025-08-10 23:38:22      "text": "查詢Lumi的重複課程"
2025-08-10 23:38:22    },
2025-08-10 23:38:22    "source": {
2025-08-10 23:38:22      "userId": "U_test_user_qa",
2025-08-10 23:38:22      "type": "user"
2025-08-10 23:38:22    },
2025-08-10 23:38:22    "replyToken": "test-reply-token-1754869102288",
2025-08-10 23:38:22    "timestamp": 1754869102288
2025-08-10 23:38:22  }
2025-08-10 23:38:22  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:38:22  {"ts":"2025-08-10T23:38:22.530Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869102530_hv17x9","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 23:38:22  🔍 用戶ID類型: string
2025-08-10 23:38:22  🔍 是否測試用戶: true
2025-08-10 23:38:22  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:38:22  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 23:38:22  ✅ 規則匹配成功: query_schedule
2025-08-10 23:38:22  {"ts":"2025-08-10T23:38:22.671Z","lvl":"info","stage":"nlp","traceId":"line_1754869102530_hv17x9","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 23:38:22  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 23:38:22  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:38:22  📊 規則提取置信度: 0.50
2025-08-10 23:38:22  🤖 啟用 AI 輔助提取...
2025-08-10 23:38:24  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 23:38:24  {"ts":"2025-08-10T23:38:24.085Z","lvl":"info","stage":"slots","traceId":"line_1754869102530_hv17x9","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 23:38:24  🎯 執行任務: query_schedule
2025-08-10 23:38:24  🎯 開始處理查詢課表任務
2025-08-10 23:38:24  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 23:38:24  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 23:38:24  📚 查詢到 349 筆課程資料
2025-08-10 23:38:24  📚 查詢到 0 筆課程
2025-08-10 23:38:24  📊 任務執行結果: {
2025-08-10 23:38:24    success: true,
2025-08-10 23:38:24    code: 'QUERY_OK_EMPTY',
2025-08-10 23:38:24    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 23:38:24      '\n' +
2025-08-10 23:38:24      '💡 您可以：\n' +
2025-08-10 23:38:24      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 23:38:24      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 23:38:24      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 23:38:24    data: {
2025-08-10 23:38:24      courseCount: 0,
2025-08-10 23:38:24      dateRange: {
2025-08-10 23:38:24        startDate: '2025-08-10',
2025-08-10 23:38:24        endDate: '2025-08-16',
2025-08-10 23:38:24        description: '本週'
2025-08-10 23:38:24      }
2025-08-10 23:38:24    }
2025-08-10 23:38:24  }
2025-08-10 23:38:24  {"ts":"2025-08-10T23:38:24.508Z","lvl":"info","stage":"task","traceId":"line_1754869102530_hv17x9","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":423}
2025-08-10 23:38:24  🔍 檢查 replyToken: test-reply-token-1754869102288
2025-08-10 23:38:24  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:38:24  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 23:38:24  
2025-08-10 23:38:24  💡 您可以：
2025-08-10 23:38:24  • 新增課程：「小明明天上午10點英文課」
2025-08-10 23:38:24  • 查詢其他時間：「小明下週的課表」
2025-08-10 23:38:24  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 23:38:24  {"ts":"2025-08-10T23:38:24.790Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869102530_hv17x9","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 23:38:37  📨 收到 1 個事件
2025-08-10 23:38:37  📋 事件類型: message
2025-08-10 23:38:37  🔍 完整事件 JSON: {
2025-08-10 23:38:37    "type": "message",
2025-08-10 23:38:37    "message": {
2025-08-10 23:38:37      "type": "text",
2025-08-10 23:38:37      "text": "今天小明的數學課學了分數加減法"
2025-08-10 23:38:37    },
2025-08-10 23:38:37    "source": {
2025-08-10 23:38:37      "userId": "U_test_user_qa",
2025-08-10 23:38:37      "type": "user"
2025-08-10 23:38:37    },
2025-08-10 23:38:37    "replyToken": "test-reply-token-1754869117292",
2025-08-10 23:38:37    "timestamp": 1754869117292
2025-08-10 23:38:37  }
2025-08-10 23:38:37  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:38:37  {"ts":"2025-08-10T23:38:37.625Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869117625_8wwsjf","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 23:38:37  🔍 用戶ID類型: string
2025-08-10 23:38:37  🔍 是否測試用戶: true
2025-08-10 23:38:37  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:38:37  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 23:38:37  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:38:37  {"ts":"2025-08-10T23:38:37.766Z","lvl":"info","stage":"nlp","traceId":"line_1754869117625_8wwsjf","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:38:37  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:38:38  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:38:38  📊 規則提取置信度: 1.00
2025-08-10 23:38:38  🤖 啟用 AI 輔助提取...
2025-08-10 23:38:39  ✅ 最終 slots: {
2025-08-10 23:38:39    studentName: '小明',
2025-08-10 23:38:39    courseName: '數學課',
2025-08-10 23:38:39    timeReference: 'today',
2025-08-10 23:38:39    content: '分數加減法'
2025-08-10 23:38:39  }
2025-08-10 23:38:39  {"ts":"2025-08-10T23:38:39.107Z","lvl":"info","stage":"slots","traceId":"line_1754869117625_8wwsjf","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:38:39  🎯 執行任務: record_content
2025-08-10 23:38:39  📝 開始處理記錄課程內容任務: {
2025-08-10 23:38:39    studentName: '小明',
2025-08-10 23:38:39  ✅ 最終 slots: {
2025-08-10 23:38:39    studentName: '小明',
2025-08-10 23:38:39    courseName: '數學課',
2025-08-10 23:38:39    timeReference: 'today',
2025-08-10 23:38:39    content: '分數加減法'
2025-08-10 23:38:39  }
2025-08-10 23:38:39  {"ts":"2025-08-10T23:38:39.107Z","lvl":"info","stage":"slots","traceId":"line_1754869117625_8wwsjf","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:38:39  🎯 執行任務: record_content
2025-08-10 23:38:39  📝 開始處理記錄課程內容任務: {
2025-08-10 23:38:39    studentName: '小明',
2025-08-10 23:38:39    courseName: '數學課',
2025-08-10 23:38:39    timeReference: 'today',
2025-08-10 23:38:39    content: '分數加減法'
2025-08-10 23:38:39  }
2025-08-10 23:38:39  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 23:38:39  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 23:38:39  ✅ 文檔已添加到 course_contents: RZNmbZ59QWQsNkcBmFK2
2025-08-10 23:38:39  ✅ 課程內容記錄已儲存: RZNmbZ59QWQsNkcBmFK2
2025-08-10 23:38:39  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 23:38:39  📊 任務執行結果: {
2025-08-10 23:38:39    success: true,
2025-08-10 23:38:39    code: 'RECORD_CONTENT_OK',
2025-08-10 23:38:39    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 23:38:39    data: {
2025-08-10 23:38:39      recordId: 'RZNmbZ59QWQsNkcBmFK2',
2025-08-10 23:38:39      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 23:38:39      targetDate: '2025-08-10'
2025-08-10 23:38:39    }
2025-08-10 23:38:39  }
2025-08-10 23:38:39  {"ts":"2025-08-10T23:38:39.425Z","lvl":"info","stage":"task","traceId":"line_1754869117625_8wwsjf","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":318}
2025-08-10 23:38:39  🔍 檢查 replyToken: test-reply-token-1754869117292
2025-08-10 23:38:39  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:38:39  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:38:39  📚 課程：小明 - 數學課
2025-08-10 23:38:39  📅 日期：2025-08-10
2025-08-10 23:38:39  💬 內容：分數加減法
2025-08-10 23:38:39  {"ts":"2025-08-10T23:38:39.708Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869117625_8wwsjf","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 23:38:52  📨 收到 1 個事件
2025-08-10 23:38:52  📋 事件類型: message
2025-08-10 23:38:52  🔍 完整事件 JSON: {
2025-08-10 23:38:52    "type": "message",
2025-08-10 23:38:52    "message": {
2025-08-10 23:38:52      "type": "text",
2025-08-10 23:38:52      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 23:38:52    },
2025-08-10 23:38:52    "source": {
2025-08-10 23:38:52      "userId": "U_test_user_qa",
2025-08-10 23:38:52      "type": "user"
2025-08-10 23:38:52    },
2025-08-10 23:38:52    "replyToken": "test-reply-token-1754869132157",
2025-08-10 23:38:52    "timestamp": 1754869132157
2025-08-10 23:38:52  }
2025-08-10 23:38:52  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:38:52  {"ts":"2025-08-10T23:38:52.386Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869132386_r0ibun","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 23:38:52  🔍 用戶ID類型: string
2025-08-10 23:38:52  🔍 是否測試用戶: true
2025-08-10 23:38:52  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:38:52  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 23:38:52  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:38:52  {"ts":"2025-08-10T23:38:52.527Z","lvl":"info","stage":"nlp","traceId":"line_1754869132386_r0ibun","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:38:52  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:38:52  📊 規則提取置信度: 0.33
2025-08-10 23:38:52  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 23:38:54  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 23:38:54  {"ts":"2025-08-10T23:38:54.397Z","lvl":"info","stage":"slots","traceId":"line_1754869132386_r0ibun","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 23:38:54  🎯 執行任務: record_content
2025-08-10 23:38:54  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 23:38:54  ✅ 文檔已添加到 course_contents: tzUPAaCMWcuc2OUf08vG
2025-08-10 23:38:54  ✅ 課程內容記錄已儲存: tzUPAaCMWcuc2OUf08vG
2025-08-10 23:38:54  📊 任務執行結果: {
2025-08-10 23:38:54    success: true,
2025-08-10 23:38:54    code: 'RECORD_CONTENT_OK',
2025-08-10 23:38:54    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 23:38:54    data: {
2025-08-10 23:38:54      recordId: 'tzUPAaCMWcuc2OUf08vG',
2025-08-10 23:38:54      courseId: null,
2025-08-10 23:38:54      targetDate: '2025-08-09'
2025-08-10 23:38:54    }
2025-08-10 23:38:54  }
2025-08-10 23:38:54  {"ts":"2025-08-10T23:38:54.465Z","lvl":"info","stage":"task","traceId":"line_1754869132386_r0ibun","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":68}
2025-08-10 23:38:54  🔍 檢查 replyToken: test-reply-token-1754869132157
2025-08-10 23:38:54  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:38:54  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:38:54  📝 記錄為獨立內容
2025-08-10 23:38:54  📚 課程：鋼琴課
2025-08-10 23:38:54  📅 日期：2025-08-09
2025-08-10 23:38:54  💬 內容：練習了小星星
2025-08-10 23:38:54  {"ts":"2025-08-10T23:38:54.748Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869132386_r0ibun","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 23:39:07  📨 收到 1 個事件
2025-08-10 23:39:07  📋 事件類型: message
2025-08-10 23:39:07  🔍 完整事件 JSON: {
2025-08-10 23:39:07    "type": "message",
2025-08-10 23:39:07    "message": {
2025-08-10 23:39:07      "type": "text",
2025-08-10 23:39:07      "text": "小明昨天數學課學了什麼？"
2025-08-10 23:39:07    },
2025-08-10 23:39:07    "source": {
2025-08-10 23:39:07      "userId": "U_test_user_qa",
2025-08-10 23:39:07      "type": "user"
2025-08-10 23:39:07    },
2025-08-10 23:39:07  📨 收到 1 個事件
2025-08-10 23:39:07  📋 事件類型: message
2025-08-10 23:39:07  🔍 完整事件 JSON: {
2025-08-10 23:39:07    "type": "message",
2025-08-10 23:39:07    "message": {
2025-08-10 23:39:07      "type": "text",
2025-08-10 23:39:07      "text": "小明昨天數學課學了什麼？"
2025-08-10 23:39:07    },
2025-08-10 23:39:07    "source": {
2025-08-10 23:39:07      "userId": "U_test_user_qa",
2025-08-10 23:39:07      "type": "user"
2025-08-10 23:39:07    },
2025-08-10 23:39:07    "replyToken": "test-reply-token-1754869147311",
2025-08-10 23:39:07    "timestamp": 1754869147311
2025-08-10 23:39:07  }
2025-08-10 23:39:07  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:39:07  {"ts":"2025-08-10T23:39:07.606Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869147606_1lkf2m","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 23:39:07  🔍 用戶ID類型: string
2025-08-10 23:39:07  🔍 是否測試用戶: true
2025-08-10 23:39:07  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:39:07  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 23:39:07  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:39:07  {"ts":"2025-08-10T23:39:07.747Z","lvl":"info","stage":"nlp","traceId":"line_1754869147606_1lkf2m","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:39:07  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:39:08  📊 規則提取置信度: 0.67
2025-08-10 23:39:08  🤖 啟用 AI 輔助提取...
2025-08-10 23:39:09  ✅ 最終 slots: {
2025-08-10 23:39:09    studentName: '小明',
2025-08-10 23:39:09    courseName: '數學課',
2025-08-10 23:39:09    timeReference: 'yesterday',
2025-08-10 23:39:09    content: '什麼？'
2025-08-10 23:39:09  }
2025-08-10 23:39:09  {"ts":"2025-08-10T23:39:09.258Z","lvl":"info","stage":"slots","traceId":"line_1754869147606_1lkf2m","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:39:09  🎯 執行任務: record_content
2025-08-10 23:39:09  📝 開始處理記錄課程內容任務: {
2025-08-10 23:39:09    studentName: '小明',
2025-08-10 23:39:09    courseName: '數學課',
2025-08-10 23:39:09    timeReference: 'yesterday',
2025-08-10 23:39:09    content: '什麼？'
2025-08-10 23:39:09  }
2025-08-10 23:39:09  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 23:39:09  ❓ 未找到完全匹配的課程
2025-08-10 23:39:09  ✅ 文檔已添加到 course_contents: 0e3IJqWp5g8OpNlH5j5l
2025-08-10 23:39:09  ✅ 課程內容記錄已儲存: 0e3IJqWp5g8OpNlH5j5l
2025-08-10 23:39:09  📊 任務執行結果: {
2025-08-10 23:39:09    success: true,
2025-08-10 23:39:09    code: 'RECORD_CONTENT_OK',
2025-08-10 23:39:09    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 23:39:09    data: {
2025-08-10 23:39:09      recordId: '0e3IJqWp5g8OpNlH5j5l',
2025-08-10 23:39:09      courseId: null,
2025-08-10 23:39:09      targetDate: '2025-08-09'
2025-08-10 23:39:09    }
2025-08-10 23:39:09  }
2025-08-10 23:39:09  {"ts":"2025-08-10T23:39:09.684Z","lvl":"info","stage":"task","traceId":"line_1754869147606_1lkf2m","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":426}
2025-08-10 23:39:09  🔍 檢查 replyToken: test-reply-token-1754869147311
2025-08-10 23:39:09  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:39:09  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:39:09  📝 記錄為獨立內容
2025-08-10 23:39:09  👨‍🎓 學生：小明
2025-08-10 23:39:09  📚 課程：數學課
2025-08-10 23:39:09  📅 日期：2025-08-09
2025-08-10 23:39:09  💬 內容：什麼？
2025-08-10 23:39:09  {"ts":"2025-08-10T23:39:09.968Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869147606_1lkf2m","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 23:39:17  📨 收到 1 個事件
2025-08-10 23:39:17  📋 事件類型: message
2025-08-10 23:39:17  🔍 完整事件 JSON: {
2025-08-10 23:39:17    "type": "message",
2025-08-10 23:39:17    "message": {
2025-08-10 23:39:17      "type": "text",
2025-08-10 23:39:17      "text": "記錄小明今天化學課的內容"
2025-08-10 23:39:17    },
2025-08-10 23:39:17    "source": {
2025-08-10 23:39:17      "userId": "U_test_user_qa",
2025-08-10 23:39:17      "type": "user"
2025-08-10 23:39:17    },
2025-08-10 23:39:17    "replyToken": "test-reply-token-1754869156898",
2025-08-10 23:39:17    "timestamp": 1754869156898
2025-08-10 23:39:17  }
2025-08-10 23:39:17  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:39:17  {"ts":"2025-08-10T23:39:17.131Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869157131_6sigza","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 23:39:17  🔍 用戶ID類型: string
2025-08-10 23:39:17  🔍 是否測試用戶: true
2025-08-10 23:39:17  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:39:17  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 23:39:17  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:39:17  {"ts":"2025-08-10T23:39:17.272Z","lvl":"info","stage":"nlp","traceId":"line_1754869157131_6sigza","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:39:17  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:39:17  📊 規則提取置信度: 0.67
2025-08-10 23:39:17  🤖 啟用 AI 輔助提取...
2025-08-10 23:39:19  ✅ 最終 slots: {
2025-08-10 23:39:19    studentName: '小明',
2025-08-10 23:39:19    courseName: '化學課',
2025-08-10 23:39:19    timeReference: 'today',
2025-08-10 23:39:19    content: '小明今天化學課的內容'
2025-08-10 23:39:19  }
2025-08-10 23:39:19  {"ts":"2025-08-10T23:39:19.484Z","lvl":"info","stage":"slots","traceId":"line_1754869157131_6sigza","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:39:19  🎯 執行任務: record_content
2025-08-10 23:39:19  📝 開始處理記錄課程內容任務: {
2025-08-10 23:39:19    studentName: '小明',
2025-08-10 23:39:19  ✅ 最終 slots: {
2025-08-10 23:39:19    studentName: '小明',
2025-08-10 23:39:19    courseName: '化學課',
2025-08-10 23:39:19    timeReference: 'today',
2025-08-10 23:39:19    content: '小明今天化學課的內容'
2025-08-10 23:39:19  }
2025-08-10 23:39:19  {"ts":"2025-08-10T23:39:19.484Z","lvl":"info","stage":"slots","traceId":"line_1754869157131_6sigza","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:39:19  🎯 執行任務: record_content
2025-08-10 23:39:19  📝 開始處理記錄課程內容任務: {
2025-08-10 23:39:19    studentName: '小明',
2025-08-10 23:39:19    courseName: '化學課',
2025-08-10 23:39:19    timeReference: 'today',
2025-08-10 23:39:19    content: '小明今天化學課的內容'
2025-08-10 23:39:19  }
2025-08-10 23:39:19  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 23:39:19  ❓ 未找到完全匹配的課程
2025-08-10 23:39:19  ✅ 文檔已添加到 course_contents: MRUX1Xslgahm971upYVH
2025-08-10 23:39:19  ✅ 課程內容記錄已儲存: MRUX1Xslgahm971upYVH
2025-08-10 23:39:19  📊 任務執行結果: {
2025-08-10 23:39:19    success: true,
2025-08-10 23:39:19    code: 'RECORD_CONTENT_OK',
2025-08-10 23:39:19    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 23:39:19      '📝 記錄為獨立內容\n' +
2025-08-10 23:39:19      '👨‍🎓 學生：小明\n' +
2025-08-10 23:39:19      '📚 課程：化學課\n' +
2025-08-10 23:39:19      '📅 日期：2025-08-10\n' +
2025-08-10 23:39:19      '💬 內容：小明今天化學課的內容',
2025-08-10 23:39:19    data: {
2025-08-10 23:39:19      recordId: 'MRUX1Xslgahm971upYVH',
2025-08-10 23:39:19      courseId: null,
2025-08-10 23:39:19      targetDate: '2025-08-10'
2025-08-10 23:39:19    }
2025-08-10 23:39:19  }
2025-08-10 23:39:19  {"ts":"2025-08-10T23:39:19.714Z","lvl":"info","stage":"task","traceId":"line_1754869157131_6sigza","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":230}
2025-08-10 23:39:19  🔍 檢查 replyToken: test-reply-token-1754869156898
2025-08-10 23:39:19  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:39:19  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:39:19  📝 記錄為獨立內容
2025-08-10 23:39:19  👨‍🎓 學生：小明
2025-08-10 23:39:19  📚 課程：化學課
2025-08-10 23:39:19  📅 日期：2025-08-10
2025-08-10 23:39:19  💬 內容：小明今天化學課的內容
2025-08-10 23:39:19  {"ts":"2025-08-10T23:39:19.997Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869157131_6sigza","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 23:39:32  📨 收到 1 個事件
2025-08-10 23:39:32  📋 事件類型: message
2025-08-10 23:39:32  🔍 完整事件 JSON: {
2025-08-10 23:39:32    "type": "message",
2025-08-10 23:39:32    "message": {
2025-08-10 23:39:32      "type": "text",
2025-08-10 23:39:32      "text": "提醒我小明的數學課"
2025-08-10 23:39:32    },
2025-08-10 23:39:32    "source": {
2025-08-10 23:39:32      "userId": "U_test_user_qa",
2025-08-10 23:39:32      "type": "user"
2025-08-10 23:39:32    },
2025-08-10 23:39:32    "replyToken": "test-reply-token-1754869172698",
2025-08-10 23:39:32    "timestamp": 1754869172698
2025-08-10 23:39:32  }
2025-08-10 23:39:32  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:39:32  {"ts":"2025-08-10T23:39:32.936Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869172936_lfoa2c","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 23:39:32  🔍 用戶ID類型: string
2025-08-10 23:39:32  🔍 是否測試用戶: true
2025-08-10 23:39:32  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:39:32  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 23:39:33  ✅ 規則匹配成功: set_reminder
2025-08-10 23:39:33  {"ts":"2025-08-10T23:39:33.077Z","lvl":"info","stage":"nlp","traceId":"line_1754869172936_lfoa2c","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 23:39:33  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 23:39:33  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:39:33  📊 規則提取置信度: 0.67
2025-08-10 23:39:33  🤖 啟用 AI 輔助提取...
2025-08-10 23:39:34  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 23:39:34  {"ts":"2025-08-10T23:39:34.652Z","lvl":"info","stage":"slots","traceId":"line_1754869172936_lfoa2c","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 23:39:34  🎯 執行任務: set_reminder
2025-08-10 23:39:34  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 23:39:34  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 23:39:34  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 23:39:34  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 23:39:34  ✅ 提醒記錄已創建: 2RcaKLvEzJx6S3J9Qlmk
2025-08-10 23:39:34  ✅ 提醒設定成功: 2RcaKLvEzJx6S3J9Qlmk
2025-08-10 23:39:34  📊 任務執行結果: {
2025-08-10 23:39:34    success: true,
2025-08-10 23:39:34    code: 'REMINDER_SET_OK',
2025-08-10 23:39:34    message: '✅ 提醒設定完成！\n' +
2025-08-10 23:39:34      '📚 課程：小明 的 數學課\n' +
2025-08-10 23:39:34      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 23:39:34      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 23:39:34  }
2025-08-10 23:39:34  {"ts":"2025-08-10T23:39:34.972Z","lvl":"info","stage":"task","traceId":"line_1754869172936_lfoa2c","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":320}
2025-08-10 23:39:35  🔍 檢查 replyToken: test-reply-token-1754869172698
2025-08-10 23:39:35  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:39:35  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 23:39:35  📚 課程：小明 的 數學課
2025-08-10 23:39:35  📅 上課時間：8/11 下午02:00
2025-08-10 23:39:35  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 23:39:35  {"ts":"2025-08-10T23:39:35.255Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869172936_lfoa2c","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 23:39:47  📨 收到 1 個事件
2025-08-10 23:39:47  📋 事件類型: message
2025-08-10 23:39:47  🔍 完整事件 JSON: {
2025-08-10 23:39:47    "type": "message",
2025-08-10 23:39:47    "message": {
2025-08-10 23:39:47  📨 收到 1 個事件
2025-08-10 23:39:47  📋 事件類型: message
2025-08-10 23:39:47  🔍 完整事件 JSON: {
2025-08-10 23:39:47    "type": "message",
2025-08-10 23:39:47    "message": {
2025-08-10 23:39:47      "type": "text",
2025-08-10 23:39:47      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 23:39:47    },
2025-08-10 23:39:47    "source": {
2025-08-10 23:39:47      "userId": "U_test_user_qa",
2025-08-10 23:39:47      "type": "user"
2025-08-10 23:39:47    },
2025-08-10 23:39:47    "replyToken": "test-reply-token-1754869187804",
2025-08-10 23:39:47    "timestamp": 1754869187804
2025-08-10 23:39:47  }
2025-08-10 23:39:47  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:39:48  {"ts":"2025-08-10T23:39:48.028Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869188028_nwg4s1","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 23:39:48  🔍 用戶ID類型: string
2025-08-10 23:39:48  🔍 是否測試用戶: true
2025-08-10 23:39:48  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:39:48  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 23:39:48  ✅ 規則匹配成功: set_reminder
2025-08-10 23:39:48  {"ts":"2025-08-10T23:39:48.169Z","lvl":"info","stage":"nlp","traceId":"line_1754869188028_nwg4s1","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 23:39:48  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 23:39:48  📊 規則提取置信度: 0.67
2025-08-10 23:39:48  🤖 啟用 AI 輔助提取...
2025-08-10 23:39:50  ✅ 最終 slots: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 23:39:50  {"ts":"2025-08-10T23:39:50.152Z","lvl":"info","stage":"slots","traceId":"line_1754869188028_nwg4s1","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","reminderTime","reminderNote"]}
2025-08-10 23:39:50  🎯 執行任務: set_reminder
2025-08-10 23:39:50  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 23:39:50  📊 任務執行結果: {
2025-08-10 23:39:50    success: false,
2025-08-10 23:39:50    code: 'MISSING_STUDENT',
2025-08-10 23:39:50    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 23:39:50  }
2025-08-10 23:39:50  {"ts":"2025-08-10T23:39:50.152Z","lvl":"info","stage":"task","traceId":"line_1754869188028_nwg4s1","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 23:39:50  🔍 檢查 replyToken: test-reply-token-1754869187804
2025-08-10 23:39:50  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:39:50  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 23:39:50  {"ts":"2025-08-10T23:39:50.434Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869188028_nwg4s1","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 23:40:03  📨 收到 1 個事件
2025-08-10 23:40:03  📋 事件類型: message
2025-08-10 23:40:03  🔍 完整事件 JSON: {
2025-08-10 23:40:03    "type": "message",
2025-08-10 23:40:03    "message": {
2025-08-10 23:40:03      "type": "text",
2025-08-10 23:40:03      "text": "提醒我小明的物理課"
2025-08-10 23:40:03    },
2025-08-10 23:40:03    "source": {
2025-08-10 23:40:03      "userId": "U_test_user_qa",
2025-08-10 23:40:03      "type": "user"
2025-08-10 23:40:03    },
2025-08-10 23:40:03    "replyToken": "test-reply-token-1754869202889",
2025-08-10 23:40:03    "timestamp": 1754869202889
2025-08-10 23:40:03  }
2025-08-10 23:40:03  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:40:03  {"ts":"2025-08-10T23:40:03.116Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869203116_4ti3ic","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 23:40:03  🔍 用戶ID類型: string
2025-08-10 23:40:03  🔍 是否測試用戶: true
2025-08-10 23:40:03  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:40:03  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 23:40:03  ✅ 規則匹配成功: set_reminder
2025-08-10 23:40:03  {"ts":"2025-08-10T23:40:03.257Z","lvl":"info","stage":"nlp","traceId":"line_1754869203116_4ti3ic","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 23:40:03  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 23:40:03  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:40:03  📊 規則提取置信度: 0.67
2025-08-10 23:40:03  🤖 啟用 AI 輔助提取...
2025-08-10 23:40:04  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 23:40:04  {"ts":"2025-08-10T23:40:04.618Z","lvl":"info","stage":"slots","traceId":"line_1754869203116_4ti3ic","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 23:40:04  🎯 執行任務: set_reminder
2025-08-10 23:40:04  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 23:40:04  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 23:40:04  📊 任務執行結果: {
2025-08-10 23:40:04    success: false,
2025-08-10 23:40:04    code: 'NOT_FOUND',
2025-08-10 23:40:04    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 23:40:04  }
2025-08-10 23:40:04  {"ts":"2025-08-10T23:40:04.688Z","lvl":"info","stage":"task","traceId":"line_1754869203116_4ti3ic","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":70}
2025-08-10 23:40:04  🔍 檢查 replyToken: test-reply-token-1754869202889
2025-08-10 23:40:04  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:40:04  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 23:40:04  {"ts":"2025-08-10T23:40:04.971Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869203116_4ti3ic","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 23:40:17  📨 收到 1 個事件
2025-08-10 23:40:17  📋 事件類型: message
2025-08-10 23:40:17  🔍 完整事件 JSON: {
2025-08-10 23:40:17    "type": "message",
2025-08-10 23:40:17    "message": {
2025-08-10 23:40:17      "type": "text",
2025-08-10 23:40:17      "text": "小明的數學課改到下午4點"
2025-08-10 23:40:17    },
2025-08-10 23:40:17    "source": {
2025-08-10 23:40:17      "userId": "U_test_user_qa",
2025-08-10 23:40:17      "type": "user"
2025-08-10 23:40:17    },
2025-08-10 23:40:17    "replyToken": "test-reply-token-1754869217344",
2025-08-10 23:40:17    "timestamp": 1754869217344
2025-08-10 23:40:17  }
2025-08-10 23:40:17  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:40:17  {"ts":"2025-08-10T23:40:17.687Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869217687_05yh6s","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 23:40:17  🔍 用戶ID類型: string
2025-08-10 23:40:17  📨 收到 1 個事件
2025-08-10 23:40:17  📋 事件類型: message
2025-08-10 23:40:17  🔍 完整事件 JSON: {
2025-08-10 23:40:17    "type": "message",
2025-08-10 23:40:17    "message": {
2025-08-10 23:40:17      "type": "text",
2025-08-10 23:40:17      "text": "小明的數學課改到下午4點"
2025-08-10 23:40:17    },
2025-08-10 23:40:17    "source": {
2025-08-10 23:40:17      "userId": "U_test_user_qa",
2025-08-10 23:40:17      "type": "user"
2025-08-10 23:40:17    },
2025-08-10 23:40:17    "replyToken": "test-reply-token-1754869217344",
2025-08-10 23:40:17    "timestamp": 1754869217344
2025-08-10 23:40:17  }
2025-08-10 23:40:17  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:40:17  {"ts":"2025-08-10T23:40:17.687Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869217687_05yh6s","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 23:40:17  🔍 用戶ID類型: string
2025-08-10 23:40:17  🔍 是否測試用戶: true
2025-08-10 23:40:17  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:40:17  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 23:40:17  ✅ 規則匹配成功: modify_course
2025-08-10 23:40:17  {"ts":"2025-08-10T23:40:17.829Z","lvl":"info","stage":"nlp","traceId":"line_1754869217687_05yh6s","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 23:40:17  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 23:40:17  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 23:40:18  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:40:18  📊 規則提取置信度: 0.00
2025-08-10 23:40:18  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 23:40:19  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 23:40:19  {"ts":"2025-08-10T23:40:19.655Z","lvl":"info","stage":"slots","traceId":"line_1754869217687_05yh6s","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 23:40:19  🎯 執行任務: modify_course
2025-08-10 23:40:19  ✏️ 執行修改操作任務: {
2025-08-10 23:40:19    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 23:40:19    userId: 'U_test_user_qa'
2025-08-10 23:40:19  }
2025-08-10 23:40:19  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 23:40:19  {"ts":"2025-08-10T23:40:19.726Z","lvl":"info","stage":"task","traceId":"line_1754869217687_05yh6s","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":70}
2025-08-10 23:40:20  🔍 檢查 replyToken: test-reply-token-1754869217344
2025-08-10 23:40:20  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:40:20  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 23:40:20  {"ts":"2025-08-10T23:40:20.010Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754869217687_05yh6s","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 23:40:32  📨 收到 1 個事件
2025-08-10 23:40:32  📋 事件類型: message
2025-08-10 23:40:32  🔍 完整事件 JSON: {
2025-08-10 23:40:32    "type": "message",
2025-08-10 23:40:32    "message": {
2025-08-10 23:40:32      "type": "text",
2025-08-10 23:40:32      "text": "小明每天的晨練課改到早上7點"
2025-08-10 23:40:32    },
2025-08-10 23:40:32    "source": {
2025-08-10 23:40:32      "userId": "U_test_user_qa",
2025-08-10 23:40:32      "type": "user"
2025-08-10 23:40:32    },
2025-08-10 23:40:32    "replyToken": "test-reply-token-1754869232547",
2025-08-10 23:40:32    "timestamp": 1754869232547
2025-08-10 23:40:32  }
2025-08-10 23:40:32  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:40:32  {"ts":"2025-08-10T23:40:32.948Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 23:40:32  🔍 用戶ID類型: string
2025-08-10 23:40:32  🔍 是否測試用戶: true
2025-08-10 23:40:32  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:40:32  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 23:40:33  ✅ 規則匹配成功: create_recurring_course
2025-08-10 23:40:33  {"ts":"2025-08-10T23:40:33.089Z","lvl":"info","stage":"nlp","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 23:40:33  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 23:40:33  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 23:40:33  ✅ 時間解析成功: {
2025-08-10 23:40:33    input: '小明每天的晨練課改到早上7點',
2025-08-10 23:40:33    output: '07:00',
2025-08-10 23:40:33    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 23:40:33  }
2025-08-10 23:40:33  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:40:33  📊 規則提取置信度: 0.67
2025-08-10 23:40:33  🤖 啟用 AI 輔助提取...
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
2025-08-10 23:40:34  ✅ 最終 slots: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  {"ts":"2025-08-10T23:40:34.337Z","lvl":"info","stage":"slots","traceId":"line_1754869232948_nxc1ft","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:40:34  🎯 執行任務: create_recurring_course
2025-08-10 23:40:34  🎯 開始處理新增課程任務
2025-08-10 23:40:34  📋 接收參數: {
2025-08-10 23:40:34    studentName: '小明',
2025-08-10 23:40:34    courseName: '晨練課',
2025-08-10 23:40:34    scheduleTime: '07:00',
2025-08-10 23:40:34    recurring: true
2025-08-10 23:40:34  }
2025-08-10 23:40:34  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 23:40:34  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:40:34      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:40:34      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:40:34      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:40:34      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:40:34      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:40:34      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:40:34      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:40:34      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:40:34      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:40:34      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:40:34    config: {
2025-08-10 23:40:34      url: URL {
2025-08-10 23:40:34        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        origin: 'https://www.googleapis.com',
2025-08-10 23:40:34        protocol: 'https:',
2025-08-10 23:40:34        username: '',
2025-08-10 23:40:34        password: '',
2025-08-10 23:40:34        host: 'www.googleapis.com',
2025-08-10 23:40:34        hostname: 'www.googleapis.com',
2025-08-10 23:40:34        port: '',
2025-08-10 23:40:34        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 23:40:34        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:40:34        searchParams: URLSearchParams {
2025-08-10 23:40:34          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34          'singleEvents' => 'true',
2025-08-10 23:40:34          'orderBy' => 'startTime' },
2025-08-10 23:40:34        hash: ''
2025-08-10 23:40:34      },
2025-08-10 23:40:34      method: 'GET',
2025-08-10 23:40:34      apiVersion: '',
2025-08-10 23:40:34      userAgentDirectives: [ [Object] ],
2025-08-10 23:40:34      paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34      headers: Headers {
2025-08-10 23:40:34        'accept-encoding': 'gzip',
2025-08-10 23:40:34        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      params: {
2025-08-10 23:40:34        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:40:34        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:40:34        singleEvents: true,
2025-08-10 23:40:34        orderBy: 'startTime'
2025-08-10 23:40:34      },
2025-08-10 23:40:34      validateStatus: [Function (anonymous)],
2025-08-10 23:40:34      retry: true,
2025-08-10 23:40:34      responseType: 'unknown',
2025-08-10 23:40:34      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:40:34      retryConfig: {
2025-08-10 23:40:34        currentRetryAttempt: 0,
2025-08-10 23:40:34        retry: 3,
2025-08-10 23:40:34        httpMethodsToRetry: [Array],
2025-08-10 23:40:34        noResponseRetries: 2,
2025-08-10 23:40:34        retryDelayMultiplier: 2,
2025-08-10 23:40:34        timeOfFirstRequest: 1754869234816,
2025-08-10 23:40:34        totalTimeout: 9007199254740991,
2025-08-10 23:40:34        maxRetryDelay: 9007199254740991,
2025-08-10 23:40:34        statusCodesToRetry: [Array]
2025-08-10 23:40:34      }
2025-08-10 23:40:34    },
2025-08-10 23:40:34    response: Response {
2025-08-10 23:40:34      size: 0,
2025-08-10 23:40:34      data: { error: [Object] },
2025-08-10 23:40:34      config: {
2025-08-10 23:40:34        url: URL {},
2025-08-10 23:40:34        method: 'GET',
2025-08-10 23:40:34        apiVersion: '',
2025-08-10 23:40:34        userAgentDirectives: [Array],
2025-08-10 23:40:34        paramsSerializer: [Function (anonymous)],
2025-08-10 23:40:34        headers: Headers {
2025-08-10 23:40:34          'accept-encoding': 'gzip',
2025-08-10 23:40:34          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:40:34          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:40:34          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:40:34        },
2025-08-10 23:40:34        params: [Object],
2025-08-10 23:40:34        validateStatus: [Function (anonymous)],
2025-08-10 23:40:34        retry: true,
2025-08-10 23:40:34        responseType: 'unknown',
2025-08-10 23:40:34        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:40:34      },
2025-08-10 23:40:34      Symbol(Body internals): {
