2025-08-10 19:09:01  📨 收到 1 個事件
2025-08-10 19:09:01  📋 事件類型: message
2025-08-10 19:09:01  🔍 完整事件 JSON: {
2025-08-10 19:09:01    "type": "message",
2025-08-10 19:09:01    "message": {
2025-08-10 19:09:01      "type": "text",
2025-08-10 19:09:01      "text": "查詢Lumi的重複課程"
2025-08-10 19:09:01    },
2025-08-10 19:09:01    "source": {
2025-08-10 19:09:01      "userId": "U_test_user_qa",
2025-08-10 19:09:01      "type": "user"
2025-08-10 19:09:01    },
2025-08-10 19:09:01    "replyToken": "test-reply-token-1754852941625",
2025-08-10 19:09:01    "timestamp": 1754852941625
2025-08-10 19:09:01  }
2025-08-10 19:09:01  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:09:01  {"ts":"2025-08-10T19:09:01.797Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754852941797_uccaos","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 19:09:01  🔍 用戶ID類型: string
2025-08-10 19:09:01  🔍 是否測試用戶: true
2025-08-10 19:09:01  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:09:01  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 19:09:01  ✅ 規則匹配成功: query_schedule
2025-08-10 19:09:01  {"ts":"2025-08-10T19:09:01.941Z","lvl":"info","stage":"nlp","traceId":"line_1754852941797_uccaos","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 19:09:02  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 19:09:02  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:09:02  📊 規則提取置信度: 0.50
2025-08-10 19:09:02  🤖 啟用 AI 輔助提取...
2025-08-10 19:09:03  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 19:09:03  {"ts":"2025-08-10T19:09:03.361Z","lvl":"info","stage":"slots","traceId":"line_1754852941797_uccaos","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 19:09:03  🎯 執行任務: query_schedule
2025-08-10 19:09:03  🎯 開始處理查詢課表任務
2025-08-10 19:09:03  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 19:09:03  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 19:09:03  📚 查詢到 324 筆課程資料
2025-08-10 19:09:03  📚 查詢到 0 筆課程
2025-08-10 19:09:03  📊 任務執行結果: {
2025-08-10 19:09:03    success: true,
2025-08-10 19:09:03    code: 'QUERY_OK_EMPTY',
2025-08-10 19:09:03    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 19:09:03      '\n' +
2025-08-10 19:09:03      '💡 您可以：\n' +
2025-08-10 19:09:03      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 19:09:03      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 19:09:03      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 19:09:03    data: {
2025-08-10 19:09:03      courseCount: 0,
2025-08-10 19:09:03      dateRange: {
2025-08-10 19:09:03        startDate: '2025-08-10',
2025-08-10 19:09:03        endDate: '2025-08-16',
2025-08-10 19:09:03        description: '本週'
2025-08-10 19:09:03      }
2025-08-10 19:09:03    }
2025-08-10 19:09:03  }
2025-08-10 19:09:03  {"ts":"2025-08-10T19:09:03.716Z","lvl":"info","stage":"task","traceId":"line_1754852941797_uccaos","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":355}
2025-08-10 19:09:04  🔍 檢查 replyToken: test-reply-token-1754852941625
2025-08-10 19:09:04  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:09:04  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 19:09:04  
2025-08-10 19:09:04  💡 您可以：
2025-08-10 19:09:04  • 新增課程：「小明明天上午10點英文課」
2025-08-10 19:09:04  • 查詢其他時間：「小明下週的課表」
2025-08-10 19:09:04  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 19:09:04  {"ts":"2025-08-10T19:09:04.002Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754852941797_uccaos","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 19:09:16  📨 收到 1 個事件
2025-08-10 19:09:16  📋 事件類型: message
2025-08-10 19:09:16  🔍 完整事件 JSON: {
2025-08-10 19:09:16    "type": "message",
2025-08-10 19:09:16    "message": {
2025-08-10 19:09:16      "type": "text",
2025-08-10 19:09:16      "text": "今天小明的數學課學了分數加減法"
2025-08-10 19:09:16    },
2025-08-10 19:09:16    "source": {
2025-08-10 19:09:16      "userId": "U_test_user_qa",
2025-08-10 19:09:16      "type": "user"
2025-08-10 19:09:16    },
2025-08-10 19:09:16    "replyToken": "test-reply-token-1754852956505",
2025-08-10 19:09:16    "timestamp": 1754852956505
2025-08-10 19:09:16  }
2025-08-10 19:09:16  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:09:16  {"ts":"2025-08-10T19:09:16.677Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754852956677_kyfx7j","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 19:09:16  🔍 用戶ID類型: string
2025-08-10 19:09:16  🔍 是否測試用戶: true
2025-08-10 19:09:16  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:09:16  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 19:09:16  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:09:16  {"ts":"2025-08-10T19:09:16.819Z","lvl":"info","stage":"nlp","traceId":"line_1754852956677_kyfx7j","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:09:16  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:09:17  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:09:17  📊 規則提取置信度: 1.00
2025-08-10 19:09:17  🤖 啟用 AI 輔助提取...
2025-08-10 19:09:18  ✅ 最終 slots: {
2025-08-10 19:09:18    studentName: '小明',
2025-08-10 19:09:18    courseName: '數學課',
2025-08-10 19:09:18    timeReference: 'today',
2025-08-10 19:09:18    content: '分數加減法'
2025-08-10 19:09:18  }
2025-08-10 19:09:18  {"ts":"2025-08-10T19:09:18.730Z","lvl":"info","stage":"slots","traceId":"line_1754852956677_kyfx7j","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:09:18  🎯 執行任務: record_content
2025-08-10 19:09:18  📝 開始處理記錄課程內容任務: {
2025-08-10 19:09:18    studentName: '小明',
2025-08-10 19:09:18  ✅ 最終 slots: {
2025-08-10 19:09:18    studentName: '小明',
2025-08-10 19:09:18    courseName: '數學課',
2025-08-10 19:09:18    timeReference: 'today',
2025-08-10 19:09:18    content: '分數加減法'
2025-08-10 19:09:18  }
2025-08-10 19:09:18  {"ts":"2025-08-10T19:09:18.730Z","lvl":"info","stage":"slots","traceId":"line_1754852956677_kyfx7j","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:09:18  🎯 執行任務: record_content
2025-08-10 19:09:18  📝 開始處理記錄課程內容任務: {
2025-08-10 19:09:18    studentName: '小明',
2025-08-10 19:09:18    courseName: '數學課',
2025-08-10 19:09:18    timeReference: 'today',
2025-08-10 19:09:18    content: '分數加減法'
2025-08-10 19:09:18  }
2025-08-10 19:09:18  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 19:09:19  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 19:09:19  ✅ 文檔已添加到 course_contents: ZqcmvdAkH6H9Q9DxIYlK
2025-08-10 19:09:19  ✅ 課程內容記錄已儲存: ZqcmvdAkH6H9Q9DxIYlK
2025-08-10 19:09:19  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 19:09:19  📊 任務執行結果: {
2025-08-10 19:09:19    success: true,
2025-08-10 19:09:19    code: 'RECORD_CONTENT_OK',
2025-08-10 19:09:19    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 19:09:19    data: {
2025-08-10 19:09:19      recordId: 'ZqcmvdAkH6H9Q9DxIYlK',
2025-08-10 19:09:19      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 19:09:19      targetDate: '2025-08-10'
2025-08-10 19:09:19    }
2025-08-10 19:09:19  }
2025-08-10 19:09:19  {"ts":"2025-08-10T19:09:19.247Z","lvl":"info","stage":"task","traceId":"line_1754852956677_kyfx7j","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":517}
2025-08-10 19:09:19  🔍 檢查 replyToken: test-reply-token-1754852956505
2025-08-10 19:09:19  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:09:19  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:09:19  📚 課程：小明 - 數學課
2025-08-10 19:09:19  📅 日期：2025-08-10
2025-08-10 19:09:19  💬 內容：分數加減法
2025-08-10 19:09:19  {"ts":"2025-08-10T19:09:19.531Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754852956677_kyfx7j","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 19:09:32  📨 收到 1 個事件
2025-08-10 19:09:32  📋 事件類型: message
2025-08-10 19:09:32  🔍 完整事件 JSON: {
2025-08-10 19:09:32    "type": "message",
2025-08-10 19:09:32    "message": {
2025-08-10 19:09:32      "type": "text",
2025-08-10 19:09:32      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 19:09:32    },
2025-08-10 19:09:32    "source": {
2025-08-10 19:09:32      "userId": "U_test_user_qa",
2025-08-10 19:09:32      "type": "user"
2025-08-10 19:09:32    },
2025-08-10 19:09:32    "replyToken": "test-reply-token-1754852972246",
2025-08-10 19:09:32    "timestamp": 1754852972246
2025-08-10 19:09:32  }
2025-08-10 19:09:32  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:09:32  {"ts":"2025-08-10T19:09:32.521Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754852972521_z6x7um","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 19:09:32  🔍 用戶ID類型: string
2025-08-10 19:09:32  🔍 是否測試用戶: true
2025-08-10 19:09:32  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:09:32  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 19:09:32  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:09:32  {"ts":"2025-08-10T19:09:32.663Z","lvl":"info","stage":"nlp","traceId":"line_1754852972521_z6x7um","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:09:32  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:09:32  📊 規則提取置信度: 0.33
2025-08-10 19:09:32  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:09:34  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:09:34  {"ts":"2025-08-10T19:09:34.068Z","lvl":"info","stage":"slots","traceId":"line_1754852972521_z6x7um","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 19:09:34  🎯 執行任務: record_content
2025-08-10 19:09:34  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 19:09:34  ✅ 文檔已添加到 course_contents: oNCvdoU00h9Pw5jml0Na
2025-08-10 19:09:34  ✅ 課程內容記錄已儲存: oNCvdoU00h9Pw5jml0Na
2025-08-10 19:09:34  📊 任務執行結果: {
2025-08-10 19:09:34    success: true,
2025-08-10 19:09:34    code: 'RECORD_CONTENT_OK',
2025-08-10 19:09:34    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 19:09:34    data: {
2025-08-10 19:09:34      recordId: 'oNCvdoU00h9Pw5jml0Na',
2025-08-10 19:09:34      courseId: null,
2025-08-10 19:09:34      targetDate: '2025-08-09'
2025-08-10 19:09:34    }
2025-08-10 19:09:34  }
2025-08-10 19:09:34  {"ts":"2025-08-10T19:09:34.145Z","lvl":"info","stage":"task","traceId":"line_1754852972521_z6x7um","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":77}
2025-08-10 19:09:34  🔍 檢查 replyToken: test-reply-token-1754852972246
2025-08-10 19:09:34  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:09:34  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:09:34  📝 記錄為獨立內容
2025-08-10 19:09:34  📚 課程：鋼琴課
2025-08-10 19:09:34  📅 日期：2025-08-09
2025-08-10 19:09:34  💬 內容：練習了小星星
2025-08-10 19:09:34  {"ts":"2025-08-10T19:09:34.435Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754852972521_z6x7um","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 19:09:47  📨 收到 1 個事件
2025-08-10 19:09:47  📋 事件類型: message
2025-08-10 19:09:47  🔍 完整事件 JSON: {
2025-08-10 19:09:47    "type": "message",
2025-08-10 19:09:47    "message": {
2025-08-10 19:09:47      "type": "text",
2025-08-10 19:09:47      "text": "小明昨天數學課學了什麼？"
2025-08-10 19:09:47    },
2025-08-10 19:09:47    "source": {
2025-08-10 19:09:47      "userId": "U_test_user_qa",
2025-08-10 19:09:47      "type": "user"
2025-08-10 19:09:47    },
2025-08-10 19:09:47  📨 收到 1 個事件
2025-08-10 19:09:47  📋 事件類型: message
2025-08-10 19:09:47  🔍 完整事件 JSON: {
2025-08-10 19:09:47    "type": "message",
2025-08-10 19:09:47    "message": {
2025-08-10 19:09:47      "type": "text",
2025-08-10 19:09:47      "text": "小明昨天數學課學了什麼？"
2025-08-10 19:09:47    },
2025-08-10 19:09:47    "source": {
2025-08-10 19:09:47      "userId": "U_test_user_qa",
2025-08-10 19:09:47      "type": "user"
2025-08-10 19:09:47    },
2025-08-10 19:09:47    "replyToken": "test-reply-token-1754852987673",
2025-08-10 19:09:47    "timestamp": 1754852987673
2025-08-10 19:09:47  }
2025-08-10 19:09:47  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:09:47  {"ts":"2025-08-10T19:09:47.845Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754852987845_l545mw","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 19:09:47  🔍 用戶ID類型: string
2025-08-10 19:09:47  🔍 是否測試用戶: true
2025-08-10 19:09:47  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:09:47  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 19:09:47  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:09:47  {"ts":"2025-08-10T19:09:47.987Z","lvl":"info","stage":"nlp","traceId":"line_1754852987845_l545mw","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:09:48  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:09:48  📊 規則提取置信度: 0.67
2025-08-10 19:09:48  🤖 啟用 AI 輔助提取...
2025-08-10 19:09:49  ✅ 最終 slots: {
2025-08-10 19:09:49    studentName: '小明',
2025-08-10 19:09:49    courseName: '數學課',
2025-08-10 19:09:49    timeReference: 'yesterday',
2025-08-10 19:09:49    content: '什麼？'
2025-08-10 19:09:49  }
2025-08-10 19:09:49  {"ts":"2025-08-10T19:09:49.587Z","lvl":"info","stage":"slots","traceId":"line_1754852987845_l545mw","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:09:49  🎯 執行任務: record_content
2025-08-10 19:09:49  📝 開始處理記錄課程內容任務: {
2025-08-10 19:09:49    studentName: '小明',
2025-08-10 19:09:49    courseName: '數學課',
2025-08-10 19:09:49    timeReference: 'yesterday',
2025-08-10 19:09:49    content: '什麼？'
2025-08-10 19:09:49  }
2025-08-10 19:09:49  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 19:09:49  ❓ 未找到完全匹配的課程
2025-08-10 19:09:49  ✅ 文檔已添加到 course_contents: NyFSMdXP7gtpmBIGiDiE
2025-08-10 19:09:49  ✅ 課程內容記錄已儲存: NyFSMdXP7gtpmBIGiDiE
2025-08-10 19:09:49  📊 任務執行結果: {
2025-08-10 19:09:49    success: true,
2025-08-10 19:09:49    code: 'RECORD_CONTENT_OK',
2025-08-10 19:09:49    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 19:09:49    data: {
2025-08-10 19:09:49      recordId: 'NyFSMdXP7gtpmBIGiDiE',
2025-08-10 19:09:49      courseId: null,
2025-08-10 19:09:49      targetDate: '2025-08-09'
2025-08-10 19:09:49    }
2025-08-10 19:09:49  }
2025-08-10 19:09:49  {"ts":"2025-08-10T19:09:49.946Z","lvl":"info","stage":"task","traceId":"line_1754852987845_l545mw","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":359}
2025-08-10 19:09:50  🔍 檢查 replyToken: test-reply-token-1754852987673
2025-08-10 19:09:50  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:09:50  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:09:50  📝 記錄為獨立內容
2025-08-10 19:09:50  👨‍🎓 學生：小明
2025-08-10 19:09:50  📚 課程：數學課
2025-08-10 19:09:50  📅 日期：2025-08-09
2025-08-10 19:09:50  💬 內容：什麼？
2025-08-10 19:09:50  {"ts":"2025-08-10T19:09:50.232Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754852987845_l545mw","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 19:09:57  📨 收到 1 個事件
2025-08-10 19:09:57  📋 事件類型: message
2025-08-10 19:09:57  🔍 完整事件 JSON: {
2025-08-10 19:09:57    "type": "message",
2025-08-10 19:09:57    "message": {
2025-08-10 19:09:57      "type": "text",
2025-08-10 19:09:57      "text": "記錄小明今天化學課的內容"
2025-08-10 19:09:57    },
2025-08-10 19:09:57    "source": {
2025-08-10 19:09:57      "userId": "U_test_user_qa",
2025-08-10 19:09:57      "type": "user"
2025-08-10 19:09:57    },
2025-08-10 19:09:57    "replyToken": "test-reply-token-1754852997178",
2025-08-10 19:09:57    "timestamp": 1754852997178
2025-08-10 19:09:57  }
2025-08-10 19:09:57  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:09:57  {"ts":"2025-08-10T19:09:57.346Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754852997346_kdv1ow","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 19:09:57  🔍 用戶ID類型: string
2025-08-10 19:09:57  🔍 是否測試用戶: true
2025-08-10 19:09:57  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:09:57  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 19:09:57  📝 內容記錄優先規則命中 → record_content
2025-08-10 19:09:57  {"ts":"2025-08-10T19:09:57.489Z","lvl":"info","stage":"nlp","traceId":"line_1754852997346_kdv1ow","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 19:09:57  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 19:09:57  📊 規則提取置信度: 0.67
2025-08-10 19:09:57  🤖 啟用 AI 輔助提取...
2025-08-10 19:09:58  ✅ 最終 slots: {
2025-08-10 19:09:58    studentName: '小明',
2025-08-10 19:09:58    courseName: '化學課',
2025-08-10 19:09:58    timeReference: 'today',
2025-08-10 19:09:58    content: '小明今天化學課的內容'
2025-08-10 19:09:58  }
2025-08-10 19:09:58  {"ts":"2025-08-10T19:09:58.998Z","lvl":"info","stage":"slots","traceId":"line_1754852997346_kdv1ow","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:09:58  🎯 執行任務: record_content
2025-08-10 19:09:58  📝 開始處理記錄課程內容任務: {
2025-08-10 19:09:58    studentName: '小明',
2025-08-10 19:09:58  ✅ 最終 slots: {
2025-08-10 19:09:58    studentName: '小明',
2025-08-10 19:09:58    courseName: '化學課',
2025-08-10 19:09:58    timeReference: 'today',
2025-08-10 19:09:58    content: '小明今天化學課的內容'
2025-08-10 19:09:58  }
2025-08-10 19:09:58  {"ts":"2025-08-10T19:09:58.998Z","lvl":"info","stage":"slots","traceId":"line_1754852997346_kdv1ow","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 19:09:58  🎯 執行任務: record_content
2025-08-10 19:09:58  📝 開始處理記錄課程內容任務: {
2025-08-10 19:09:58    studentName: '小明',
2025-08-10 19:09:58    courseName: '化學課',
2025-08-10 19:09:58    timeReference: 'today',
2025-08-10 19:09:58    content: '小明今天化學課的內容'
2025-08-10 19:09:58  }
2025-08-10 19:09:58  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 19:09:59  ❓ 未找到完全匹配的課程
2025-08-10 19:09:59  ✅ 文檔已添加到 course_contents: gqg4eQci92aPoTwhn8Pt
2025-08-10 19:09:59  ✅ 課程內容記錄已儲存: gqg4eQci92aPoTwhn8Pt
2025-08-10 19:09:59  📊 任務執行結果: {
2025-08-10 19:09:59    success: true,
2025-08-10 19:09:59    code: 'RECORD_CONTENT_OK',
2025-08-10 19:09:59    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 19:09:59      '📝 記錄為獨立內容\n' +
2025-08-10 19:09:59      '👨‍🎓 學生：小明\n' +
2025-08-10 19:09:59      '📚 課程：化學課\n' +
2025-08-10 19:09:59      '📅 日期：2025-08-10\n' +
2025-08-10 19:09:59      '💬 內容：小明今天化學課的內容',
2025-08-10 19:09:59    data: {
2025-08-10 19:09:59      recordId: 'gqg4eQci92aPoTwhn8Pt',
2025-08-10 19:09:59      courseId: null,
2025-08-10 19:09:59      targetDate: '2025-08-10'
2025-08-10 19:09:59    }
2025-08-10 19:09:59  }
2025-08-10 19:09:59  {"ts":"2025-08-10T19:09:59.249Z","lvl":"info","stage":"task","traceId":"line_1754852997346_kdv1ow","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":251}
2025-08-10 19:09:59  🔍 檢查 replyToken: test-reply-token-1754852997178
2025-08-10 19:09:59  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:09:59  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 19:09:59  📝 記錄為獨立內容
2025-08-10 19:09:59  👨‍🎓 學生：小明
2025-08-10 19:09:59  📚 課程：化學課
2025-08-10 19:09:59  📅 日期：2025-08-10
2025-08-10 19:09:59  💬 內容：小明今天化學課的內容
2025-08-10 19:09:59  {"ts":"2025-08-10T19:09:59.534Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754852997346_kdv1ow","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 19:10:12  📨 收到 1 個事件
2025-08-10 19:10:12  📋 事件類型: message
2025-08-10 19:10:12  🔍 完整事件 JSON: {
2025-08-10 19:10:12    "type": "message",
2025-08-10 19:10:12    "message": {
2025-08-10 19:10:12      "type": "text",
2025-08-10 19:10:12      "text": "提醒我小明的數學課"
2025-08-10 19:10:12    },
2025-08-10 19:10:12    "source": {
2025-08-10 19:10:12      "userId": "U_test_user_qa",
2025-08-10 19:10:12      "type": "user"
2025-08-10 19:10:12    },
2025-08-10 19:10:12    "replyToken": "test-reply-token-1754853012243",
2025-08-10 19:10:12    "timestamp": 1754853012243
2025-08-10 19:10:12  }
2025-08-10 19:10:12  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:10:12  {"ts":"2025-08-10T19:10:12.521Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853012521_y7k47a","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 19:10:12  🔍 用戶ID類型: string
2025-08-10 19:10:12  🔍 是否測試用戶: true
2025-08-10 19:10:12  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:10:12  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 19:10:12  ✅ 規則匹配成功: set_reminder
2025-08-10 19:10:12  {"ts":"2025-08-10T19:10:12.664Z","lvl":"info","stage":"nlp","traceId":"line_1754853012521_y7k47a","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:10:12  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:10:12  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:10:12  📊 規則提取置信度: 0.67
2025-08-10 19:10:12  🤖 啟用 AI 輔助提取...
2025-08-10 19:10:14  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:10:14  {"ts":"2025-08-10T19:10:14.527Z","lvl":"info","stage":"slots","traceId":"line_1754853012521_y7k47a","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:10:14  🎯 執行任務: set_reminder
2025-08-10 19:10:14  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 19:10:14  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 19:10:14  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 19:10:14  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 19:10:14  ✅ 提醒記錄已創建: QLa8m2larJy83gso0bvy
2025-08-10 19:10:14  ✅ 提醒設定成功: QLa8m2larJy83gso0bvy
2025-08-10 19:10:14  📊 任務執行結果: {
2025-08-10 19:10:14    success: true,
2025-08-10 19:10:14    code: 'REMINDER_SET_OK',
2025-08-10 19:10:14    message: '✅ 提醒設定完成！\n' +
2025-08-10 19:10:14      '📚 課程：小明 的 數學課\n' +
2025-08-10 19:10:14      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 19:10:14      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 19:10:14  }
2025-08-10 19:10:14  {"ts":"2025-08-10T19:10:14.821Z","lvl":"info","stage":"task","traceId":"line_1754853012521_y7k47a","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":294}
2025-08-10 19:10:15  🔍 檢查 replyToken: test-reply-token-1754853012243
2025-08-10 19:10:15  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:10:15  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 19:10:15  📚 課程：小明 的 數學課
2025-08-10 19:10:15  📅 上課時間：8/11 下午02:00
2025-08-10 19:10:15  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 19:10:15  {"ts":"2025-08-10T19:10:15.105Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853012521_y7k47a","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 19:10:27  📨 收到 1 個事件
2025-08-10 19:10:27  📋 事件類型: message
2025-08-10 19:10:27  🔍 完整事件 JSON: {
2025-08-10 19:10:27    "type": "message",
2025-08-10 19:10:27    "message": {
2025-08-10 19:10:27  📨 收到 1 個事件
2025-08-10 19:10:27  📋 事件類型: message
2025-08-10 19:10:27  🔍 完整事件 JSON: {
2025-08-10 19:10:27    "type": "message",
2025-08-10 19:10:27    "message": {
2025-08-10 19:10:27      "type": "text",
2025-08-10 19:10:27      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 19:10:27    },
2025-08-10 19:10:27    "source": {
2025-08-10 19:10:27      "userId": "U_test_user_qa",
2025-08-10 19:10:27      "type": "user"
2025-08-10 19:10:27    },
2025-08-10 19:10:27    "replyToken": "test-reply-token-1754853027808",
2025-08-10 19:10:27    "timestamp": 1754853027808
2025-08-10 19:10:27  }
2025-08-10 19:10:27  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:10:27  {"ts":"2025-08-10T19:10:27.977Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853027977_qzi2y6","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 19:10:27  🔍 用戶ID類型: string
2025-08-10 19:10:27  🔍 是否測試用戶: true
2025-08-10 19:10:27  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:10:27  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 19:10:28  ✅ 規則匹配成功: set_reminder
2025-08-10 19:10:28  {"ts":"2025-08-10T19:10:28.119Z","lvl":"info","stage":"nlp","traceId":"line_1754853027977_qzi2y6","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:10:28  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:10:28  📊 規則提取置信度: 0.67
2025-08-10 19:10:28  🤖 啟用 AI 輔助提取...
2025-08-10 19:10:29  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:10:29  {"ts":"2025-08-10T19:10:29.318Z","lvl":"info","stage":"slots","traceId":"line_1754853027977_qzi2y6","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 19:10:29  🎯 執行任務: set_reminder
2025-08-10 19:10:29  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 19:10:29  📊 任務執行結果: {
2025-08-10 19:10:29    success: false,
2025-08-10 19:10:29    code: 'MISSING_STUDENT',
2025-08-10 19:10:29    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 19:10:29  }
2025-08-10 19:10:29  {"ts":"2025-08-10T19:10:29.318Z","lvl":"info","stage":"task","traceId":"line_1754853027977_qzi2y6","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 19:10:29  🔍 檢查 replyToken: test-reply-token-1754853027808
2025-08-10 19:10:29  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:10:29  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 19:10:29  {"ts":"2025-08-10T19:10:29.604Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853027977_qzi2y6","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 19:10:42  📨 收到 1 個事件
2025-08-10 19:10:42  📋 事件類型: message
2025-08-10 19:10:42  🔍 完整事件 JSON: {
2025-08-10 19:10:42    "type": "message",
2025-08-10 19:10:42    "message": {
2025-08-10 19:10:42      "type": "text",
2025-08-10 19:10:42      "text": "提醒我小明的物理課"
2025-08-10 19:10:42    },
2025-08-10 19:10:42    "source": {
2025-08-10 19:10:42      "userId": "U_test_user_qa",
2025-08-10 19:10:42      "type": "user"
2025-08-10 19:10:42    },
2025-08-10 19:10:42    "replyToken": "test-reply-token-1754853042077",
2025-08-10 19:10:42    "timestamp": 1754853042077
2025-08-10 19:10:42  }
2025-08-10 19:10:42  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:10:42  {"ts":"2025-08-10T19:10:42.246Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853042246_rgpfbo","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 19:10:42  🔍 用戶ID類型: string
2025-08-10 19:10:42  🔍 是否測試用戶: true
2025-08-10 19:10:42  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:10:42  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 19:10:42  ✅ 規則匹配成功: set_reminder
2025-08-10 19:10:42  {"ts":"2025-08-10T19:10:42.388Z","lvl":"info","stage":"nlp","traceId":"line_1754853042246_rgpfbo","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 19:10:42  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 19:10:42  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:10:42  📊 規則提取置信度: 0.67
2025-08-10 19:10:42  🤖 啟用 AI 輔助提取...
2025-08-10 19:10:43  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:10:43  {"ts":"2025-08-10T19:10:43.783Z","lvl":"info","stage":"slots","traceId":"line_1754853042246_rgpfbo","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 19:10:43  🎯 執行任務: set_reminder
2025-08-10 19:10:43  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 19:10:43  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 19:10:43  📊 任務執行結果: {
2025-08-10 19:10:43    success: false,
2025-08-10 19:10:43    code: 'NOT_FOUND',
2025-08-10 19:10:43    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 19:10:43  }
2025-08-10 19:10:43  {"ts":"2025-08-10T19:10:43.855Z","lvl":"info","stage":"task","traceId":"line_1754853042246_rgpfbo","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":72}
2025-08-10 19:10:44  🔍 檢查 replyToken: test-reply-token-1754853042077
2025-08-10 19:10:44  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:10:44  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 19:10:44  {"ts":"2025-08-10T19:10:44.138Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853042246_rgpfbo","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 19:10:56  📨 收到 1 個事件
2025-08-10 19:10:56  📋 事件類型: message
2025-08-10 19:10:56  🔍 完整事件 JSON: {
2025-08-10 19:10:56    "type": "message",
2025-08-10 19:10:56    "message": {
2025-08-10 19:10:56      "type": "text",
2025-08-10 19:10:56      "text": "小明的數學課改到下午4點"
2025-08-10 19:10:56    },
2025-08-10 19:10:56    "source": {
2025-08-10 19:10:56      "userId": "U_test_user_qa",
2025-08-10 19:10:56      "type": "user"
2025-08-10 19:10:56    },
2025-08-10 19:10:56    "replyToken": "test-reply-token-1754853056765",
2025-08-10 19:10:56    "timestamp": 1754853056765
2025-08-10 19:10:56  }
2025-08-10 19:10:56  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:10:57  {"ts":"2025-08-10T19:10:57.031Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853057031_dhh1g4","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 19:10:57  🔍 用戶ID類型: string
2025-08-10 19:10:57  {"ts":"2025-08-10T19:10:57.031Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853057031_dhh1g4","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 19:10:57  🔍 用戶ID類型: string
2025-08-10 19:10:57  🔍 是否測試用戶: true
2025-08-10 19:10:57  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:10:57  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 19:10:57  ✅ 規則匹配成功: modify_course
2025-08-10 19:10:57  {"ts":"2025-08-10T19:10:57.173Z","lvl":"info","stage":"nlp","traceId":"line_1754853057031_dhh1g4","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 19:10:57  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 19:10:57  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 19:10:57  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:10:57  📊 規則提取置信度: 0.00
2025-08-10 19:10:57  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 19:10:58  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 19:10:58  {"ts":"2025-08-10T19:10:58.414Z","lvl":"info","stage":"slots","traceId":"line_1754853057031_dhh1g4","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 19:10:58  🎯 執行任務: modify_course
2025-08-10 19:10:58  ✏️ 執行修改操作任務: {
2025-08-10 19:10:58    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 19:10:58    userId: 'U_test_user_qa'
2025-08-10 19:10:58  }
2025-08-10 19:10:58  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 19:10:58  {"ts":"2025-08-10T19:10:58.485Z","lvl":"info","stage":"task","traceId":"line_1754853057031_dhh1g4","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 19:10:58  🔍 檢查 replyToken: test-reply-token-1754853056765
2025-08-10 19:10:58  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:10:58  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 19:10:58  {"ts":"2025-08-10T19:10:58.768Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853057031_dhh1g4","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 19:11:11  📨 收到 1 個事件
2025-08-10 19:11:11  📋 事件類型: message
2025-08-10 19:11:11  🔍 完整事件 JSON: {
2025-08-10 19:11:11    "type": "message",
2025-08-10 19:11:11    "message": {
2025-08-10 19:11:11      "type": "text",
2025-08-10 19:11:11      "text": "小明每天的晨練課改到早上7點"
2025-08-10 19:11:11    },
2025-08-10 19:11:11    "source": {
2025-08-10 19:11:11      "userId": "U_test_user_qa",
2025-08-10 19:11:11      "type": "user"
2025-08-10 19:11:11    },
2025-08-10 19:11:11    "replyToken": "test-reply-token-1754853071456",
2025-08-10 19:11:11    "timestamp": 1754853071456
2025-08-10 19:11:11  }
2025-08-10 19:11:11  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:11:11  {"ts":"2025-08-10T19:11:11.694Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853071694_k5c5vy","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 19:11:11  🔍 用戶ID類型: string
2025-08-10 19:11:11  🔍 是否測試用戶: true
2025-08-10 19:11:11  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:11:11  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 19:11:11  ✅ 規則匹配成功: create_recurring_course
2025-08-10 19:11:11  {"ts":"2025-08-10T19:11:11.836Z","lvl":"info","stage":"nlp","traceId":"line_1754853071694_k5c5vy","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 19:11:11  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 19:11:11  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 19:11:11  ✅ 時間解析成功: {
2025-08-10 19:11:11    input: '小明每天的晨練課改到早上7點',
2025-08-10 19:11:11    output: '07:00',
2025-08-10 19:11:11    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 19:11:11  }
2025-08-10 19:11:12  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:11:12  📊 規則提取置信度: 0.67
2025-08-10 19:11:12  🤖 啟用 AI 輔助提取...
2025-08-10 19:11:13  ✅ 最終 slots: {
2025-08-10 19:11:13    studentName: '小明',
2025-08-10 19:11:13    courseName: '晨練課',
2025-08-10 19:11:13    scheduleTime: '07:00',
2025-08-10 19:11:13    recurring: false
2025-08-10 19:11:13  }
2025-08-10 19:11:13  {"ts":"2025-08-10T19:11:13.746Z","lvl":"info","stage":"slots","traceId":"line_1754853071694_k5c5vy","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:13  🎯 執行任務: create_recurring_course
2025-08-10 19:11:13  🎯 開始處理新增課程任務
2025-08-10 19:11:13  📋 接收參數: {
2025-08-10 19:11:13    studentName: '小明',
2025-08-10 19:11:13    courseName: '晨練課',
2025-08-10 19:11:13    scheduleTime: '07:00',
2025-08-10 19:11:13    recurring: false
2025-08-10 19:11:13  }
2025-08-10 19:11:13  📊 任務執行結果: {
2025-08-10 19:11:13    success: false,
2025-08-10 19:11:13    code: 'MISSING_FIELDS',
2025-08-10 19:11:13    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 19:11:13    expectingInput: true,
2025-08-10 19:11:13    missingFields: [ '課程日期' ]
2025-08-10 19:11:13  }
2025-08-10 19:11:13  {"ts":"2025-08-10T19:11:13.888Z","lvl":"info","stage":"task","traceId":"line_1754853071694_k5c5vy","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 19:11:14  🔍 檢查 replyToken: test-reply-token-1754853071456
2025-08-10 19:11:14  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 19:11:14  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 19:11:14  
2025-08-10 19:11:14  範例：「小明每週三下午3點數學課」
2025-08-10 19:11:14  {"ts":"2025-08-10T19:11:14.173Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754853071694_k5c5vy","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 19:11:26  📨 收到 1 個事件
2025-08-10 19:11:26  📋 事件類型: message
2025-08-10 19:11:26  🔍 完整事件 JSON: {
2025-08-10 19:11:26    "type": "message",
2025-08-10 19:11:26    "message": {
2025-08-10 19:11:26      "type": "text",
2025-08-10 19:11:26      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 19:11:26    },
2025-08-10 19:11:26    "source": {
2025-08-10 19:11:26      "userId": "U_test_user_qa",
2025-08-10 19:11:26      "type": "user"
2025-08-10 19:11:26    },
2025-08-10 19:11:26    "replyToken": "test-reply-token-1754853086856",
2025-08-10 19:11:26  📨 收到 1 個事件
2025-08-10 19:11:26  📋 事件類型: message
2025-08-10 19:11:26  🔍 完整事件 JSON: {
2025-08-10 19:11:26    "type": "message",
2025-08-10 19:11:26    "message": {
2025-08-10 19:11:26      "type": "text",
2025-08-10 19:11:26      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 19:11:26    },
2025-08-10 19:11:26    "source": {
2025-08-10 19:11:26      "userId": "U_test_user_qa",
2025-08-10 19:11:26      "type": "user"
2025-08-10 19:11:26    },
2025-08-10 19:11:26    "replyToken": "test-reply-token-1754853086856",
2025-08-10 19:11:26    "timestamp": 1754853086856
2025-08-10 19:11:26  }
2025-08-10 19:11:26  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 19:11:27  {"ts":"2025-08-10T19:11:27.032Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 19:11:27  🔍 用戶ID類型: string
2025-08-10 19:11:27  🔍 是否測試用戶: true
2025-08-10 19:11:27  🚀 生產用戶，使用真實 LINE Service
2025-08-10 19:11:27  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 19:11:27  ✅ 規則匹配成功: create_recurring_course
2025-08-10 19:11:27  {"ts":"2025-08-10T19:11:27.177Z","lvl":"info","stage":"nlp","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 19:11:27  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 19:11:27  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 19:11:27  ✅ 時間解析成功: {
2025-08-10 19:11:27    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 19:11:27    output: '15:00',
2025-08-10 19:11:27    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 19:11:27  }
2025-08-10 19:11:27  🧠 使用對話上下文增強 slots 提取
2025-08-10 19:11:27  📊 規則提取置信度: 0.67
2025-08-10 19:11:27  🤖 啟用 AI 輔助提取...
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
2025-08-10 19:11:28  ✅ 最終 slots: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  {"ts":"2025-08-10T19:11:28.377Z","lvl":"info","stage":"slots","traceId":"line_1754853087032_46fh5w","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 19:11:28  🎯 執行任務: create_recurring_course
2025-08-10 19:11:28  🎯 開始處理新增課程任務
2025-08-10 19:11:28  📋 接收參數: {
2025-08-10 19:11:28    studentName: 'Lumi',
2025-08-10 19:11:28    courseName: '鋼琴課',
2025-08-10 19:11:28    scheduleTime: '15:00',
2025-08-10 19:11:28    recurring: true
2025-08-10 19:11:28  }
2025-08-10 19:11:28  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 19:11:28  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 19:11:28      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 19:11:28      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 19:11:28      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 19:11:28      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 19:11:28      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 19:11:28      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 19:11:28      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 19:11:28      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 19:11:28      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 19:11:28      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 19:11:28    config: {
2025-08-10 19:11:28      url: URL {
2025-08-10 19:11:28        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        origin: 'https://www.googleapis.com',
2025-08-10 19:11:28        protocol: 'https:',
2025-08-10 19:11:28        username: '',
2025-08-10 19:11:28        password: '',
2025-08-10 19:11:28        host: 'www.googleapis.com',
2025-08-10 19:11:28        hostname: 'www.googleapis.com',
2025-08-10 19:11:28        port: '',
2025-08-10 19:11:28        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 19:11:28        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 19:11:28        searchParams: URLSearchParams {
2025-08-10 19:11:28          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28          'singleEvents' => 'true',
2025-08-10 19:11:28          'orderBy' => 'startTime' },
2025-08-10 19:11:28        hash: ''
2025-08-10 19:11:28      },
2025-08-10 19:11:28      method: 'GET',
2025-08-10 19:11:28      apiVersion: '',
2025-08-10 19:11:28      userAgentDirectives: [ [Object] ],
2025-08-10 19:11:28      paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28      headers: Headers {
2025-08-10 19:11:28        'accept-encoding': 'gzip',
2025-08-10 19:11:28        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      params: {
2025-08-10 19:11:28        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 19:11:28        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 19:11:28        singleEvents: true,
2025-08-10 19:11:28        orderBy: 'startTime'
2025-08-10 19:11:28      },
2025-08-10 19:11:28      validateStatus: [Function (anonymous)],
2025-08-10 19:11:28      retry: true,
2025-08-10 19:11:28      responseType: 'unknown',
2025-08-10 19:11:28      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 19:11:28      retryConfig: {
2025-08-10 19:11:28        currentRetryAttempt: 0,
2025-08-10 19:11:28        retry: 3,
2025-08-10 19:11:28        httpMethodsToRetry: [Array],
2025-08-10 19:11:28        noResponseRetries: 2,
2025-08-10 19:11:28        retryDelayMultiplier: 2,
2025-08-10 19:11:28        timeOfFirstRequest: 1754853088758,
2025-08-10 19:11:28        totalTimeout: 9007199254740991,
2025-08-10 19:11:28        maxRetryDelay: 9007199254740991,
2025-08-10 19:11:28        statusCodesToRetry: [Array]
2025-08-10 19:11:28      }
2025-08-10 19:11:28    },
2025-08-10 19:11:28    response: Response {
2025-08-10 19:11:28      size: 0,
2025-08-10 19:11:28      data: { error: [Object] },
2025-08-10 19:11:28      config: {
2025-08-10 19:11:28        url: URL {},
2025-08-10 19:11:28        method: 'GET',
2025-08-10 19:11:28        apiVersion: '',
2025-08-10 19:11:28        userAgentDirectives: [Array],
2025-08-10 19:11:28        paramsSerializer: [Function (anonymous)],
2025-08-10 19:11:28        headers: Headers {
2025-08-10 19:11:28          'accept-encoding': 'gzip',
2025-08-10 19:11:28          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 19:11:28          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 19:11:28          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 19:11:28        },
2025-08-10 19:11:28        params: [Object],
2025-08-10 19:11:28        validateStatus: [Function (anonymous)],
2025-08-10 19:11:28        retry: true,
2025-08-10 19:11:28        responseType: 'unknown',
2025-08-10 19:11:28        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 19:11:28      },
2025-08-10 19:11:28      Symbol(Body internals): {
