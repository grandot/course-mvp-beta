2025-08-10 20:15:03  📨 收到 1 個事件
2025-08-10 20:15:03  📋 事件類型: message
2025-08-10 20:15:03  🔍 完整事件 JSON: {
2025-08-10 20:15:03    "type": "message",
2025-08-10 20:15:03    "message": {
2025-08-10 20:15:03      "type": "text",
2025-08-10 20:15:03      "text": "查詢Lumi的重複課程"
2025-08-10 20:15:03    },
2025-08-10 20:15:03    "source": {
2025-08-10 20:15:03      "userId": "U_test_user_qa",
2025-08-10 20:15:03      "type": "user"
2025-08-10 20:15:03    },
2025-08-10 20:15:03    "replyToken": "test-reply-token-1754856902897",
2025-08-10 20:15:03    "timestamp": 1754856902897
2025-08-10 20:15:03  }
2025-08-10 20:15:03  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:15:03  {"ts":"2025-08-10T20:15:03.120Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754856903120_ur8m79","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 20:15:03  🔍 用戶ID類型: string
2025-08-10 20:15:03  🔍 是否測試用戶: true
2025-08-10 20:15:03  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:15:03  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 20:15:03  ✅ 規則匹配成功: query_schedule
2025-08-10 20:15:03  {"ts":"2025-08-10T20:15:03.261Z","lvl":"info","stage":"nlp","traceId":"line_1754856903120_ur8m79","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 20:15:03  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 20:15:03  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:15:03  📊 規則提取置信度: 0.50
2025-08-10 20:15:03  🤖 啟用 AI 輔助提取...
2025-08-10 20:15:04  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:15:04  {"ts":"2025-08-10T20:15:04.457Z","lvl":"info","stage":"slots","traceId":"line_1754856903120_ur8m79","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 20:15:04  🎯 執行任務: query_schedule
2025-08-10 20:15:04  🎯 開始處理查詢課表任務
2025-08-10 20:15:04  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:15:04  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:15:04  📚 查詢到 330 筆課程資料
2025-08-10 20:15:04  📚 查詢到 0 筆課程
2025-08-10 20:15:04  📊 任務執行結果: {
2025-08-10 20:15:04    success: true,
2025-08-10 20:15:04    code: 'QUERY_OK_EMPTY',
2025-08-10 20:15:04    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 20:15:04      '\n' +
2025-08-10 20:15:04      '💡 您可以：\n' +
2025-08-10 20:15:04      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 20:15:04      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 20:15:04      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 20:15:04    data: {
2025-08-10 20:15:04      courseCount: 0,
2025-08-10 20:15:04      dateRange: {
2025-08-10 20:15:04        startDate: '2025-08-10',
2025-08-10 20:15:04        endDate: '2025-08-16',
2025-08-10 20:15:04        description: '本週'
2025-08-10 20:15:04      }
2025-08-10 20:15:04    }
2025-08-10 20:15:04  }
2025-08-10 20:15:04  {"ts":"2025-08-10T20:15:04.856Z","lvl":"info","stage":"task","traceId":"line_1754856903120_ur8m79","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":399}
2025-08-10 20:15:05  🔍 檢查 replyToken: test-reply-token-1754856902897
2025-08-10 20:15:05  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:15:05  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 20:15:05  
2025-08-10 20:15:05  💡 您可以：
2025-08-10 20:15:05  • 新增課程：「小明明天上午10點英文課」
2025-08-10 20:15:05  • 查詢其他時間：「小明下週的課表」
2025-08-10 20:15:05  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 20:15:05  {"ts":"2025-08-10T20:15:05.140Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754856903120_ur8m79","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 20:15:36  📨 收到 1 個事件
2025-08-10 20:15:36  📋 事件類型: message
2025-08-10 20:15:36  🔍 完整事件 JSON: {
2025-08-10 20:15:36    "type": "message",
2025-08-10 20:15:36    "message": {
2025-08-10 20:15:36      "type": "text",
2025-08-10 20:15:36      "text": "今天小明的數學課學了分數加減法"
2025-08-10 20:15:36    },
2025-08-10 20:15:36    "source": {
2025-08-10 20:15:36      "userId": "U_test_user_qa",
2025-08-10 20:15:36      "type": "user"
2025-08-10 20:15:36    },
2025-08-10 20:15:36    "replyToken": "test-reply-token-1754856935876",
2025-08-10 20:15:36    "timestamp": 1754856935877
2025-08-10 20:15:36  }
2025-08-10 20:15:36  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:15:36  {"ts":"2025-08-10T20:15:36.132Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754856936132_e47yfu","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 20:15:36  🔍 用戶ID類型: string
2025-08-10 20:15:36  🔍 是否測試用戶: true
2025-08-10 20:15:36  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:15:36  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 20:15:36  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:15:36  {"ts":"2025-08-10T20:15:36.281Z","lvl":"info","stage":"nlp","traceId":"line_1754856936132_e47yfu","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:15:36  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:15:36  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:15:36  📊 規則提取置信度: 1.00
2025-08-10 20:15:36  🤖 啟用 AI 輔助提取...
2025-08-10 20:15:38  ✅ 最終 slots: {
2025-08-10 20:15:38    studentName: '小明',
2025-08-10 20:15:38    courseName: '數學課',
2025-08-10 20:15:38    timeReference: 'today',
2025-08-10 20:15:38    content: '分數加減法'
2025-08-10 20:15:38  }
2025-08-10 20:15:38  {"ts":"2025-08-10T20:15:38.361Z","lvl":"info","stage":"slots","traceId":"line_1754856936132_e47yfu","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:15:38  🎯 執行任務: record_content
2025-08-10 20:15:38  📝 開始處理記錄課程內容任務: {
2025-08-10 20:15:38    studentName: '小明',
2025-08-10 20:15:38  ✅ 最終 slots: {
2025-08-10 20:15:38    studentName: '小明',
2025-08-10 20:15:38    courseName: '數學課',
2025-08-10 20:15:38    timeReference: 'today',
2025-08-10 20:15:38    content: '分數加減法'
2025-08-10 20:15:38  }
2025-08-10 20:15:38  {"ts":"2025-08-10T20:15:38.361Z","lvl":"info","stage":"slots","traceId":"line_1754856936132_e47yfu","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:15:38  🎯 執行任務: record_content
2025-08-10 20:15:38  📝 開始處理記錄課程內容任務: {
2025-08-10 20:15:38    studentName: '小明',
2025-08-10 20:15:38    courseName: '數學課',
2025-08-10 20:15:38    timeReference: 'today',
2025-08-10 20:15:38    content: '分數加減法'
2025-08-10 20:15:38  }
2025-08-10 20:15:38  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 20:15:38  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 20:15:38  ✅ 文檔已添加到 course_contents: UlJkzwjI3Gpaw8uUWO72
2025-08-10 20:15:38  ✅ 課程內容記錄已儲存: UlJkzwjI3Gpaw8uUWO72
2025-08-10 20:15:38  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 20:15:38  📊 任務執行結果: {
2025-08-10 20:15:38    success: true,
2025-08-10 20:15:38    code: 'RECORD_CONTENT_OK',
2025-08-10 20:15:38    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 20:15:38    data: {
2025-08-10 20:15:38      recordId: 'UlJkzwjI3Gpaw8uUWO72',
2025-08-10 20:15:38      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 20:15:38      targetDate: '2025-08-10'
2025-08-10 20:15:38    }
2025-08-10 20:15:38  }
2025-08-10 20:15:38  {"ts":"2025-08-10T20:15:38.704Z","lvl":"info","stage":"task","traceId":"line_1754856936132_e47yfu","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":343}
2025-08-10 20:15:38  🔍 檢查 replyToken: test-reply-token-1754856935876
2025-08-10 20:15:38  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:15:38  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:15:38  📚 課程：小明 - 數學課
2025-08-10 20:15:38  📅 日期：2025-08-10
2025-08-10 20:15:38  💬 內容：分數加減法
2025-08-10 20:15:38  {"ts":"2025-08-10T20:15:38.988Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754856936132_e47yfu","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 20:15:52  📨 收到 1 個事件
2025-08-10 20:15:52  📋 事件類型: message
2025-08-10 20:15:52  🔍 完整事件 JSON: {
2025-08-10 20:15:52    "type": "message",
2025-08-10 20:15:52    "message": {
2025-08-10 20:15:52      "type": "text",
2025-08-10 20:15:52      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 20:15:52    },
2025-08-10 20:15:52    "source": {
2025-08-10 20:15:52      "userId": "U_test_user_qa",
2025-08-10 20:15:52      "type": "user"
2025-08-10 20:15:52    },
2025-08-10 20:15:52    "replyToken": "test-reply-token-1754856951896",
2025-08-10 20:15:52    "timestamp": 1754856951896
2025-08-10 20:15:52  }
2025-08-10 20:15:52  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:15:52  {"ts":"2025-08-10T20:15:52.105Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754856952105_7d9lhl","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 20:15:52  🔍 用戶ID類型: string
2025-08-10 20:15:52  🔍 是否測試用戶: true
2025-08-10 20:15:52  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:15:52  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 20:15:52  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:15:52  {"ts":"2025-08-10T20:15:52.247Z","lvl":"info","stage":"nlp","traceId":"line_1754856952105_7d9lhl","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:15:52  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:15:52  📊 規則提取置信度: 0.33
2025-08-10 20:15:52  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 20:15:53  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:15:53  {"ts":"2025-08-10T20:15:53.801Z","lvl":"info","stage":"slots","traceId":"line_1754856952105_7d9lhl","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 20:15:53  🎯 執行任務: record_content
2025-08-10 20:15:53  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:15:53  ✅ 文檔已添加到 course_contents: tqEPuVg26rVGZgnJ43AJ
2025-08-10 20:15:53  ✅ 課程內容記錄已儲存: tqEPuVg26rVGZgnJ43AJ
2025-08-10 20:15:53  📊 任務執行結果: {
2025-08-10 20:15:53    success: true,
2025-08-10 20:15:53    code: 'RECORD_CONTENT_OK',
2025-08-10 20:15:53    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 20:15:53    data: {
2025-08-10 20:15:53      recordId: 'tqEPuVg26rVGZgnJ43AJ',
2025-08-10 20:15:53      courseId: null,
2025-08-10 20:15:53      targetDate: '2025-08-09'
2025-08-10 20:15:53    }
2025-08-10 20:15:53  }
2025-08-10 20:15:53  {"ts":"2025-08-10T20:15:53.886Z","lvl":"info","stage":"task","traceId":"line_1754856952105_7d9lhl","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":85}
2025-08-10 20:15:54  🔍 檢查 replyToken: test-reply-token-1754856951896
2025-08-10 20:15:54  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:15:54  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:15:54  📝 記錄為獨立內容
2025-08-10 20:15:54  📚 課程：鋼琴課
2025-08-10 20:15:54  📅 日期：2025-08-09
2025-08-10 20:15:54  💬 內容：練習了小星星
2025-08-10 20:15:54  {"ts":"2025-08-10T20:15:54.169Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754856952105_7d9lhl","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 20:16:08  📨 收到 1 個事件
2025-08-10 20:16:08  📋 事件類型: message
2025-08-10 20:16:08  🔍 完整事件 JSON: {
2025-08-10 20:16:08    "type": "message",
2025-08-10 20:16:08    "message": {
2025-08-10 20:16:08      "type": "text",
2025-08-10 20:16:08      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:16:08    },
2025-08-10 20:16:08    "source": {
2025-08-10 20:16:08      "userId": "U_test_user_qa",
2025-08-10 20:16:08      "type": "user"
2025-08-10 20:16:08    },
2025-08-10 20:16:08  📨 收到 1 個事件
2025-08-10 20:16:08  📋 事件類型: message
2025-08-10 20:16:08  🔍 完整事件 JSON: {
2025-08-10 20:16:08    "type": "message",
2025-08-10 20:16:08    "message": {
2025-08-10 20:16:08      "type": "text",
2025-08-10 20:16:08      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:16:08    },
2025-08-10 20:16:08    "source": {
2025-08-10 20:16:08      "userId": "U_test_user_qa",
2025-08-10 20:16:08      "type": "user"
2025-08-10 20:16:08    },
2025-08-10 20:16:08    "replyToken": "test-reply-token-1754856968202",
2025-08-10 20:16:08    "timestamp": 1754856968202
2025-08-10 20:16:08  }
2025-08-10 20:16:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:16:08  {"ts":"2025-08-10T20:16:08.419Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754856968419_4rlhl6","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 20:16:08  🔍 用戶ID類型: string
2025-08-10 20:16:08  🔍 是否測試用戶: true
2025-08-10 20:16:08  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:16:08  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 20:16:08  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:16:08  {"ts":"2025-08-10T20:16:08.561Z","lvl":"info","stage":"nlp","traceId":"line_1754856968419_4rlhl6","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:16:08  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:16:08  📊 規則提取置信度: 0.67
2025-08-10 20:16:08  🤖 啟用 AI 輔助提取...
2025-08-10 20:16:09  ✅ 最終 slots: {
2025-08-10 20:16:09    studentName: '小明',
2025-08-10 20:16:09    courseName: '數學課',
2025-08-10 20:16:09    timeReference: 'yesterday',
2025-08-10 20:16:09    content: '什麼？'
2025-08-10 20:16:09  }
2025-08-10 20:16:09  {"ts":"2025-08-10T20:16:09.843Z","lvl":"info","stage":"slots","traceId":"line_1754856968419_4rlhl6","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:16:09  🎯 執行任務: record_content
2025-08-10 20:16:09  📝 開始處理記錄課程內容任務: {
2025-08-10 20:16:09    studentName: '小明',
2025-08-10 20:16:09    courseName: '數學課',
2025-08-10 20:16:09    timeReference: 'yesterday',
2025-08-10 20:16:09    content: '什麼？'
2025-08-10 20:16:09  }
2025-08-10 20:16:09  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 20:16:10  ❓ 未找到完全匹配的課程
2025-08-10 20:16:10  ✅ 文檔已添加到 course_contents: V5kIRAdDvLqueeGwkjFQ
2025-08-10 20:16:10  ✅ 課程內容記錄已儲存: V5kIRAdDvLqueeGwkjFQ
2025-08-10 20:16:10  📊 任務執行結果: {
2025-08-10 20:16:10    success: true,
2025-08-10 20:16:10    code: 'RECORD_CONTENT_OK',
2025-08-10 20:16:10    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 20:16:10    data: {
2025-08-10 20:16:10      recordId: 'V5kIRAdDvLqueeGwkjFQ',
2025-08-10 20:16:10      courseId: null,
2025-08-10 20:16:10      targetDate: '2025-08-09'
2025-08-10 20:16:10    }
2025-08-10 20:16:10  }
2025-08-10 20:16:10  {"ts":"2025-08-10T20:16:10.147Z","lvl":"info","stage":"task","traceId":"line_1754856968419_4rlhl6","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":304}
2025-08-10 20:16:10  🔍 檢查 replyToken: test-reply-token-1754856968202
2025-08-10 20:16:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:16:10  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:16:10  📝 記錄為獨立內容
2025-08-10 20:16:10  👨‍🎓 學生：小明
2025-08-10 20:16:10  📚 課程：數學課
2025-08-10 20:16:10  📅 日期：2025-08-09
2025-08-10 20:16:10  💬 內容：什麼？
2025-08-10 20:16:10  {"ts":"2025-08-10T20:16:10.429Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754856968419_4rlhl6","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 20:16:17  📨 收到 1 個事件
2025-08-10 20:16:17  📋 事件類型: message
2025-08-10 20:16:17  🔍 完整事件 JSON: {
2025-08-10 20:16:17    "type": "message",
2025-08-10 20:16:17    "message": {
2025-08-10 20:16:17      "type": "text",
2025-08-10 20:16:17      "text": "記錄小明今天化學課的內容"
2025-08-10 20:16:17    },
2025-08-10 20:16:17    "source": {
2025-08-10 20:16:17      "userId": "U_test_user_qa",
2025-08-10 20:16:17      "type": "user"
2025-08-10 20:16:17    },
2025-08-10 20:16:17    "replyToken": "test-reply-token-1754856977382",
2025-08-10 20:16:17    "timestamp": 1754856977382
2025-08-10 20:16:17  }
2025-08-10 20:16:17  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:16:17  {"ts":"2025-08-10T20:16:17.599Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754856977599_8cvvgi","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 20:16:17  🔍 用戶ID類型: string
2025-08-10 20:16:17  🔍 是否測試用戶: true
2025-08-10 20:16:17  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:16:17  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 20:16:17  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:16:17  {"ts":"2025-08-10T20:16:17.740Z","lvl":"info","stage":"nlp","traceId":"line_1754856977599_8cvvgi","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:16:17  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:16:18  📊 規則提取置信度: 0.67
2025-08-10 20:16:18  🤖 啟用 AI 輔助提取...
2025-08-10 20:16:19  ✅ 最終 slots: {
2025-08-10 20:16:19    studentName: '小明',
2025-08-10 20:16:19    courseName: '化學課',
2025-08-10 20:16:19    timeReference: 'today',
2025-08-10 20:16:19    content: '小明今天化學課的內容'
2025-08-10 20:16:19  }
2025-08-10 20:16:19  {"ts":"2025-08-10T20:16:19.075Z","lvl":"info","stage":"slots","traceId":"line_1754856977599_8cvvgi","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:16:19  🎯 執行任務: record_content
2025-08-10 20:16:19  📝 開始處理記錄課程內容任務: {
2025-08-10 20:16:19    studentName: '小明',
2025-08-10 20:16:19  ✅ 最終 slots: {
2025-08-10 20:16:19    studentName: '小明',
2025-08-10 20:16:19    courseName: '化學課',
2025-08-10 20:16:19    timeReference: 'today',
2025-08-10 20:16:19    content: '小明今天化學課的內容'
2025-08-10 20:16:19  }
2025-08-10 20:16:19  {"ts":"2025-08-10T20:16:19.075Z","lvl":"info","stage":"slots","traceId":"line_1754856977599_8cvvgi","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:16:19  🎯 執行任務: record_content
2025-08-10 20:16:19  📝 開始處理記錄課程內容任務: {
2025-08-10 20:16:19    studentName: '小明',
2025-08-10 20:16:19    courseName: '化學課',
2025-08-10 20:16:19    timeReference: 'today',
2025-08-10 20:16:19    content: '小明今天化學課的內容'
2025-08-10 20:16:19  }
2025-08-10 20:16:19  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 20:16:19  ❓ 未找到完全匹配的課程
2025-08-10 20:16:19  ✅ 文檔已添加到 course_contents: TzYvhOxfeh6WPjcstijw
2025-08-10 20:16:19  ✅ 課程內容記錄已儲存: TzYvhOxfeh6WPjcstijw
2025-08-10 20:16:19  📊 任務執行結果: {
2025-08-10 20:16:19    success: true,
2025-08-10 20:16:19    code: 'RECORD_CONTENT_OK',
2025-08-10 20:16:19    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 20:16:19      '📝 記錄為獨立內容\n' +
2025-08-10 20:16:19      '👨‍🎓 學生：小明\n' +
2025-08-10 20:16:19      '📚 課程：化學課\n' +
2025-08-10 20:16:19      '📅 日期：2025-08-10\n' +
2025-08-10 20:16:19      '💬 內容：小明今天化學課的內容',
2025-08-10 20:16:19    data: {
2025-08-10 20:16:19      recordId: 'TzYvhOxfeh6WPjcstijw',
2025-08-10 20:16:19      courseId: null,
2025-08-10 20:16:19      targetDate: '2025-08-10'
2025-08-10 20:16:19    }
2025-08-10 20:16:19  }
2025-08-10 20:16:19  {"ts":"2025-08-10T20:16:19.285Z","lvl":"info","stage":"task","traceId":"line_1754856977599_8cvvgi","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":210}
2025-08-10 20:16:19  🔍 檢查 replyToken: test-reply-token-1754856977382
2025-08-10 20:16:19  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:16:19  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:16:19  📝 記錄為獨立內容
2025-08-10 20:16:19  👨‍🎓 學生：小明
2025-08-10 20:16:19  📚 課程：化學課
2025-08-10 20:16:19  📅 日期：2025-08-10
2025-08-10 20:16:19  💬 內容：小明今天化學課的內容
2025-08-10 20:16:19  {"ts":"2025-08-10T20:16:19.569Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754856977599_8cvvgi","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 20:16:32  📨 收到 1 個事件
2025-08-10 20:16:32  📋 事件類型: message
2025-08-10 20:16:32  🔍 完整事件 JSON: {
2025-08-10 20:16:32    "type": "message",
2025-08-10 20:16:32    "message": {
2025-08-10 20:16:32      "type": "text",
2025-08-10 20:16:32      "text": "提醒我小明的數學課"
2025-08-10 20:16:32    },
2025-08-10 20:16:32    "source": {
2025-08-10 20:16:32      "userId": "U_test_user_qa",
2025-08-10 20:16:32      "type": "user"
2025-08-10 20:16:32    },
2025-08-10 20:16:32    "replyToken": "test-reply-token-1754856992551",
2025-08-10 20:16:32    "timestamp": 1754856992551
2025-08-10 20:16:32  }
2025-08-10 20:16:32  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:16:32  {"ts":"2025-08-10T20:16:32.764Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754856992764_klrdlu","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 20:16:32  🔍 用戶ID類型: string
2025-08-10 20:16:32  🔍 是否測試用戶: true
2025-08-10 20:16:32  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:16:32  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 20:16:32  ✅ 規則匹配成功: set_reminder
2025-08-10 20:16:32  {"ts":"2025-08-10T20:16:32.907Z","lvl":"info","stage":"nlp","traceId":"line_1754856992764_klrdlu","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:16:33  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:16:33  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:16:33  📊 規則提取置信度: 0.67
2025-08-10 20:16:33  🤖 啟用 AI 輔助提取...
2025-08-10 20:16:34  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:16:34  {"ts":"2025-08-10T20:16:34.240Z","lvl":"info","stage":"slots","traceId":"line_1754856992764_klrdlu","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:16:34  🎯 執行任務: set_reminder
2025-08-10 20:16:34  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:16:34  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 20:16:34  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 20:16:34  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 20:16:34  ✅ 提醒記錄已創建: M8evbEPvllPVAbAcY7Rg
2025-08-10 20:16:34  ✅ 提醒設定成功: M8evbEPvllPVAbAcY7Rg
2025-08-10 20:16:34  📊 任務執行結果: {
2025-08-10 20:16:34    success: true,
2025-08-10 20:16:34    code: 'REMINDER_SET_OK',
2025-08-10 20:16:34    message: '✅ 提醒設定完成！\n' +
2025-08-10 20:16:34      '📚 課程：小明 的 數學課\n' +
2025-08-10 20:16:34      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 20:16:34      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 20:16:34  }
2025-08-10 20:16:34  {"ts":"2025-08-10T20:16:34.562Z","lvl":"info","stage":"task","traceId":"line_1754856992764_klrdlu","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":322}
2025-08-10 20:16:34  🔍 檢查 replyToken: test-reply-token-1754856992551
2025-08-10 20:16:34  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:16:34  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 20:16:34  📚 課程：小明 的 數學課
2025-08-10 20:16:34  📅 上課時間：8/11 下午02:00
2025-08-10 20:16:34  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 20:16:34  {"ts":"2025-08-10T20:16:34.845Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754856992764_klrdlu","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 20:16:47  📨 收到 1 個事件
2025-08-10 20:16:47  📋 事件類型: message
2025-08-10 20:16:47  🔍 完整事件 JSON: {
2025-08-10 20:16:47    "type": "message",
2025-08-10 20:16:47    "message": {
2025-08-10 20:16:47  📨 收到 1 個事件
2025-08-10 20:16:47  📋 事件類型: message
2025-08-10 20:16:47  🔍 完整事件 JSON: {
2025-08-10 20:16:47    "type": "message",
2025-08-10 20:16:47    "message": {
2025-08-10 20:16:47      "type": "text",
2025-08-10 20:16:47      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 20:16:47    },
2025-08-10 20:16:47    "source": {
2025-08-10 20:16:47      "userId": "U_test_user_qa",
2025-08-10 20:16:47      "type": "user"
2025-08-10 20:16:47    },
2025-08-10 20:16:47    "replyToken": "test-reply-token-1754857007282",
2025-08-10 20:16:47    "timestamp": 1754857007283
2025-08-10 20:16:47  }
2025-08-10 20:16:47  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:16:47  {"ts":"2025-08-10T20:16:47.604Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754857007604_71xfe6","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 20:16:47  🔍 用戶ID類型: string
2025-08-10 20:16:47  🔍 是否測試用戶: true
2025-08-10 20:16:47  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:16:47  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 20:16:47  ✅ 規則匹配成功: set_reminder
2025-08-10 20:16:47  {"ts":"2025-08-10T20:16:47.745Z","lvl":"info","stage":"nlp","traceId":"line_1754857007604_71xfe6","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:16:47  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:16:48  📊 規則提取置信度: 0.67
2025-08-10 20:16:48  🤖 啟用 AI 輔助提取...
2025-08-10 20:16:49  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 20:16:49  {"ts":"2025-08-10T20:16:49.253Z","lvl":"info","stage":"slots","traceId":"line_1754857007604_71xfe6","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 20:16:49  🎯 執行任務: set_reminder
2025-08-10 20:16:49  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 20:16:49  📊 任務執行結果: {
2025-08-10 20:16:49    success: false,
2025-08-10 20:16:49    code: 'MISSING_STUDENT',
2025-08-10 20:16:49    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 20:16:49  }
2025-08-10 20:16:49  {"ts":"2025-08-10T20:16:49.253Z","lvl":"info","stage":"task","traceId":"line_1754857007604_71xfe6","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 20:16:49  🔍 檢查 replyToken: test-reply-token-1754857007282
2025-08-10 20:16:49  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:16:49  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 20:16:49  {"ts":"2025-08-10T20:16:49.536Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754857007604_71xfe6","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 20:17:02  📨 收到 1 個事件
2025-08-10 20:17:02  📋 事件類型: message
2025-08-10 20:17:02  🔍 完整事件 JSON: {
2025-08-10 20:17:02    "type": "message",
2025-08-10 20:17:02    "message": {
2025-08-10 20:17:02      "type": "text",
2025-08-10 20:17:02      "text": "提醒我小明的物理課"
2025-08-10 20:17:02    },
2025-08-10 20:17:02    "source": {
2025-08-10 20:17:02      "userId": "U_test_user_qa",
2025-08-10 20:17:02      "type": "user"
2025-08-10 20:17:02    },
2025-08-10 20:17:02    "replyToken": "test-reply-token-1754857021877",
2025-08-10 20:17:02    "timestamp": 1754857021878
2025-08-10 20:17:02  }
2025-08-10 20:17:02  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:17:02  {"ts":"2025-08-10T20:17:02.269Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754857022269_bzs15q","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 20:17:02  🔍 用戶ID類型: string
2025-08-10 20:17:02  🔍 是否測試用戶: true
2025-08-10 20:17:02  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:17:02  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 20:17:02  ✅ 規則匹配成功: set_reminder
2025-08-10 20:17:02  {"ts":"2025-08-10T20:17:02.414Z","lvl":"info","stage":"nlp","traceId":"line_1754857022269_bzs15q","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:17:02  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:17:02  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:17:02  📊 規則提取置信度: 0.67
2025-08-10 20:17:02  🤖 啟用 AI 輔助提取...
2025-08-10 20:17:03  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:17:03  {"ts":"2025-08-10T20:17:03.682Z","lvl":"info","stage":"slots","traceId":"line_1754857022269_bzs15q","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:17:03  🎯 執行任務: set_reminder
2025-08-10 20:17:03  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:17:03  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 20:17:03  📊 任務執行結果: {
2025-08-10 20:17:03    success: false,
2025-08-10 20:17:03    code: 'NOT_FOUND',
2025-08-10 20:17:03    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 20:17:03  }
2025-08-10 20:17:03  {"ts":"2025-08-10T20:17:03.755Z","lvl":"info","stage":"task","traceId":"line_1754857022269_bzs15q","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":73}
2025-08-10 20:17:04  🔍 檢查 replyToken: test-reply-token-1754857021877
2025-08-10 20:17:04  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:17:04  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 20:17:04  {"ts":"2025-08-10T20:17:04.039Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754857022269_bzs15q","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 20:17:16  📨 收到 1 個事件
2025-08-10 20:17:16  📋 事件類型: message
2025-08-10 20:17:16  🔍 完整事件 JSON: {
2025-08-10 20:17:16    "type": "message",
2025-08-10 20:17:16    "message": {
2025-08-10 20:17:16      "type": "text",
2025-08-10 20:17:16      "text": "小明的數學課改到下午4點"
2025-08-10 20:17:16    },
2025-08-10 20:17:16    "source": {
2025-08-10 20:17:16      "userId": "U_test_user_qa",
2025-08-10 20:17:16      "type": "user"
2025-08-10 20:17:16    },
2025-08-10 20:17:16    "replyToken": "test-reply-token-1754857036424",
2025-08-10 20:17:16    "timestamp": 1754857036424
2025-08-10 20:17:16  }
2025-08-10 20:17:16  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:17:16  {"ts":"2025-08-10T20:17:16.636Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754857036636_v5fdgw","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 20:17:16  🔍 用戶ID類型: string
2025-08-10 20:17:16  📨 收到 1 個事件
2025-08-10 20:17:16  📋 事件類型: message
2025-08-10 20:17:16  🔍 完整事件 JSON: {
2025-08-10 20:17:16    "type": "message",
2025-08-10 20:17:16    "message": {
2025-08-10 20:17:16      "type": "text",
2025-08-10 20:17:16      "text": "小明的數學課改到下午4點"
2025-08-10 20:17:16    },
2025-08-10 20:17:16    "source": {
2025-08-10 20:17:16      "userId": "U_test_user_qa",
2025-08-10 20:17:16      "type": "user"
2025-08-10 20:17:16    },
2025-08-10 20:17:16    "replyToken": "test-reply-token-1754857036424",
2025-08-10 20:17:16    "timestamp": 1754857036424
2025-08-10 20:17:16  }
2025-08-10 20:17:16  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:17:16  {"ts":"2025-08-10T20:17:16.636Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754857036636_v5fdgw","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 20:17:16  🔍 用戶ID類型: string
2025-08-10 20:17:16  🔍 是否測試用戶: true
2025-08-10 20:17:16  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:17:16  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 20:17:16  ✅ 規則匹配成功: modify_course
2025-08-10 20:17:16  {"ts":"2025-08-10T20:17:16.778Z","lvl":"info","stage":"nlp","traceId":"line_1754857036636_v5fdgw","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 20:17:16  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 20:17:16  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 20:17:17  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:17:17  📊 規則提取置信度: 0.00
2025-08-10 20:17:17  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 20:17:18  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 20:17:18  {"ts":"2025-08-10T20:17:18.191Z","lvl":"info","stage":"slots","traceId":"line_1754857036636_v5fdgw","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 20:17:18  🎯 執行任務: modify_course
2025-08-10 20:17:18  ✏️ 執行修改操作任務: {
2025-08-10 20:17:18    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 20:17:18    userId: 'U_test_user_qa'
2025-08-10 20:17:18  }
2025-08-10 20:17:18  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 20:17:18  {"ts":"2025-08-10T20:17:18.262Z","lvl":"info","stage":"task","traceId":"line_1754857036636_v5fdgw","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 20:17:18  🔍 檢查 replyToken: test-reply-token-1754857036424
2025-08-10 20:17:18  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:17:18  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 20:17:18  {"ts":"2025-08-10T20:17:18.545Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754857036636_v5fdgw","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 20:17:31  📨 收到 1 個事件
2025-08-10 20:17:31  📋 事件類型: message
2025-08-10 20:17:31  🔍 完整事件 JSON: {
2025-08-10 20:17:31    "type": "message",
2025-08-10 20:17:31    "message": {
2025-08-10 20:17:31      "type": "text",
2025-08-10 20:17:31      "text": "小明每天的晨練課改到早上7點"
2025-08-10 20:17:31    },
2025-08-10 20:17:31    "source": {
2025-08-10 20:17:31      "userId": "U_test_user_qa",
2025-08-10 20:17:31      "type": "user"
2025-08-10 20:17:31    },
2025-08-10 20:17:31    "replyToken": "test-reply-token-1754857051165",
2025-08-10 20:17:31    "timestamp": 1754857051165
2025-08-10 20:17:31  }
2025-08-10 20:17:31  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:17:31  {"ts":"2025-08-10T20:17:31.395Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754857051395_48sa74","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 20:17:31  🔍 用戶ID類型: string
2025-08-10 20:17:31  🔍 是否測試用戶: true
2025-08-10 20:17:31  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:17:31  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 20:17:31  ✅ 規則匹配成功: create_recurring_course
2025-08-10 20:17:31  {"ts":"2025-08-10T20:17:31.536Z","lvl":"info","stage":"nlp","traceId":"line_1754857051395_48sa74","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 20:17:31  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 20:17:31  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 20:17:31  ✅ 時間解析成功: {
2025-08-10 20:17:31    input: '小明每天的晨練課改到早上7點',
2025-08-10 20:17:31    output: '07:00',
2025-08-10 20:17:31    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 20:17:31  }
2025-08-10 20:17:31  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:17:31  📊 規則提取置信度: 0.67
2025-08-10 20:17:31  🤖 啟用 AI 輔助提取...
2025-08-10 20:17:33  ✅ 最終 slots: {
2025-08-10 20:17:33    studentName: '小明',
2025-08-10 20:17:33    courseName: '晨練課',
2025-08-10 20:17:33    scheduleTime: '07:00',
2025-08-10 20:17:33    recurring: false
2025-08-10 20:17:33  }
2025-08-10 20:17:33  {"ts":"2025-08-10T20:17:33.001Z","lvl":"info","stage":"slots","traceId":"line_1754857051395_48sa74","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:33  🎯 執行任務: create_recurring_course
2025-08-10 20:17:33  🎯 開始處理新增課程任務
2025-08-10 20:17:33  📋 接收參數: {
2025-08-10 20:17:33    studentName: '小明',
2025-08-10 20:17:33    courseName: '晨練課',
2025-08-10 20:17:33    scheduleTime: '07:00',
2025-08-10 20:17:33    recurring: false
2025-08-10 20:17:33  }
2025-08-10 20:17:33  📊 任務執行結果: {
2025-08-10 20:17:33    success: false,
2025-08-10 20:17:33    code: 'MISSING_FIELDS',
2025-08-10 20:17:33    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 20:17:33    expectingInput: true,
2025-08-10 20:17:33    missingFields: [ '課程日期' ]
2025-08-10 20:17:33  }
2025-08-10 20:17:33  {"ts":"2025-08-10T20:17:33.143Z","lvl":"info","stage":"task","traceId":"line_1754857051395_48sa74","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 20:17:33  🔍 檢查 replyToken: test-reply-token-1754857051165
2025-08-10 20:17:33  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:17:33  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 20:17:33  ✅ 最終 slots: {
2025-08-10 20:17:33    studentName: '小明',
2025-08-10 20:17:33    courseName: '晨練課',
2025-08-10 20:17:33    scheduleTime: '07:00',
2025-08-10 20:17:33    recurring: false
2025-08-10 20:17:33  }
2025-08-10 20:17:33  {"ts":"2025-08-10T20:17:33.001Z","lvl":"info","stage":"slots","traceId":"line_1754857051395_48sa74","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:33  🎯 執行任務: create_recurring_course
2025-08-10 20:17:33  🎯 開始處理新增課程任務
2025-08-10 20:17:33  📋 接收參數: {
2025-08-10 20:17:33    studentName: '小明',
2025-08-10 20:17:33    courseName: '晨練課',
2025-08-10 20:17:33    scheduleTime: '07:00',
2025-08-10 20:17:33    recurring: false
2025-08-10 20:17:33  }
2025-08-10 20:17:33  📊 任務執行結果: {
2025-08-10 20:17:33    success: false,
2025-08-10 20:17:33    code: 'MISSING_FIELDS',
2025-08-10 20:17:33    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 20:17:33    expectingInput: true,
2025-08-10 20:17:33    missingFields: [ '課程日期' ]
2025-08-10 20:17:33  }
2025-08-10 20:17:33  {"ts":"2025-08-10T20:17:33.143Z","lvl":"info","stage":"task","traceId":"line_1754857051395_48sa74","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 20:17:33  🔍 檢查 replyToken: test-reply-token-1754857051165
2025-08-10 20:17:33  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:17:33  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 20:17:33  
2025-08-10 20:17:33  範例：「小明每週三下午3點數學課」
2025-08-10 20:17:33  {"ts":"2025-08-10T20:17:33.427Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754857051395_48sa74","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 20:17:45  📨 收到 1 個事件
2025-08-10 20:17:45  📋 事件類型: message
2025-08-10 20:17:45  🔍 完整事件 JSON: {
2025-08-10 20:17:45    "type": "message",
2025-08-10 20:17:45    "message": {
2025-08-10 20:17:45      "type": "text",
2025-08-10 20:17:45      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 20:17:45    },
2025-08-10 20:17:45    "source": {
2025-08-10 20:17:45      "userId": "U_test_user_qa",
2025-08-10 20:17:45      "type": "user"
2025-08-10 20:17:45    },
2025-08-10 20:17:45    "replyToken": "test-reply-token-1754857065770",
2025-08-10 20:17:45    "timestamp": 1754857065770
2025-08-10 20:17:45  }
2025-08-10 20:17:45  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:17:45  {"ts":"2025-08-10T20:17:45.991Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 20:17:45  🔍 用戶ID類型: string
2025-08-10 20:17:45  🔍 是否測試用戶: true
2025-08-10 20:17:45  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:17:45  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 20:17:46  ✅ 規則匹配成功: create_recurring_course
2025-08-10 20:17:46  {"ts":"2025-08-10T20:17:46.132Z","lvl":"info","stage":"nlp","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 20:17:46  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 20:17:46  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 20:17:46  ✅ 時間解析成功: {
2025-08-10 20:17:46    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 20:17:46    output: '15:00',
2025-08-10 20:17:46    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 20:17:46  }
2025-08-10 20:17:46  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:17:46  📊 規則提取置信度: 0.67
2025-08-10 20:17:46  🤖 啟用 AI 輔助提取...
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
2025-08-10 20:17:47  ✅ 最終 slots: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  {"ts":"2025-08-10T20:17:47.584Z","lvl":"info","stage":"slots","traceId":"line_1754857065991_vq8j9l","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:17:47  🎯 執行任務: create_recurring_course
2025-08-10 20:17:47  🎯 開始處理新增課程任務
2025-08-10 20:17:47  📋 接收參數: {
2025-08-10 20:17:47    studentName: 'Lumi',
2025-08-10 20:17:47    courseName: '鋼琴課',
2025-08-10 20:17:47    scheduleTime: '15:00',
2025-08-10 20:17:47    recurring: true
2025-08-10 20:17:47  }
2025-08-10 20:17:47  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:17:47  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:17:47      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:17:47      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:17:47      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:17:47      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:17:47      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:17:47      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:17:47      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:17:47      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:17:47      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:17:47      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:17:47    config: {
2025-08-10 20:17:47      url: URL {
2025-08-10 20:17:47        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        origin: 'https://www.googleapis.com',
2025-08-10 20:17:47        protocol: 'https:',
2025-08-10 20:17:47        username: '',
2025-08-10 20:17:47        password: '',
2025-08-10 20:17:47        host: 'www.googleapis.com',
2025-08-10 20:17:47        hostname: 'www.googleapis.com',
2025-08-10 20:17:47        port: '',
2025-08-10 20:17:47        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:17:47        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:17:47        searchParams: URLSearchParams {
2025-08-10 20:17:47          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47          'singleEvents' => 'true',
2025-08-10 20:17:47          'orderBy' => 'startTime' },
2025-08-10 20:17:47        hash: ''
2025-08-10 20:17:47      },
2025-08-10 20:17:47      method: 'GET',
2025-08-10 20:17:47      apiVersion: '',
2025-08-10 20:17:47      userAgentDirectives: [ [Object] ],
2025-08-10 20:17:47      paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47      headers: Headers {
2025-08-10 20:17:47        'accept-encoding': 'gzip',
2025-08-10 20:17:47        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      params: {
2025-08-10 20:17:47        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:17:47        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:17:47        singleEvents: true,
2025-08-10 20:17:47        orderBy: 'startTime'
2025-08-10 20:17:47      },
2025-08-10 20:17:47      validateStatus: [Function (anonymous)],
2025-08-10 20:17:47      retry: true,
2025-08-10 20:17:47      responseType: 'unknown',
2025-08-10 20:17:47      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:17:47      retryConfig: {
2025-08-10 20:17:47        currentRetryAttempt: 0,
2025-08-10 20:17:47        retry: 3,
2025-08-10 20:17:47        httpMethodsToRetry: [Array],
2025-08-10 20:17:47        noResponseRetries: 2,
2025-08-10 20:17:47        retryDelayMultiplier: 2,
2025-08-10 20:17:47        timeOfFirstRequest: 1754857067975,
2025-08-10 20:17:47        totalTimeout: 9007199254740991,
2025-08-10 20:17:47        maxRetryDelay: 9007199254740991,
2025-08-10 20:17:47        statusCodesToRetry: [Array]
2025-08-10 20:17:47      }
2025-08-10 20:17:47    },
2025-08-10 20:17:47    response: Response {
2025-08-10 20:17:47      size: 0,
2025-08-10 20:17:47      data: { error: [Object] },
2025-08-10 20:17:47      config: {
2025-08-10 20:17:47        url: URL {},
2025-08-10 20:17:47        method: 'GET',
2025-08-10 20:17:47        apiVersion: '',
2025-08-10 20:17:47        userAgentDirectives: [Array],
2025-08-10 20:17:47        paramsSerializer: [Function (anonymous)],
2025-08-10 20:17:47        headers: Headers {
2025-08-10 20:17:47          'accept-encoding': 'gzip',
2025-08-10 20:17:47          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:17:47          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:17:47          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:17:47        },
2025-08-10 20:17:47        params: [Object],
2025-08-10 20:17:47        validateStatus: [Function (anonymous)],
2025-08-10 20:17:47        retry: true,
2025-08-10 20:17:47        responseType: 'unknown',
2025-08-10 20:17:47        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:17:47      },
2025-08-10 20:17:47      Symbol(Body internals): {
