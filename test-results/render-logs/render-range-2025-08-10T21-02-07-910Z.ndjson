2025-08-10 20:47:12  📨 收到 1 個事件
2025-08-10 20:47:12  📋 事件類型: message
2025-08-10 20:47:12  🔍 完整事件 JSON: {
2025-08-10 20:47:12    "type": "message",
2025-08-10 20:47:12    "message": {
2025-08-10 20:47:12      "type": "text",
2025-08-10 20:47:12      "text": "小明的晨練課每天幾點？"
2025-08-10 20:47:12    },
2025-08-10 20:47:12    "source": {
2025-08-10 20:47:12      "userId": "U_test_user_qa",
2025-08-10 20:47:12      "type": "user"
2025-08-10 20:47:12    },
2025-08-10 20:47:12    "replyToken": "test-reply-token-1754858832070",
2025-08-10 20:47:12    "timestamp": 1754858832070
2025-08-10 20:47:12  }
2025-08-10 20:47:12  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:47:12  {"ts":"2025-08-10T20:47:12.253Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858832253_ob1e3e","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 20:47:12  🔍 用戶ID類型: string
2025-08-10 20:47:12  🔍 是否測試用戶: true
2025-08-10 20:47:12  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:47:12  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 20:47:12  🤖 啟用 AI 備援識別...
2025-08-10 20:47:13  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 20:47:13  {"ts":"2025-08-10T20:47:13.123Z","lvl":"info","stage":"nlp","traceId":"line_1754858832253_ob1e3e","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 20:47:13  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 20:47:13  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:47:13  📊 規則提取置信度: 0.50
2025-08-10 20:47:13  🤖 啟用 AI 輔助提取...
2025-08-10 20:47:15  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:47:15  {"ts":"2025-08-10T20:47:15.203Z","lvl":"info","stage":"slots","traceId":"line_1754858832253_ob1e3e","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 20:47:15  🎯 執行任務: query_schedule
2025-08-10 20:47:15  🎯 開始處理查詢課表任務
2025-08-10 20:47:15  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:47:15  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:47:15  📚 查詢到 340 筆課程資料
2025-08-10 20:47:15  📚 查詢到 14 筆課程
2025-08-10 20:47:15  📊 任務執行結果: {
2025-08-10 20:47:15    success: true,
2025-08-10 20:47:15    code: 'QUERY_OK',
2025-08-10 20:47:15    message: '📅 小明本週的課程安排\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/9 (週六)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/10 (週日)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/11 (週一)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/12 (週二)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/13 (週三)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/14 (週四)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/15 (週五)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄',
2025-08-10 20:47:15    data: {
2025-08-10 20:47:15      courses: [
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object]
2025-08-10 20:47:15      ],
2025-08-10 20:47:15      courseCount: 14,
2025-08-10 20:47:15      dateRange: {
2025-08-10 20:47:15        startDate: '2025-08-10',
2025-08-10 20:47:15        endDate: '2025-08-16',
2025-08-10 20:47:15        description: '本週'
2025-08-10 20:47:15      }
2025-08-10 20:47:15    }
2025-08-10 20:47:15  }
2025-08-10 20:47:15  {"ts":"2025-08-10T20:47:15.567Z","lvl":"info","stage":"task","traceId":"line_1754858832253_ob1e3e","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":364}
2025-08-10 20:47:15  🔍 檢查 replyToken: test-reply-token-1754858832070
2025-08-10 20:47:15  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:47:15  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/9 (週六)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/10 (週日)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/11 (週一)
2025-08-10 20:47:15  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:47:15  {"ts":"2025-08-10T20:47:15.203Z","lvl":"info","stage":"slots","traceId":"line_1754858832253_ob1e3e","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 20:47:15  🎯 執行任務: query_schedule
2025-08-10 20:47:15  🎯 開始處理查詢課表任務
2025-08-10 20:47:15  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:47:15  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:47:15  📚 查詢到 340 筆課程資料
2025-08-10 20:47:15  📚 查詢到 14 筆課程
2025-08-10 20:47:15  📊 任務執行結果: {
2025-08-10 20:47:15    success: true,
2025-08-10 20:47:15    code: 'QUERY_OK',
2025-08-10 20:47:15    message: '📅 小明本週的課程安排\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/9 (週六)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/10 (週日)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/11 (週一)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/12 (週二)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/13 (週三)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/14 (週四)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '\n' +
2025-08-10 20:47:15      '📆 8/15 (週五)\n' +
2025-08-10 20:47:15      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:47:15      '  上午8:00 - 晨練課 🔄',
2025-08-10 20:47:15    data: {
2025-08-10 20:47:15      courses: [
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object],
2025-08-10 20:47:15        [Object], [Object]
2025-08-10 20:47:15      ],
2025-08-10 20:47:15      courseCount: 14,
2025-08-10 20:47:15      dateRange: {
2025-08-10 20:47:15        startDate: '2025-08-10',
2025-08-10 20:47:15        endDate: '2025-08-16',
2025-08-10 20:47:15        description: '本週'
2025-08-10 20:47:15      }
2025-08-10 20:47:15    }
2025-08-10 20:47:15  }
2025-08-10 20:47:15  {"ts":"2025-08-10T20:47:15.567Z","lvl":"info","stage":"task","traceId":"line_1754858832253_ob1e3e","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":364}
2025-08-10 20:47:15  🔍 檢查 replyToken: test-reply-token-1754858832070
2025-08-10 20:47:15  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:47:15  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/9 (週六)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/10 (週日)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/11 (週一)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/12 (週二)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/13 (週三)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/14 (週四)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  
2025-08-10 20:47:15  📆 8/15 (週五)
2025-08-10 20:47:15    上午7:00 - 晨練課 🔄
2025-08-10 20:47:15    上午8:00 - 晨練課 🔄
2025-08-10 20:47:15  {"ts":"2025-08-10T20:47:15.851Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858832253_ob1e3e","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 20:47:28  📨 收到 1 個事件
2025-08-10 20:47:28  📋 事件類型: message
2025-08-10 20:47:28  🔍 完整事件 JSON: {
2025-08-10 20:47:28    "type": "message",
2025-08-10 20:47:28    "message": {
2025-08-10 20:47:28      "type": "text",
2025-08-10 20:47:28      "text": "查詢Lumi的重複課程"
2025-08-10 20:47:28    },
2025-08-10 20:47:28    "source": {
2025-08-10 20:47:28  📨 收到 1 個事件
2025-08-10 20:47:28  📋 事件類型: message
2025-08-10 20:47:28  🔍 完整事件 JSON: {
2025-08-10 20:47:28    "type": "message",
2025-08-10 20:47:28    "message": {
2025-08-10 20:47:28      "type": "text",
2025-08-10 20:47:28      "text": "查詢Lumi的重複課程"
2025-08-10 20:47:28    },
2025-08-10 20:47:28    "source": {
2025-08-10 20:47:28      "userId": "U_test_user_qa",
2025-08-10 20:47:28      "type": "user"
2025-08-10 20:47:28    },
2025-08-10 20:47:28    "replyToken": "test-reply-token-1754858848333",
2025-08-10 20:47:28    "timestamp": 1754858848333
2025-08-10 20:47:28  }
2025-08-10 20:47:28  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:47:28  {"ts":"2025-08-10T20:47:28.515Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858848515_g5h6j6","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 20:47:28  🔍 用戶ID類型: string
2025-08-10 20:47:28  🔍 是否測試用戶: true
2025-08-10 20:47:28  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:47:28  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 20:47:28  ✅ 規則匹配成功: query_schedule
2025-08-10 20:47:28  {"ts":"2025-08-10T20:47:28.657Z","lvl":"info","stage":"nlp","traceId":"line_1754858848515_g5h6j6","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 20:47:28  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 20:47:28  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:47:28  📊 規則提取置信度: 0.50
2025-08-10 20:47:28  🤖 啟用 AI 輔助提取...
2025-08-10 20:47:29  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:47:29  {"ts":"2025-08-10T20:47:29.934Z","lvl":"info","stage":"slots","traceId":"line_1754858848515_g5h6j6","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 20:47:29  🎯 執行任務: query_schedule
2025-08-10 20:47:29  🎯 開始處理查詢課表任務
2025-08-10 20:47:29  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:47:29  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:47:30  📚 查詢到 333 筆課程資料
2025-08-10 20:47:30  📚 查詢到 0 筆課程
2025-08-10 20:47:30  📊 任務執行結果: {
2025-08-10 20:47:30    success: true,
2025-08-10 20:47:30    code: 'QUERY_OK_EMPTY',
2025-08-10 20:47:30    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 20:47:30      '\n' +
2025-08-10 20:47:30      '💡 您可以：\n' +
2025-08-10 20:47:30      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 20:47:30      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 20:47:30      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 20:47:30    data: {
2025-08-10 20:47:30      courseCount: 0,
2025-08-10 20:47:30      dateRange: {
2025-08-10 20:47:30        startDate: '2025-08-10',
2025-08-10 20:47:30        endDate: '2025-08-16',
2025-08-10 20:47:30        description: '本週'
2025-08-10 20:47:30      }
2025-08-10 20:47:30    }
2025-08-10 20:47:30  }
2025-08-10 20:47:30  {"ts":"2025-08-10T20:47:30.208Z","lvl":"info","stage":"task","traceId":"line_1754858848515_g5h6j6","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":274}
2025-08-10 20:47:30  🔍 檢查 replyToken: test-reply-token-1754858848333
2025-08-10 20:47:30  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:47:30  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 20:47:30  
2025-08-10 20:47:30  💡 您可以：
2025-08-10 20:47:30  • 新增課程：「小明明天上午10點英文課」
2025-08-10 20:47:30  • 查詢其他時間：「小明下週的課表」
2025-08-10 20:47:30  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 20:47:30  {"ts":"2025-08-10T20:47:30.497Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858848515_g5h6j6","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 20:47:43  📨 收到 1 個事件
2025-08-10 20:47:43  📋 事件類型: message
2025-08-10 20:47:43  🔍 完整事件 JSON: {
2025-08-10 20:47:43    "type": "message",
2025-08-10 20:47:43    "message": {
2025-08-10 20:47:43      "type": "text",
2025-08-10 20:47:43      "text": "今天小明的數學課學了分數加減法"
2025-08-10 20:47:43    },
2025-08-10 20:47:43    "source": {
2025-08-10 20:47:43      "userId": "U_test_user_qa",
2025-08-10 20:47:43      "type": "user"
2025-08-10 20:47:43    },
2025-08-10 20:47:43    "replyToken": "test-reply-token-1754858863155",
2025-08-10 20:47:43    "timestamp": 1754858863155
2025-08-10 20:47:43  }
2025-08-10 20:47:43  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:47:43  {"ts":"2025-08-10T20:47:43.333Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858863333_y202ji","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 20:47:43  🔍 用戶ID類型: string
2025-08-10 20:47:43  🔍 是否測試用戶: true
2025-08-10 20:47:43  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:47:43  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 20:47:43  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:47:43  {"ts":"2025-08-10T20:47:43.474Z","lvl":"info","stage":"nlp","traceId":"line_1754858863333_y202ji","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:47:43  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:47:43  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:47:43  📊 規則提取置信度: 1.00
2025-08-10 20:47:43  🤖 啟用 AI 輔助提取...
2025-08-10 20:47:45  ✅ 最終 slots: {
2025-08-10 20:47:45    studentName: '小明',
2025-08-10 20:47:45    courseName: '數學課',
2025-08-10 20:47:45    timeReference: 'today',
2025-08-10 20:47:45    content: '分數加減法'
2025-08-10 20:47:45  }
2025-08-10 20:47:45  {"ts":"2025-08-10T20:47:45.229Z","lvl":"info","stage":"slots","traceId":"line_1754858863333_y202ji","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:47:45  🎯 執行任務: record_content
2025-08-10 20:47:45  📝 開始處理記錄課程內容任務: {
2025-08-10 20:47:45    studentName: '小明',
2025-08-10 20:47:45  ✅ 最終 slots: {
2025-08-10 20:47:45    studentName: '小明',
2025-08-10 20:47:45    courseName: '數學課',
2025-08-10 20:47:45    timeReference: 'today',
2025-08-10 20:47:45    content: '分數加減法'
2025-08-10 20:47:45  }
2025-08-10 20:47:45  {"ts":"2025-08-10T20:47:45.229Z","lvl":"info","stage":"slots","traceId":"line_1754858863333_y202ji","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:47:45  🎯 執行任務: record_content
2025-08-10 20:47:45  📝 開始處理記錄課程內容任務: {
2025-08-10 20:47:45    studentName: '小明',
2025-08-10 20:47:45    courseName: '數學課',
2025-08-10 20:47:45    timeReference: 'today',
2025-08-10 20:47:45    content: '分數加減法'
2025-08-10 20:47:45  }
2025-08-10 20:47:45  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 20:47:45  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 20:47:45  ✅ 文檔已添加到 course_contents: V3OK1H1QjIogEeNjVZHv
2025-08-10 20:47:45  ✅ 課程內容記錄已儲存: V3OK1H1QjIogEeNjVZHv
2025-08-10 20:47:45  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 20:47:45  📊 任務執行結果: {
2025-08-10 20:47:45    success: true,
2025-08-10 20:47:45    code: 'RECORD_CONTENT_OK',
2025-08-10 20:47:45    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 20:47:45    data: {
2025-08-10 20:47:45      recordId: 'V3OK1H1QjIogEeNjVZHv',
2025-08-10 20:47:45      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 20:47:45      targetDate: '2025-08-10'
2025-08-10 20:47:45    }
2025-08-10 20:47:45  }
2025-08-10 20:47:45  {"ts":"2025-08-10T20:47:45.651Z","lvl":"info","stage":"task","traceId":"line_1754858863333_y202ji","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":422}
2025-08-10 20:47:45  🔍 檢查 replyToken: test-reply-token-1754858863155
2025-08-10 20:47:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:47:45  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:47:45  📚 課程：小明 - 數學課
2025-08-10 20:47:45  📅 日期：2025-08-10
2025-08-10 20:47:45  💬 內容：分數加減法
2025-08-10 20:47:45  {"ts":"2025-08-10T20:47:45.934Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858863333_y202ji","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 20:47:58  📨 收到 1 個事件
2025-08-10 20:47:58  📋 事件類型: message
2025-08-10 20:47:58  🔍 完整事件 JSON: {
2025-08-10 20:47:58    "type": "message",
2025-08-10 20:47:58    "message": {
2025-08-10 20:47:58      "type": "text",
2025-08-10 20:47:58      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 20:47:58    },
2025-08-10 20:47:58    "source": {
2025-08-10 20:47:58      "userId": "U_test_user_qa",
2025-08-10 20:47:58      "type": "user"
2025-08-10 20:47:58    },
2025-08-10 20:47:58    "replyToken": "test-reply-token-1754858878334",
2025-08-10 20:47:58    "timestamp": 1754858878334
2025-08-10 20:47:58  }
2025-08-10 20:47:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:47:58  {"ts":"2025-08-10T20:47:58.508Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858878508_s2iwu1","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 20:47:58  🔍 用戶ID類型: string
2025-08-10 20:47:58  🔍 是否測試用戶: true
2025-08-10 20:47:58  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:47:58  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 20:47:58  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:47:58  {"ts":"2025-08-10T20:47:58.649Z","lvl":"info","stage":"nlp","traceId":"line_1754858878508_s2iwu1","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:47:58  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:47:58  📊 規則提取置信度: 0.33
2025-08-10 20:47:58  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 20:48:00  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:48:00  {"ts":"2025-08-10T20:48:00.294Z","lvl":"info","stage":"slots","traceId":"line_1754858878508_s2iwu1","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 20:48:00  🎯 執行任務: record_content
2025-08-10 20:48:00  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:48:00  ✅ 文檔已添加到 course_contents: zq5DD1JlKUkScTvFq0as
2025-08-10 20:48:00  ✅ 課程內容記錄已儲存: zq5DD1JlKUkScTvFq0as
2025-08-10 20:48:00  📊 任務執行結果: {
2025-08-10 20:48:00    success: true,
2025-08-10 20:48:00    code: 'RECORD_CONTENT_OK',
2025-08-10 20:48:00    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 20:48:00    data: {
2025-08-10 20:48:00      recordId: 'zq5DD1JlKUkScTvFq0as',
2025-08-10 20:48:00      courseId: null,
2025-08-10 20:48:00      targetDate: '2025-08-09'
2025-08-10 20:48:00    }
2025-08-10 20:48:00  }
2025-08-10 20:48:00  {"ts":"2025-08-10T20:48:00.378Z","lvl":"info","stage":"task","traceId":"line_1754858878508_s2iwu1","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":84}
2025-08-10 20:48:00  🔍 檢查 replyToken: test-reply-token-1754858878334
2025-08-10 20:48:00  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:48:00  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:48:00  📝 記錄為獨立內容
2025-08-10 20:48:00  📚 課程：鋼琴課
2025-08-10 20:48:00  📅 日期：2025-08-09
2025-08-10 20:48:00  💬 內容：練習了小星星
2025-08-10 20:48:00  {"ts":"2025-08-10T20:48:00.660Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858878508_s2iwu1","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 20:48:13  📨 收到 1 個事件
2025-08-10 20:48:13  📋 事件類型: message
2025-08-10 20:48:13  🔍 完整事件 JSON: {
2025-08-10 20:48:13    "type": "message",
2025-08-10 20:48:13    "message": {
2025-08-10 20:48:13      "type": "text",
2025-08-10 20:48:13      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:48:13    },
2025-08-10 20:48:13    "source": {
2025-08-10 20:48:13      "userId": "U_test_user_qa",
2025-08-10 20:48:13      "type": "user"
2025-08-10 20:48:13    },
2025-08-10 20:48:13  📨 收到 1 個事件
2025-08-10 20:48:13  📋 事件類型: message
2025-08-10 20:48:13  🔍 完整事件 JSON: {
2025-08-10 20:48:13    "type": "message",
2025-08-10 20:48:13    "message": {
2025-08-10 20:48:13      "type": "text",
2025-08-10 20:48:13      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:48:13    },
2025-08-10 20:48:13    "source": {
2025-08-10 20:48:13      "userId": "U_test_user_qa",
2025-08-10 20:48:13      "type": "user"
2025-08-10 20:48:13    },
2025-08-10 20:48:13    "replyToken": "test-reply-token-1754858893373",
2025-08-10 20:48:13    "timestamp": 1754858893373
2025-08-10 20:48:13  }
2025-08-10 20:48:13  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:48:13  {"ts":"2025-08-10T20:48:13.663Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858893663_rchc7q","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 20:48:13  🔍 用戶ID類型: string
2025-08-10 20:48:13  🔍 是否測試用戶: true
2025-08-10 20:48:13  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:48:13  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 20:48:13  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:48:13  {"ts":"2025-08-10T20:48:13.805Z","lvl":"info","stage":"nlp","traceId":"line_1754858893663_rchc7q","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:48:13  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:48:14  📊 規則提取置信度: 0.67
2025-08-10 20:48:14  🤖 啟用 AI 輔助提取...
2025-08-10 20:48:15  ✅ 最終 slots: {
2025-08-10 20:48:15    studentName: '小明',
2025-08-10 20:48:15    courseName: '數學課',
2025-08-10 20:48:15    timeReference: 'yesterday',
2025-08-10 20:48:15    content: '什麼？'
2025-08-10 20:48:15  }
2025-08-10 20:48:15  {"ts":"2025-08-10T20:48:15.131Z","lvl":"info","stage":"slots","traceId":"line_1754858893663_rchc7q","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:48:15  🎯 執行任務: record_content
2025-08-10 20:48:15  📝 開始處理記錄課程內容任務: {
2025-08-10 20:48:15    studentName: '小明',
2025-08-10 20:48:15    courseName: '數學課',
2025-08-10 20:48:15    timeReference: 'yesterday',
2025-08-10 20:48:15    content: '什麼？'
2025-08-10 20:48:15  }
2025-08-10 20:48:15  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 20:48:15  ❓ 未找到完全匹配的課程
2025-08-10 20:48:15  ✅ 文檔已添加到 course_contents: l8nom8bypcZMv3pU17uc
2025-08-10 20:48:15  ✅ 課程內容記錄已儲存: l8nom8bypcZMv3pU17uc
2025-08-10 20:48:15  📊 任務執行結果: {
2025-08-10 20:48:15    success: true,
2025-08-10 20:48:15    code: 'RECORD_CONTENT_OK',
2025-08-10 20:48:15    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 20:48:15    data: {
2025-08-10 20:48:15      recordId: 'l8nom8bypcZMv3pU17uc',
2025-08-10 20:48:15      courseId: null,
2025-08-10 20:48:15      targetDate: '2025-08-09'
2025-08-10 20:48:15    }
2025-08-10 20:48:15  }
2025-08-10 20:48:15  {"ts":"2025-08-10T20:48:15.404Z","lvl":"info","stage":"task","traceId":"line_1754858893663_rchc7q","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":273}
2025-08-10 20:48:15  🔍 檢查 replyToken: test-reply-token-1754858893373
2025-08-10 20:48:15  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:48:15  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:48:15  📝 記錄為獨立內容
2025-08-10 20:48:15  👨‍🎓 學生：小明
2025-08-10 20:48:15  📚 課程：數學課
2025-08-10 20:48:15  📅 日期：2025-08-09
2025-08-10 20:48:15  💬 內容：什麼？
2025-08-10 20:48:15  {"ts":"2025-08-10T20:48:15.688Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858893663_rchc7q","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 20:48:22  📨 收到 1 個事件
2025-08-10 20:48:22  📋 事件類型: message
2025-08-10 20:48:22  🔍 完整事件 JSON: {
2025-08-10 20:48:22    "type": "message",
2025-08-10 20:48:22    "message": {
2025-08-10 20:48:22      "type": "text",
2025-08-10 20:48:22      "text": "記錄小明今天化學課的內容"
2025-08-10 20:48:22    },
2025-08-10 20:48:22    "source": {
2025-08-10 20:48:22      "userId": "U_test_user_qa",
2025-08-10 20:48:22      "type": "user"
2025-08-10 20:48:22    },
2025-08-10 20:48:22    "replyToken": "test-reply-token-1754858902577",
2025-08-10 20:48:22    "timestamp": 1754858902577
2025-08-10 20:48:22  }
2025-08-10 20:48:22  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:48:22  {"ts":"2025-08-10T20:48:22.869Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858902869_9zth15","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 20:48:22  🔍 用戶ID類型: string
2025-08-10 20:48:22  🔍 是否測試用戶: true
2025-08-10 20:48:22  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:48:22  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 20:48:23  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:48:23  {"ts":"2025-08-10T20:48:23.010Z","lvl":"info","stage":"nlp","traceId":"line_1754858902869_9zth15","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:48:23  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:48:23  📊 規則提取置信度: 0.67
2025-08-10 20:48:23  🤖 啟用 AI 輔助提取...
2025-08-10 20:48:24  ✅ 最終 slots: {
2025-08-10 20:48:24    studentName: '小明',
2025-08-10 20:48:24    courseName: '化學課',
2025-08-10 20:48:24    timeReference: 'today',
2025-08-10 20:48:24    content: '小明今天化學課的內容'
2025-08-10 20:48:24  }
2025-08-10 20:48:24  {"ts":"2025-08-10T20:48:24.264Z","lvl":"info","stage":"slots","traceId":"line_1754858902869_9zth15","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:48:24  🎯 執行任務: record_content
2025-08-10 20:48:24  📝 開始處理記錄課程內容任務: {
2025-08-10 20:48:24    studentName: '小明',
2025-08-10 20:48:24  ✅ 最終 slots: {
2025-08-10 20:48:24    studentName: '小明',
2025-08-10 20:48:24    courseName: '化學課',
2025-08-10 20:48:24    timeReference: 'today',
2025-08-10 20:48:24    content: '小明今天化學課的內容'
2025-08-10 20:48:24  }
2025-08-10 20:48:24  {"ts":"2025-08-10T20:48:24.264Z","lvl":"info","stage":"slots","traceId":"line_1754858902869_9zth15","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:48:24  🎯 執行任務: record_content
2025-08-10 20:48:24  📝 開始處理記錄課程內容任務: {
2025-08-10 20:48:24    studentName: '小明',
2025-08-10 20:48:24    courseName: '化學課',
2025-08-10 20:48:24    timeReference: 'today',
2025-08-10 20:48:24    content: '小明今天化學課的內容'
2025-08-10 20:48:24  }
2025-08-10 20:48:24  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 20:48:24  ❓ 未找到完全匹配的課程
2025-08-10 20:48:24  ✅ 文檔已添加到 course_contents: gZETPrZTshmEKzxT97AF
2025-08-10 20:48:24  ✅ 課程內容記錄已儲存: gZETPrZTshmEKzxT97AF
2025-08-10 20:48:24  📊 任務執行結果: {
2025-08-10 20:48:24    success: true,
2025-08-10 20:48:24    code: 'RECORD_CONTENT_OK',
2025-08-10 20:48:24    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 20:48:24      '📝 記錄為獨立內容\n' +
2025-08-10 20:48:24      '👨‍🎓 學生：小明\n' +
2025-08-10 20:48:24      '📚 課程：化學課\n' +
2025-08-10 20:48:24      '📅 日期：2025-08-10\n' +
2025-08-10 20:48:24      '💬 內容：小明今天化學課的內容',
2025-08-10 20:48:24    data: {
2025-08-10 20:48:24      recordId: 'gZETPrZTshmEKzxT97AF',
2025-08-10 20:48:24      courseId: null,
2025-08-10 20:48:24      targetDate: '2025-08-10'
2025-08-10 20:48:24    }
2025-08-10 20:48:24  }
2025-08-10 20:48:24  {"ts":"2025-08-10T20:48:24.513Z","lvl":"info","stage":"task","traceId":"line_1754858902869_9zth15","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":249}
2025-08-10 20:48:24  🔍 檢查 replyToken: test-reply-token-1754858902577
2025-08-10 20:48:24  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:48:24  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:48:24  📝 記錄為獨立內容
2025-08-10 20:48:24  👨‍🎓 學生：小明
2025-08-10 20:48:24  📚 課程：化學課
2025-08-10 20:48:24  📅 日期：2025-08-10
2025-08-10 20:48:24  💬 內容：小明今天化學課的內容
2025-08-10 20:48:24  {"ts":"2025-08-10T20:48:24.799Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858902869_9zth15","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 20:48:37  📨 收到 1 個事件
2025-08-10 20:48:37  📋 事件類型: message
2025-08-10 20:48:37  🔍 完整事件 JSON: {
2025-08-10 20:48:37    "type": "message",
2025-08-10 20:48:37    "message": {
2025-08-10 20:48:37      "type": "text",
2025-08-10 20:48:37      "text": "提醒我小明的數學課"
2025-08-10 20:48:37    },
2025-08-10 20:48:37    "source": {
2025-08-10 20:48:37      "userId": "U_test_user_qa",
2025-08-10 20:48:37      "type": "user"
2025-08-10 20:48:37    },
2025-08-10 20:48:37    "replyToken": "test-reply-token-1754858917830",
2025-08-10 20:48:37    "timestamp": 1754858917830
2025-08-10 20:48:37  }
2025-08-10 20:48:37  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:48:38  {"ts":"2025-08-10T20:48:38.014Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858918014_yd9d57","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 20:48:38  🔍 用戶ID類型: string
2025-08-10 20:48:38  🔍 是否測試用戶: true
2025-08-10 20:48:38  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:48:38  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 20:48:38  ✅ 規則匹配成功: set_reminder
2025-08-10 20:48:38  {"ts":"2025-08-10T20:48:38.156Z","lvl":"info","stage":"nlp","traceId":"line_1754858918014_yd9d57","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:48:38  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:48:38  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:48:38  📊 規則提取置信度: 0.67
2025-08-10 20:48:38  🤖 啟用 AI 輔助提取...
2025-08-10 20:48:41  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:48:41  {"ts":"2025-08-10T20:48:41.953Z","lvl":"info","stage":"slots","traceId":"line_1754858918014_yd9d57","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:48:41  🎯 執行任務: set_reminder
2025-08-10 20:48:41  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:48:42  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 20:48:42  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 20:48:42  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 20:48:42  ✅ 提醒記錄已創建: usOOBRDtERqKCs2g5kaJ
2025-08-10 20:48:42  ✅ 提醒設定成功: usOOBRDtERqKCs2g5kaJ
2025-08-10 20:48:42  📊 任務執行結果: {
2025-08-10 20:48:42    success: true,
2025-08-10 20:48:42    code: 'REMINDER_SET_OK',
2025-08-10 20:48:42    message: '✅ 提醒設定完成！\n' +
2025-08-10 20:48:42      '📚 課程：小明 的 數學課\n' +
2025-08-10 20:48:42      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 20:48:42      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 20:48:42  }
2025-08-10 20:48:42  {"ts":"2025-08-10T20:48:42.250Z","lvl":"info","stage":"task","traceId":"line_1754858918014_yd9d57","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":296}
2025-08-10 20:48:42  🔍 檢查 replyToken: test-reply-token-1754858917830
2025-08-10 20:48:42  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:48:42  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 20:48:42  📚 課程：小明 的 數學課
2025-08-10 20:48:42  📅 上課時間：8/11 下午02:00
2025-08-10 20:48:42  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 20:48:42  {"ts":"2025-08-10T20:48:42.535Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858918014_yd9d57","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 20:48:55  📨 收到 1 個事件
2025-08-10 20:48:55  📋 事件類型: message
2025-08-10 20:48:55  🔍 完整事件 JSON: {
2025-08-10 20:48:55    "type": "message",
2025-08-10 20:48:55    "message": {
2025-08-10 20:48:55  📨 收到 1 個事件
2025-08-10 20:48:55  📋 事件類型: message
2025-08-10 20:48:55  🔍 完整事件 JSON: {
2025-08-10 20:48:55    "type": "message",
2025-08-10 20:48:55    "message": {
2025-08-10 20:48:55      "type": "text",
2025-08-10 20:48:55      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 20:48:55    },
2025-08-10 20:48:55    "source": {
2025-08-10 20:48:55      "userId": "U_test_user_qa",
2025-08-10 20:48:55      "type": "user"
2025-08-10 20:48:55    },
2025-08-10 20:48:55    "replyToken": "test-reply-token-1754858934966",
2025-08-10 20:48:55    "timestamp": 1754858934966
2025-08-10 20:48:55  }
2025-08-10 20:48:55  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:48:55  {"ts":"2025-08-10T20:48:55.146Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858935146_m4zn9p","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 20:48:55  🔍 用戶ID類型: string
2025-08-10 20:48:55  🔍 是否測試用戶: true
2025-08-10 20:48:55  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:48:55  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 20:48:55  ✅ 規則匹配成功: set_reminder
2025-08-10 20:48:55  {"ts":"2025-08-10T20:48:55.287Z","lvl":"info","stage":"nlp","traceId":"line_1754858935146_m4zn9p","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:48:55  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:48:55  📊 規則提取置信度: 0.67
2025-08-10 20:48:55  🤖 啟用 AI 輔助提取...
2025-08-10 20:48:56  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 20:48:56  {"ts":"2025-08-10T20:48:56.792Z","lvl":"info","stage":"slots","traceId":"line_1754858935146_m4zn9p","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 20:48:56  🎯 執行任務: set_reminder
2025-08-10 20:48:56  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 20:48:56  📊 任務執行結果: {
2025-08-10 20:48:56    success: false,
2025-08-10 20:48:56    code: 'MISSING_STUDENT',
2025-08-10 20:48:56    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 20:48:56  }
2025-08-10 20:48:56  {"ts":"2025-08-10T20:48:56.792Z","lvl":"info","stage":"task","traceId":"line_1754858935146_m4zn9p","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 20:48:57  🔍 檢查 replyToken: test-reply-token-1754858934966
2025-08-10 20:48:57  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:48:57  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 20:48:57  {"ts":"2025-08-10T20:48:57.076Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858935146_m4zn9p","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 20:49:10  📨 收到 1 個事件
2025-08-10 20:49:10  📋 事件類型: message
2025-08-10 20:49:10  🔍 完整事件 JSON: {
2025-08-10 20:49:10    "type": "message",
2025-08-10 20:49:10    "message": {
2025-08-10 20:49:10      "type": "text",
2025-08-10 20:49:10      "text": "提醒我小明的物理課"
2025-08-10 20:49:10    },
2025-08-10 20:49:10    "source": {
2025-08-10 20:49:10      "userId": "U_test_user_qa",
2025-08-10 20:49:10      "type": "user"
2025-08-10 20:49:10    },
2025-08-10 20:49:10    "replyToken": "test-reply-token-1754858949940",
2025-08-10 20:49:10    "timestamp": 1754858949940
2025-08-10 20:49:10  }
2025-08-10 20:49:10  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:49:10  {"ts":"2025-08-10T20:49:10.122Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858950122_ojjgz1","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 20:49:10  🔍 用戶ID類型: string
2025-08-10 20:49:10  🔍 是否測試用戶: true
2025-08-10 20:49:10  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:49:10  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 20:49:10  ✅ 規則匹配成功: set_reminder
2025-08-10 20:49:10  {"ts":"2025-08-10T20:49:10.263Z","lvl":"info","stage":"nlp","traceId":"line_1754858950122_ojjgz1","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:49:10  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:49:10  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:49:10  📊 規則提取置信度: 0.67
2025-08-10 20:49:10  🤖 啟用 AI 輔助提取...
2025-08-10 20:49:11  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:49:11  {"ts":"2025-08-10T20:49:11.488Z","lvl":"info","stage":"slots","traceId":"line_1754858950122_ojjgz1","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:49:11  🎯 執行任務: set_reminder
2025-08-10 20:49:11  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:49:11  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 20:49:11  📊 任務執行結果: {
2025-08-10 20:49:11    success: false,
2025-08-10 20:49:11    code: 'NOT_FOUND',
2025-08-10 20:49:11    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 20:49:11  }
2025-08-10 20:49:11  {"ts":"2025-08-10T20:49:11.564Z","lvl":"info","stage":"task","traceId":"line_1754858950122_ojjgz1","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":76}
2025-08-10 20:49:11  🔍 檢查 replyToken: test-reply-token-1754858949940
2025-08-10 20:49:11  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:49:11  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 20:49:11  {"ts":"2025-08-10T20:49:11.847Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858950122_ojjgz1","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 20:49:18  📨 收到 1 個事件
2025-08-10 20:49:18  📋 事件類型: message
2025-08-10 20:49:18  🔍 完整事件 JSON: {
2025-08-10 20:49:18    "type": "message",
2025-08-10 20:49:18    "message": {
2025-08-10 20:49:18      "type": "text",
2025-08-10 20:49:18      "text": "小明的數學課改到下午4點"
2025-08-10 20:49:18    },
2025-08-10 20:49:18    "source": {
2025-08-10 20:49:18      "userId": "U_test_user_qa",
2025-08-10 20:49:18      "type": "user"
2025-08-10 20:49:18    },
2025-08-10 20:49:18    "replyToken": "test-reply-token-1754858958863",
2025-08-10 20:49:18    "timestamp": 1754858958863
2025-08-10 20:49:18  }
2025-08-10 20:49:18  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:49:19  {"ts":"2025-08-10T20:49:19.054Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858959054_5tfosd","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 20:49:19  🔍 用戶ID類型: string
2025-08-10 20:49:19  {"ts":"2025-08-10T20:49:19.054Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858959054_5tfosd","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 20:49:19  🔍 用戶ID類型: string
2025-08-10 20:49:19  🔍 是否測試用戶: true
2025-08-10 20:49:19  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:49:19  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 20:49:19  ✅ 規則匹配成功: modify_course
2025-08-10 20:49:19  {"ts":"2025-08-10T20:49:19.196Z","lvl":"info","stage":"nlp","traceId":"line_1754858959054_5tfosd","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 20:49:19  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 20:49:19  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 20:49:19  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:49:19  📊 規則提取置信度: 0.00
2025-08-10 20:49:19  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 20:49:20  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 20:49:20  {"ts":"2025-08-10T20:49:20.597Z","lvl":"info","stage":"slots","traceId":"line_1754858959054_5tfosd","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 20:49:20  🎯 執行任務: modify_course
2025-08-10 20:49:20  ✏️ 執行修改操作任務: {
2025-08-10 20:49:20    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 20:49:20    userId: 'U_test_user_qa'
2025-08-10 20:49:20  }
2025-08-10 20:49:20  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 20:49:20  {"ts":"2025-08-10T20:49:20.668Z","lvl":"info","stage":"task","traceId":"line_1754858959054_5tfosd","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 20:49:20  🔍 檢查 replyToken: test-reply-token-1754858958863
2025-08-10 20:49:20  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:49:20  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 20:49:20  {"ts":"2025-08-10T20:49:20.954Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858959054_5tfosd","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 20:49:33  📨 收到 1 個事件
2025-08-10 20:49:33  📋 事件類型: message
2025-08-10 20:49:33  🔍 完整事件 JSON: {
2025-08-10 20:49:33    "type": "message",
2025-08-10 20:49:33    "message": {
2025-08-10 20:49:33      "type": "text",
2025-08-10 20:49:33      "text": "小明每天的晨練課改到早上7點"
2025-08-10 20:49:33    },
2025-08-10 20:49:33    "source": {
2025-08-10 20:49:33      "userId": "U_test_user_qa",
2025-08-10 20:49:33      "type": "user"
2025-08-10 20:49:33    },
2025-08-10 20:49:33    "replyToken": "test-reply-token-1754858973533",
2025-08-10 20:49:33    "timestamp": 1754858973533
2025-08-10 20:49:33  }
2025-08-10 20:49:33  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:49:33  {"ts":"2025-08-10T20:49:33.788Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858973788_3iouwd","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 20:49:33  🔍 用戶ID類型: string
2025-08-10 20:49:33  🔍 是否測試用戶: true
2025-08-10 20:49:33  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:49:33  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 20:49:33  ✅ 規則匹配成功: create_recurring_course
2025-08-10 20:49:33  {"ts":"2025-08-10T20:49:33.929Z","lvl":"info","stage":"nlp","traceId":"line_1754858973788_3iouwd","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 20:49:34  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 20:49:34  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 20:49:34  ✅ 時間解析成功: {
2025-08-10 20:49:34    input: '小明每天的晨練課改到早上7點',
2025-08-10 20:49:34    output: '07:00',
2025-08-10 20:49:34    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 20:49:34  }
2025-08-10 20:49:34  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:49:34  📊 規則提取置信度: 0.67
2025-08-10 20:49:34  🤖 啟用 AI 輔助提取...
2025-08-10 20:49:35  ✅ 最終 slots: {
2025-08-10 20:49:35    studentName: '小明',
2025-08-10 20:49:35    courseName: '晨練課',
2025-08-10 20:49:35    scheduleTime: '07:00',
2025-08-10 20:49:35    recurring: false
2025-08-10 20:49:35  }
2025-08-10 20:49:35  {"ts":"2025-08-10T20:49:35.165Z","lvl":"info","stage":"slots","traceId":"line_1754858973788_3iouwd","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:35  🎯 執行任務: create_recurring_course
2025-08-10 20:49:35  🎯 開始處理新增課程任務
2025-08-10 20:49:35  📋 接收參數: {
2025-08-10 20:49:35    studentName: '小明',
2025-08-10 20:49:35    courseName: '晨練課',
2025-08-10 20:49:35    scheduleTime: '07:00',
2025-08-10 20:49:35    recurring: false
2025-08-10 20:49:35  }
2025-08-10 20:49:35  📊 任務執行結果: {
2025-08-10 20:49:35    success: false,
2025-08-10 20:49:35    code: 'MISSING_FIELDS',
2025-08-10 20:49:35    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 20:49:35    expectingInput: true,
2025-08-10 20:49:35    missingFields: [ '課程日期' ]
2025-08-10 20:49:35  }
2025-08-10 20:49:35  {"ts":"2025-08-10T20:49:35.307Z","lvl":"info","stage":"task","traceId":"line_1754858973788_3iouwd","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":141}
2025-08-10 20:49:35  🔍 檢查 replyToken: test-reply-token-1754858973533
2025-08-10 20:49:35  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:49:35  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 20:49:35  
2025-08-10 20:49:35  範例：「小明每週三下午3點數學課」
2025-08-10 20:49:35  {"ts":"2025-08-10T20:49:35.590Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858973788_3iouwd","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 20:49:48  📨 收到 1 個事件
2025-08-10 20:49:48  📋 事件類型: message
2025-08-10 20:49:48  🔍 完整事件 JSON: {
2025-08-10 20:49:48    "type": "message",
2025-08-10 20:49:48    "message": {
2025-08-10 20:49:48      "type": "text",
2025-08-10 20:49:48      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 20:49:48    },
2025-08-10 20:49:48    "source": {
2025-08-10 20:49:48      "userId": "U_test_user_qa",
2025-08-10 20:49:48      "type": "user"
2025-08-10 20:49:48    },
2025-08-10 20:49:48    "replyToken": "test-reply-token-1754858988006",
2025-08-10 20:49:48  📨 收到 1 個事件
2025-08-10 20:49:48  📋 事件類型: message
2025-08-10 20:49:48  🔍 完整事件 JSON: {
2025-08-10 20:49:48    "type": "message",
2025-08-10 20:49:48    "message": {
2025-08-10 20:49:48      "type": "text",
2025-08-10 20:49:48      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 20:49:48    },
2025-08-10 20:49:48    "source": {
2025-08-10 20:49:48      "userId": "U_test_user_qa",
2025-08-10 20:49:48      "type": "user"
2025-08-10 20:49:48    },
2025-08-10 20:49:48    "replyToken": "test-reply-token-1754858988006",
2025-08-10 20:49:48    "timestamp": 1754858988006
2025-08-10 20:49:48  }
2025-08-10 20:49:48  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:49:48  {"ts":"2025-08-10T20:49:48.188Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 20:49:48  🔍 用戶ID類型: string
2025-08-10 20:49:48  🔍 是否測試用戶: true
2025-08-10 20:49:48  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:49:48  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 20:49:48  ✅ 規則匹配成功: create_recurring_course
2025-08-10 20:49:48  {"ts":"2025-08-10T20:49:48.330Z","lvl":"info","stage":"nlp","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 20:49:48  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 20:49:48  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 20:49:48  ✅ 時間解析成功: {
2025-08-10 20:49:48    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 20:49:48    output: '15:00',
2025-08-10 20:49:48    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 20:49:48  }
2025-08-10 20:49:48  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:49:48  📊 規則提取置信度: 0.67
2025-08-10 20:49:48  🤖 啟用 AI 輔助提取...
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
2025-08-10 20:49:49  ✅ 最終 slots: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  {"ts":"2025-08-10T20:49:49.572Z","lvl":"info","stage":"slots","traceId":"line_1754858988188_oypmqu","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:49:49  🎯 執行任務: create_recurring_course
2025-08-10 20:49:49  🎯 開始處理新增課程任務
2025-08-10 20:49:49  📋 接收參數: {
2025-08-10 20:49:49    studentName: 'Lumi',
2025-08-10 20:49:49    courseName: '鋼琴課',
2025-08-10 20:49:49    scheduleTime: '15:00',
2025-08-10 20:49:49    recurring: true
2025-08-10 20:49:49  }
2025-08-10 20:49:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:49:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:49:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:49:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:49:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:49:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:49:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:49:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:49:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:49:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:49:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:49:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:49:49    config: {
2025-08-10 20:49:49      url: URL {
2025-08-10 20:49:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        origin: 'https://www.googleapis.com',
2025-08-10 20:49:49        protocol: 'https:',
2025-08-10 20:49:49        username: '',
2025-08-10 20:49:49        password: '',
2025-08-10 20:49:49        host: 'www.googleapis.com',
2025-08-10 20:49:49        hostname: 'www.googleapis.com',
2025-08-10 20:49:49        port: '',
2025-08-10 20:49:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:49:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:49:49        searchParams: URLSearchParams {
2025-08-10 20:49:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49          'singleEvents' => 'true',
2025-08-10 20:49:49          'orderBy' => 'startTime' },
2025-08-10 20:49:49        hash: ''
2025-08-10 20:49:49      },
2025-08-10 20:49:49      method: 'GET',
2025-08-10 20:49:49      apiVersion: '',
2025-08-10 20:49:49      userAgentDirectives: [ [Object] ],
2025-08-10 20:49:49      paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49      headers: Headers {
2025-08-10 20:49:49        'accept-encoding': 'gzip',
2025-08-10 20:49:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      params: {
2025-08-10 20:49:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:49:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:49:49        singleEvents: true,
2025-08-10 20:49:49        orderBy: 'startTime'
2025-08-10 20:49:49      },
2025-08-10 20:49:49      validateStatus: [Function (anonymous)],
2025-08-10 20:49:49      retry: true,
2025-08-10 20:49:49      responseType: 'unknown',
2025-08-10 20:49:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:49:49      retryConfig: {
2025-08-10 20:49:49        currentRetryAttempt: 0,
2025-08-10 20:49:49        retry: 3,
2025-08-10 20:49:49        httpMethodsToRetry: [Array],
2025-08-10 20:49:49        noResponseRetries: 2,
2025-08-10 20:49:49        retryDelayMultiplier: 2,
2025-08-10 20:49:49        timeOfFirstRequest: 1754858989969,
2025-08-10 20:49:49        totalTimeout: 9007199254740991,
2025-08-10 20:49:49        maxRetryDelay: 9007199254740991,
2025-08-10 20:49:49        statusCodesToRetry: [Array]
2025-08-10 20:49:49      }
2025-08-10 20:49:49    },
2025-08-10 20:49:49    response: Response {
2025-08-10 20:49:49      size: 0,
2025-08-10 20:49:49      data: { error: [Object] },
2025-08-10 20:49:49      config: {
2025-08-10 20:49:49        url: URL {},
2025-08-10 20:49:49        method: 'GET',
2025-08-10 20:49:49        apiVersion: '',
2025-08-10 20:49:49        userAgentDirectives: [Array],
2025-08-10 20:49:49        paramsSerializer: [Function (anonymous)],
2025-08-10 20:49:49        headers: Headers {
2025-08-10 20:49:49          'accept-encoding': 'gzip',
2025-08-10 20:49:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:49:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:49:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:49:49        },
2025-08-10 20:49:49        params: [Object],
2025-08-10 20:49:49        validateStatus: [Function (anonymous)],
2025-08-10 20:49:49        retry: true,
2025-08-10 20:49:49        responseType: 'unknown',
2025-08-10 20:49:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:49:49      },
2025-08-10 20:49:49      Symbol(Body internals): {
