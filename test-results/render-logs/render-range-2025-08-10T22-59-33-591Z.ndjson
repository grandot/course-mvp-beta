2025-08-10 22:44:42  📨 收到 1 個事件
2025-08-10 22:44:42  📋 事件類型: message
2025-08-10 22:44:42  🔍 完整事件 JSON: {
2025-08-10 22:44:42    "type": "message",
2025-08-10 22:44:42    "message": {
2025-08-10 22:44:42      "type": "text",
2025-08-10 22:44:42      "text": "小明的晨練課每天幾點？"
2025-08-10 22:44:42    },
2025-08-10 22:44:42    "source": {
2025-08-10 22:44:42      "userId": "U_test_user_qa",
2025-08-10 22:44:42      "type": "user"
2025-08-10 22:44:42    },
2025-08-10 22:44:42    "replyToken": "test-reply-token-1754865882105",
2025-08-10 22:44:42    "timestamp": 1754865882105
2025-08-10 22:44:42  }
2025-08-10 22:44:42  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:44:42  {"ts":"2025-08-10T22:44:42.273Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865882273_udkuzx","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 22:44:42  🔍 用戶ID類型: string
2025-08-10 22:44:42  🔍 是否測試用戶: true
2025-08-10 22:44:42  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:44:42  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 22:44:42  🤖 啟用 AI 備援識別...
2025-08-10 22:44:43  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 22:44:43  {"ts":"2025-08-10T22:44:43.714Z","lvl":"info","stage":"nlp","traceId":"line_1754865882273_udkuzx","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 22:44:43  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 22:44:43  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:44:43  📊 規則提取置信度: 0.50
2025-08-10 22:44:43  🤖 啟用 AI 輔助提取...
2025-08-10 22:44:45  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:44:45  {"ts":"2025-08-10T22:44:45.161Z","lvl":"info","stage":"slots","traceId":"line_1754865882273_udkuzx","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 22:44:45  🎯 執行任務: query_schedule
2025-08-10 22:44:45  🎯 開始處理查詢課表任務
2025-08-10 22:44:45  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:44:45  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:44:45  📚 查詢到 352 筆課程資料
2025-08-10 22:44:45  📚 查詢到 14 筆課程
2025-08-10 22:44:45  📊 任務執行結果: {
2025-08-10 22:44:45    success: true,
2025-08-10 22:44:45    code: 'QUERY_OK',
2025-08-10 22:44:45    message: '📅 小明本週的課程安排\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/9 (週六)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/10 (週日)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/11 (週一)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/12 (週二)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/13 (週三)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/14 (週四)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/15 (週五)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄',
2025-08-10 22:44:45    data: {
2025-08-10 22:44:45      courses: [
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object]
2025-08-10 22:44:45      ],
2025-08-10 22:44:45      courseCount: 14,
2025-08-10 22:44:45      dateRange: {
2025-08-10 22:44:45        startDate: '2025-08-10',
2025-08-10 22:44:45        endDate: '2025-08-16',
2025-08-10 22:44:45        description: '本週'
2025-08-10 22:44:45      }
2025-08-10 22:44:45    }
2025-08-10 22:44:45  }
2025-08-10 22:44:45  {"ts":"2025-08-10T22:44:45.561Z","lvl":"info","stage":"task","traceId":"line_1754865882273_udkuzx","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":400}
2025-08-10 22:44:45  🔍 檢查 replyToken: test-reply-token-1754865882105
2025-08-10 22:44:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:44:45  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/9 (週六)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/10 (週日)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/11 (週一)
2025-08-10 22:44:45  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:44:45  {"ts":"2025-08-10T22:44:45.161Z","lvl":"info","stage":"slots","traceId":"line_1754865882273_udkuzx","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 22:44:45  🎯 執行任務: query_schedule
2025-08-10 22:44:45  🎯 開始處理查詢課表任務
2025-08-10 22:44:45  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:44:45  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:44:45  📚 查詢到 352 筆課程資料
2025-08-10 22:44:45  📚 查詢到 14 筆課程
2025-08-10 22:44:45  📊 任務執行結果: {
2025-08-10 22:44:45    success: true,
2025-08-10 22:44:45    code: 'QUERY_OK',
2025-08-10 22:44:45    message: '📅 小明本週的課程安排\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/9 (週六)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/10 (週日)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/11 (週一)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/12 (週二)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/13 (週三)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/14 (週四)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '\n' +
2025-08-10 22:44:45      '📆 8/15 (週五)\n' +
2025-08-10 22:44:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:44:45      '  上午8:00 - 晨練課 🔄',
2025-08-10 22:44:45    data: {
2025-08-10 22:44:45      courses: [
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object],
2025-08-10 22:44:45        [Object], [Object]
2025-08-10 22:44:45      ],
2025-08-10 22:44:45      courseCount: 14,
2025-08-10 22:44:45      dateRange: {
2025-08-10 22:44:45        startDate: '2025-08-10',
2025-08-10 22:44:45        endDate: '2025-08-16',
2025-08-10 22:44:45        description: '本週'
2025-08-10 22:44:45      }
2025-08-10 22:44:45    }
2025-08-10 22:44:45  }
2025-08-10 22:44:45  {"ts":"2025-08-10T22:44:45.561Z","lvl":"info","stage":"task","traceId":"line_1754865882273_udkuzx","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":400}
2025-08-10 22:44:45  🔍 檢查 replyToken: test-reply-token-1754865882105
2025-08-10 22:44:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:44:45  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/9 (週六)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/10 (週日)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/11 (週一)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/12 (週二)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/13 (週三)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/14 (週四)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  
2025-08-10 22:44:45  📆 8/15 (週五)
2025-08-10 22:44:45    上午7:00 - 晨練課 🔄
2025-08-10 22:44:45    上午8:00 - 晨練課 🔄
2025-08-10 22:44:45  {"ts":"2025-08-10T22:44:45.845Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865882273_udkuzx","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 22:44:58  📨 收到 1 個事件
2025-08-10 22:44:58  📋 事件類型: message
2025-08-10 22:44:58  🔍 完整事件 JSON: {
2025-08-10 22:44:58    "type": "message",
2025-08-10 22:44:58    "message": {
2025-08-10 22:44:58      "type": "text",
2025-08-10 22:44:58      "text": "查詢Lumi的重複課程"
2025-08-10 22:44:58    },
2025-08-10 22:44:58    "source": {
2025-08-10 22:44:58  📨 收到 1 個事件
2025-08-10 22:44:58  📋 事件類型: message
2025-08-10 22:44:58  🔍 完整事件 JSON: {
2025-08-10 22:44:58    "type": "message",
2025-08-10 22:44:58    "message": {
2025-08-10 22:44:58      "type": "text",
2025-08-10 22:44:58      "text": "查詢Lumi的重複課程"
2025-08-10 22:44:58    },
2025-08-10 22:44:58    "source": {
2025-08-10 22:44:58      "userId": "U_test_user_qa",
2025-08-10 22:44:58      "type": "user"
2025-08-10 22:44:58    },
2025-08-10 22:44:58    "replyToken": "test-reply-token-1754865898301",
2025-08-10 22:44:58    "timestamp": 1754865898301
2025-08-10 22:44:58  }
2025-08-10 22:44:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:44:58  {"ts":"2025-08-10T22:44:58.576Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865898576_0l2zy5","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 22:44:58  🔍 用戶ID類型: string
2025-08-10 22:44:58  🔍 是否測試用戶: true
2025-08-10 22:44:58  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:44:58  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 22:44:58  ✅ 規則匹配成功: query_schedule
2025-08-10 22:44:58  {"ts":"2025-08-10T22:44:58.719Z","lvl":"info","stage":"nlp","traceId":"line_1754865898576_0l2zy5","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 22:44:58  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 22:44:59  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:44:59  📊 規則提取置信度: 0.50
2025-08-10 22:44:59  🤖 啟用 AI 輔助提取...
2025-08-10 22:45:00  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 22:45:00  {"ts":"2025-08-10T22:45:00.402Z","lvl":"info","stage":"slots","traceId":"line_1754865898576_0l2zy5","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 22:45:00  🎯 執行任務: query_schedule
2025-08-10 22:45:00  🎯 開始處理查詢課表任務
2025-08-10 22:45:00  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 22:45:00  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:45:00  📚 查詢到 344 筆課程資料
2025-08-10 22:45:00  📚 查詢到 0 筆課程
2025-08-10 22:45:00  📊 任務執行結果: {
2025-08-10 22:45:00    success: true,
2025-08-10 22:45:00    code: 'QUERY_OK_EMPTY',
2025-08-10 22:45:00    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 22:45:00      '\n' +
2025-08-10 22:45:00      '💡 您可以：\n' +
2025-08-10 22:45:00      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 22:45:00      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 22:45:00      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 22:45:00    data: {
2025-08-10 22:45:00      courseCount: 0,
2025-08-10 22:45:00      dateRange: {
2025-08-10 22:45:00        startDate: '2025-08-10',
2025-08-10 22:45:00        endDate: '2025-08-16',
2025-08-10 22:45:00        description: '本週'
2025-08-10 22:45:00      }
2025-08-10 22:45:00    }
2025-08-10 22:45:00  }
2025-08-10 22:45:00  {"ts":"2025-08-10T22:45:00.737Z","lvl":"info","stage":"task","traceId":"line_1754865898576_0l2zy5","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":335}
2025-08-10 22:45:01  🔍 檢查 replyToken: test-reply-token-1754865898301
2025-08-10 22:45:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:45:01  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 22:45:01  
2025-08-10 22:45:01  💡 您可以：
2025-08-10 22:45:01  • 新增課程：「小明明天上午10點英文課」
2025-08-10 22:45:01  • 查詢其他時間：「小明下週的課表」
2025-08-10 22:45:01  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 22:45:01  {"ts":"2025-08-10T22:45:01.022Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865898576_0l2zy5","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 22:45:13  📨 收到 1 個事件
2025-08-10 22:45:13  📋 事件類型: message
2025-08-10 22:45:13  🔍 完整事件 JSON: {
2025-08-10 22:45:13    "type": "message",
2025-08-10 22:45:13    "message": {
2025-08-10 22:45:13      "type": "text",
2025-08-10 22:45:13      "text": "今天小明的數學課學了分數加減法"
2025-08-10 22:45:13    },
2025-08-10 22:45:13    "source": {
2025-08-10 22:45:13      "userId": "U_test_user_qa",
2025-08-10 22:45:13      "type": "user"
2025-08-10 22:45:13    },
2025-08-10 22:45:13    "replyToken": "test-reply-token-1754865913819",
2025-08-10 22:45:13    "timestamp": 1754865913819
2025-08-10 22:45:13  }
2025-08-10 22:45:13  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:45:13  {"ts":"2025-08-10T22:45:13.982Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865913982_2a9l8j","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 22:45:13  🔍 用戶ID類型: string
2025-08-10 22:45:13  🔍 是否測試用戶: true
2025-08-10 22:45:13  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:45:13  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 22:45:14  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:45:14  {"ts":"2025-08-10T22:45:14.124Z","lvl":"info","stage":"nlp","traceId":"line_1754865913982_2a9l8j","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:45:14  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:45:14  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:45:14  📊 規則提取置信度: 1.00
2025-08-10 22:45:14  🤖 啟用 AI 輔助提取...
2025-08-10 22:45:15  ✅ 最終 slots: {
2025-08-10 22:45:15    studentName: '小明',
2025-08-10 22:45:15    courseName: '數學課',
2025-08-10 22:45:15    timeReference: 'today',
2025-08-10 22:45:15    content: '分數加減法'
2025-08-10 22:45:15  }
2025-08-10 22:45:15  {"ts":"2025-08-10T22:45:15.682Z","lvl":"info","stage":"slots","traceId":"line_1754865913982_2a9l8j","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:45:15  🎯 執行任務: record_content
2025-08-10 22:45:15  📝 開始處理記錄課程內容任務: {
2025-08-10 22:45:15    studentName: '小明',
2025-08-10 22:45:15  ✅ 最終 slots: {
2025-08-10 22:45:15    studentName: '小明',
2025-08-10 22:45:15    courseName: '數學課',
2025-08-10 22:45:15    timeReference: 'today',
2025-08-10 22:45:15    content: '分數加減法'
2025-08-10 22:45:15  }
2025-08-10 22:45:15  {"ts":"2025-08-10T22:45:15.682Z","lvl":"info","stage":"slots","traceId":"line_1754865913982_2a9l8j","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:45:15  🎯 執行任務: record_content
2025-08-10 22:45:15  📝 開始處理記錄課程內容任務: {
2025-08-10 22:45:15    studentName: '小明',
2025-08-10 22:45:15    courseName: '數學課',
2025-08-10 22:45:15    timeReference: 'today',
2025-08-10 22:45:15    content: '分數加減法'
2025-08-10 22:45:15  }
2025-08-10 22:45:15  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 22:45:15  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 22:45:15  ✅ 文檔已添加到 course_contents: H7fdYIfkCgEwZwvhy37Z
2025-08-10 22:45:15  ✅ 課程內容記錄已儲存: H7fdYIfkCgEwZwvhy37Z
2025-08-10 22:45:16  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 22:45:16  📊 任務執行結果: {
2025-08-10 22:45:16    success: true,
2025-08-10 22:45:16    code: 'RECORD_CONTENT_OK',
2025-08-10 22:45:16    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 22:45:16    data: {
2025-08-10 22:45:16      recordId: 'H7fdYIfkCgEwZwvhy37Z',
2025-08-10 22:45:16      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 22:45:16      targetDate: '2025-08-10'
2025-08-10 22:45:16    }
2025-08-10 22:45:16  }
2025-08-10 22:45:16  {"ts":"2025-08-10T22:45:16.019Z","lvl":"info","stage":"task","traceId":"line_1754865913982_2a9l8j","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":337}
2025-08-10 22:45:16  🔍 檢查 replyToken: test-reply-token-1754865913819
2025-08-10 22:45:16  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:45:16  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:45:16  📚 課程：小明 - 數學課
2025-08-10 22:45:16  📅 日期：2025-08-10
2025-08-10 22:45:16  💬 內容：分數加減法
2025-08-10 22:45:16  {"ts":"2025-08-10T22:45:16.303Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865913982_2a9l8j","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 22:45:28  📨 收到 1 個事件
2025-08-10 22:45:28  📋 事件類型: message
2025-08-10 22:45:28  🔍 完整事件 JSON: {
2025-08-10 22:45:28    "type": "message",
2025-08-10 22:45:28    "message": {
2025-08-10 22:45:28      "type": "text",
2025-08-10 22:45:28      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 22:45:28    },
2025-08-10 22:45:28    "source": {
2025-08-10 22:45:28      "userId": "U_test_user_qa",
2025-08-10 22:45:28      "type": "user"
2025-08-10 22:45:28    },
2025-08-10 22:45:28    "replyToken": "test-reply-token-1754865928890",
2025-08-10 22:45:28    "timestamp": 1754865928890
2025-08-10 22:45:28  }
2025-08-10 22:45:28  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:45:29  {"ts":"2025-08-10T22:45:29.055Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865929055_rnxtea","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 22:45:29  🔍 用戶ID類型: string
2025-08-10 22:45:29  🔍 是否測試用戶: true
2025-08-10 22:45:29  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:45:29  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 22:45:29  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:45:29  {"ts":"2025-08-10T22:45:29.197Z","lvl":"info","stage":"nlp","traceId":"line_1754865929055_rnxtea","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:45:29  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:45:29  📊 規則提取置信度: 0.33
2025-08-10 22:45:29  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 22:45:30  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 22:45:30  {"ts":"2025-08-10T22:45:30.735Z","lvl":"info","stage":"slots","traceId":"line_1754865929055_rnxtea","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 22:45:30  🎯 執行任務: record_content
2025-08-10 22:45:30  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 22:45:30  ✅ 文檔已添加到 course_contents: fdhDVVUdLgmGuq2NXJGi
2025-08-10 22:45:30  ✅ 課程內容記錄已儲存: fdhDVVUdLgmGuq2NXJGi
2025-08-10 22:45:30  📊 任務執行結果: {
2025-08-10 22:45:30    success: true,
2025-08-10 22:45:30    code: 'RECORD_CONTENT_OK',
2025-08-10 22:45:30    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 22:45:30    data: {
2025-08-10 22:45:30      recordId: 'fdhDVVUdLgmGuq2NXJGi',
2025-08-10 22:45:30      courseId: null,
2025-08-10 22:45:30      targetDate: '2025-08-09'
2025-08-10 22:45:30    }
2025-08-10 22:45:30  }
2025-08-10 22:45:30  {"ts":"2025-08-10T22:45:30.818Z","lvl":"info","stage":"task","traceId":"line_1754865929055_rnxtea","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":83}
2025-08-10 22:45:31  🔍 檢查 replyToken: test-reply-token-1754865928890
2025-08-10 22:45:31  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:45:31  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:45:31  📝 記錄為獨立內容
2025-08-10 22:45:31  📚 課程：鋼琴課
2025-08-10 22:45:31  📅 日期：2025-08-09
2025-08-10 22:45:31  💬 內容：練習了小星星
2025-08-10 22:45:31  {"ts":"2025-08-10T22:45:31.101Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865929055_rnxtea","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 22:45:43  📨 收到 1 個事件
2025-08-10 22:45:43  📋 事件類型: message
2025-08-10 22:45:43  🔍 完整事件 JSON: {
2025-08-10 22:45:43    "type": "message",
2025-08-10 22:45:43    "message": {
2025-08-10 22:45:43      "type": "text",
2025-08-10 22:45:43      "text": "小明昨天數學課學了什麼？"
2025-08-10 22:45:43    },
2025-08-10 22:45:43    "source": {
2025-08-10 22:45:43      "userId": "U_test_user_qa",
2025-08-10 22:45:43      "type": "user"
2025-08-10 22:45:43    },
2025-08-10 22:45:43  📨 收到 1 個事件
2025-08-10 22:45:43  📋 事件類型: message
2025-08-10 22:45:43  🔍 完整事件 JSON: {
2025-08-10 22:45:43    "type": "message",
2025-08-10 22:45:43    "message": {
2025-08-10 22:45:43      "type": "text",
2025-08-10 22:45:43      "text": "小明昨天數學課學了什麼？"
2025-08-10 22:45:43    },
2025-08-10 22:45:43    "source": {
2025-08-10 22:45:43      "userId": "U_test_user_qa",
2025-08-10 22:45:43      "type": "user"
2025-08-10 22:45:43    },
2025-08-10 22:45:43    "replyToken": "test-reply-token-1754865943733",
2025-08-10 22:45:43    "timestamp": 1754865943733
2025-08-10 22:45:43  }
2025-08-10 22:45:43  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:45:43  {"ts":"2025-08-10T22:45:43.901Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865943901_ztfi6m","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 22:45:43  🔍 用戶ID類型: string
2025-08-10 22:45:43  🔍 是否測試用戶: true
2025-08-10 22:45:43  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:45:43  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 22:45:44  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:45:44  {"ts":"2025-08-10T22:45:44.042Z","lvl":"info","stage":"nlp","traceId":"line_1754865943901_ztfi6m","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:45:44  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:45:44  📊 規則提取置信度: 0.67
2025-08-10 22:45:44  🤖 啟用 AI 輔助提取...
2025-08-10 22:45:45  ✅ 最終 slots: {
2025-08-10 22:45:45    studentName: '小明',
2025-08-10 22:45:45    courseName: '數學課',
2025-08-10 22:45:45    timeReference: 'yesterday',
2025-08-10 22:45:45    content: '什麼？'
2025-08-10 22:45:45  }
2025-08-10 22:45:45  {"ts":"2025-08-10T22:45:45.330Z","lvl":"info","stage":"slots","traceId":"line_1754865943901_ztfi6m","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:45:45  🎯 執行任務: record_content
2025-08-10 22:45:45  📝 開始處理記錄課程內容任務: {
2025-08-10 22:45:45    studentName: '小明',
2025-08-10 22:45:45    courseName: '數學課',
2025-08-10 22:45:45    timeReference: 'yesterday',
2025-08-10 22:45:45    content: '什麼？'
2025-08-10 22:45:45  }
2025-08-10 22:45:45  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 22:45:45  ❓ 未找到完全匹配的課程
2025-08-10 22:45:45  ✅ 文檔已添加到 course_contents: wkf201K0lzZ6rmEoO7Ev
2025-08-10 22:45:45  ✅ 課程內容記錄已儲存: wkf201K0lzZ6rmEoO7Ev
2025-08-10 22:45:45  📊 任務執行結果: {
2025-08-10 22:45:45    success: true,
2025-08-10 22:45:45    code: 'RECORD_CONTENT_OK',
2025-08-10 22:45:45    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 22:45:45    data: {
2025-08-10 22:45:45      recordId: 'wkf201K0lzZ6rmEoO7Ev',
2025-08-10 22:45:45      courseId: null,
2025-08-10 22:45:45      targetDate: '2025-08-09'
2025-08-10 22:45:45    }
2025-08-10 22:45:45  }
2025-08-10 22:45:45  {"ts":"2025-08-10T22:45:45.598Z","lvl":"info","stage":"task","traceId":"line_1754865943901_ztfi6m","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":268}
2025-08-10 22:45:45  🔍 檢查 replyToken: test-reply-token-1754865943733
2025-08-10 22:45:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:45:45  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:45:45  📝 記錄為獨立內容
2025-08-10 22:45:45  👨‍🎓 學生：小明
2025-08-10 22:45:45  📚 課程：數學課
2025-08-10 22:45:45  📅 日期：2025-08-09
2025-08-10 22:45:45  💬 內容：什麼？
2025-08-10 22:45:45  {"ts":"2025-08-10T22:45:45.881Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865943901_ztfi6m","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 22:45:52  📨 收到 1 個事件
2025-08-10 22:45:52  📋 事件類型: message
2025-08-10 22:45:52  🔍 完整事件 JSON: {
2025-08-10 22:45:52    "type": "message",
2025-08-10 22:45:52    "message": {
2025-08-10 22:45:52      "type": "text",
2025-08-10 22:45:52      "text": "記錄小明今天化學課的內容"
2025-08-10 22:45:52    },
2025-08-10 22:45:52    "source": {
2025-08-10 22:45:52      "userId": "U_test_user_qa",
2025-08-10 22:45:52      "type": "user"
2025-08-10 22:45:52    },
2025-08-10 22:45:52    "replyToken": "test-reply-token-1754865952798",
2025-08-10 22:45:52    "timestamp": 1754865952798
2025-08-10 22:45:52  }
2025-08-10 22:45:52  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:45:52  {"ts":"2025-08-10T22:45:52.957Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865952957_lzqpjb","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 22:45:52  🔍 用戶ID類型: string
2025-08-10 22:45:52  🔍 是否測試用戶: true
2025-08-10 22:45:52  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:45:52  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 22:45:53  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:45:53  {"ts":"2025-08-10T22:45:53.099Z","lvl":"info","stage":"nlp","traceId":"line_1754865952957_lzqpjb","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:45:53  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:45:53  📊 規則提取置信度: 0.67
2025-08-10 22:45:53  🤖 啟用 AI 輔助提取...
2025-08-10 22:45:54  ✅ 最終 slots: {
2025-08-10 22:45:54    studentName: '小明',
2025-08-10 22:45:54    courseName: '化學課',
2025-08-10 22:45:54    timeReference: 'today',
2025-08-10 22:45:54    content: '小明今天化學課的內容'
2025-08-10 22:45:54  }
2025-08-10 22:45:54  {"ts":"2025-08-10T22:45:54.566Z","lvl":"info","stage":"slots","traceId":"line_1754865952957_lzqpjb","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:45:54  🎯 執行任務: record_content
2025-08-10 22:45:54  📝 開始處理記錄課程內容任務: {
2025-08-10 22:45:54    studentName: '小明',
2025-08-10 22:45:54  ✅ 最終 slots: {
2025-08-10 22:45:54    studentName: '小明',
2025-08-10 22:45:54    courseName: '化學課',
2025-08-10 22:45:54    timeReference: 'today',
2025-08-10 22:45:54    content: '小明今天化學課的內容'
2025-08-10 22:45:54  }
2025-08-10 22:45:54  {"ts":"2025-08-10T22:45:54.566Z","lvl":"info","stage":"slots","traceId":"line_1754865952957_lzqpjb","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:45:54  🎯 執行任務: record_content
2025-08-10 22:45:54  📝 開始處理記錄課程內容任務: {
2025-08-10 22:45:54    studentName: '小明',
2025-08-10 22:45:54    courseName: '化學課',
2025-08-10 22:45:54    timeReference: 'today',
2025-08-10 22:45:54    content: '小明今天化學課的內容'
2025-08-10 22:45:54  }
2025-08-10 22:45:54  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 22:45:54  ❓ 未找到完全匹配的課程
2025-08-10 22:45:54  ✅ 文檔已添加到 course_contents: ICR2fOg3JRGgUpQipgKB
2025-08-10 22:45:54  ✅ 課程內容記錄已儲存: ICR2fOg3JRGgUpQipgKB
2025-08-10 22:45:54  📊 任務執行結果: {
2025-08-10 22:45:54    success: true,
2025-08-10 22:45:54    code: 'RECORD_CONTENT_OK',
2025-08-10 22:45:54    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 22:45:54      '📝 記錄為獨立內容\n' +
2025-08-10 22:45:54      '👨‍🎓 學生：小明\n' +
2025-08-10 22:45:54      '📚 課程：化學課\n' +
2025-08-10 22:45:54      '📅 日期：2025-08-10\n' +
2025-08-10 22:45:54      '💬 內容：小明今天化學課的內容',
2025-08-10 22:45:54    data: {
2025-08-10 22:45:54      recordId: 'ICR2fOg3JRGgUpQipgKB',
2025-08-10 22:45:54      courseId: null,
2025-08-10 22:45:54      targetDate: '2025-08-10'
2025-08-10 22:45:54    }
2025-08-10 22:45:54  }
2025-08-10 22:45:54  {"ts":"2025-08-10T22:45:54.772Z","lvl":"info","stage":"task","traceId":"line_1754865952957_lzqpjb","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":206}
2025-08-10 22:45:55  🔍 檢查 replyToken: test-reply-token-1754865952798
2025-08-10 22:45:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:45:55  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:45:55  📝 記錄為獨立內容
2025-08-10 22:45:55  👨‍🎓 學生：小明
2025-08-10 22:45:55  📚 課程：化學課
2025-08-10 22:45:55  📅 日期：2025-08-10
2025-08-10 22:45:55  💬 內容：小明今天化學課的內容
2025-08-10 22:45:55  {"ts":"2025-08-10T22:45:55.057Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865952957_lzqpjb","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 22:46:07  📨 收到 1 個事件
2025-08-10 22:46:07  📋 事件類型: message
2025-08-10 22:46:07  🔍 完整事件 JSON: {
2025-08-10 22:46:07    "type": "message",
2025-08-10 22:46:07    "message": {
2025-08-10 22:46:07      "type": "text",
2025-08-10 22:46:07      "text": "提醒我小明的數學課"
2025-08-10 22:46:07    },
2025-08-10 22:46:07    "source": {
2025-08-10 22:46:07      "userId": "U_test_user_qa",
2025-08-10 22:46:07      "type": "user"
2025-08-10 22:46:07    },
2025-08-10 22:46:07    "replyToken": "test-reply-token-1754865967673",
2025-08-10 22:46:07    "timestamp": 1754865967673
2025-08-10 22:46:07  }
2025-08-10 22:46:07  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:46:07  {"ts":"2025-08-10T22:46:07.841Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865967841_h8t0p0","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 22:46:07  🔍 用戶ID類型: string
2025-08-10 22:46:07  🔍 是否測試用戶: true
2025-08-10 22:46:07  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:46:07  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 22:46:07  ✅ 規則匹配成功: set_reminder
2025-08-10 22:46:07  {"ts":"2025-08-10T22:46:07.982Z","lvl":"info","stage":"nlp","traceId":"line_1754865967841_h8t0p0","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:46:08  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:46:08  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:46:08  📊 規則提取置信度: 0.67
2025-08-10 22:46:08  🤖 啟用 AI 輔助提取...
2025-08-10 22:46:09  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 22:46:09  {"ts":"2025-08-10T22:46:09.301Z","lvl":"info","stage":"slots","traceId":"line_1754865967841_h8t0p0","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 22:46:09  🎯 執行任務: set_reminder
2025-08-10 22:46:09  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 22:46:09  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 22:46:09  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 22:46:09  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 22:46:09  ✅ 提醒記錄已創建: zkwnKc5TO5wZh1fSl2it
2025-08-10 22:46:09  ✅ 提醒設定成功: zkwnKc5TO5wZh1fSl2it
2025-08-10 22:46:09  📊 任務執行結果: {
2025-08-10 22:46:09    success: true,
2025-08-10 22:46:09    code: 'REMINDER_SET_OK',
2025-08-10 22:46:09    message: '✅ 提醒設定完成！\n' +
2025-08-10 22:46:09      '📚 課程：小明 的 數學課\n' +
2025-08-10 22:46:09      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 22:46:09      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 22:46:09  }
2025-08-10 22:46:09  {"ts":"2025-08-10T22:46:09.619Z","lvl":"info","stage":"task","traceId":"line_1754865967841_h8t0p0","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":318}
2025-08-10 22:46:09  🔍 檢查 replyToken: test-reply-token-1754865967673
2025-08-10 22:46:09  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:46:09  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 22:46:09  📚 課程：小明 的 數學課
2025-08-10 22:46:09  📅 上課時間：8/11 下午02:00
2025-08-10 22:46:09  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 22:46:09  {"ts":"2025-08-10T22:46:09.904Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865967841_h8t0p0","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 22:46:22  📨 收到 1 個事件
2025-08-10 22:46:22  📋 事件類型: message
2025-08-10 22:46:22  🔍 完整事件 JSON: {
2025-08-10 22:46:22    "type": "message",
2025-08-10 22:46:22    "message": {
2025-08-10 22:46:22  📨 收到 1 個事件
2025-08-10 22:46:22  📋 事件類型: message
2025-08-10 22:46:22  🔍 完整事件 JSON: {
2025-08-10 22:46:22    "type": "message",
2025-08-10 22:46:22    "message": {
2025-08-10 22:46:22      "type": "text",
2025-08-10 22:46:22      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 22:46:22    },
2025-08-10 22:46:22    "source": {
2025-08-10 22:46:22      "userId": "U_test_user_qa",
2025-08-10 22:46:22      "type": "user"
2025-08-10 22:46:22    },
2025-08-10 22:46:22    "replyToken": "test-reply-token-1754865982416",
2025-08-10 22:46:22    "timestamp": 1754865982416
2025-08-10 22:46:22  }
2025-08-10 22:46:22  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:46:22  {"ts":"2025-08-10T22:46:22.581Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865982581_lqo3l8","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 22:46:22  🔍 用戶ID類型: string
2025-08-10 22:46:22  🔍 是否測試用戶: true
2025-08-10 22:46:22  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:46:22  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 22:46:22  ✅ 規則匹配成功: set_reminder
2025-08-10 22:46:22  {"ts":"2025-08-10T22:46:22.722Z","lvl":"info","stage":"nlp","traceId":"line_1754865982581_lqo3l8","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:46:22  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:46:23  📊 規則提取置信度: 0.67
2025-08-10 22:46:23  🤖 啟用 AI 輔助提取...
2025-08-10 22:46:24  ✅ 最終 slots: {
2025-08-10 22:46:24    courseName: '鋼琴課',
2025-08-10 22:46:24    timeReference: '前',
2025-08-10 22:46:24    reminderTime: 60,
2025-08-10 22:46:24    reminderNote: '提醒我'
2025-08-10 22:46:24  }
2025-08-10 22:46:24  {"ts":"2025-08-10T22:46:24.137Z","lvl":"info","stage":"slots","traceId":"line_1754865982581_lqo3l8","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime","reminderNote"]}
2025-08-10 22:46:24  🎯 執行任務: set_reminder
2025-08-10 22:46:24  🔔 開始處理設定提醒任務: {
2025-08-10 22:46:24    courseName: '鋼琴課',
2025-08-10 22:46:24    timeReference: '前',
2025-08-10 22:46:24    reminderTime: 60,
2025-08-10 22:46:24    reminderNote: '提醒我'
2025-08-10 22:46:24  }
2025-08-10 22:46:24  📊 任務執行結果: {
2025-08-10 22:46:24    success: false,
2025-08-10 22:46:24    code: 'MISSING_STUDENT',
2025-08-10 22:46:24    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 22:46:24  }
2025-08-10 22:46:24  {"ts":"2025-08-10T22:46:24.137Z","lvl":"info","stage":"task","traceId":"line_1754865982581_lqo3l8","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 22:46:24  🔍 檢查 replyToken: test-reply-token-1754865982416
2025-08-10 22:46:24  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:46:24  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 22:46:24  {"ts":"2025-08-10T22:46:24.420Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865982581_lqo3l8","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 22:46:37  📨 收到 1 個事件
2025-08-10 22:46:37  📋 事件類型: message
2025-08-10 22:46:37  🔍 完整事件 JSON: {
2025-08-10 22:46:37    "type": "message",
2025-08-10 22:46:37    "message": {
2025-08-10 22:46:37      "type": "text",
2025-08-10 22:46:37      "text": "提醒我小明的物理課"
2025-08-10 22:46:37    },
2025-08-10 22:46:37    "source": {
2025-08-10 22:46:37      "userId": "U_test_user_qa",
2025-08-10 22:46:37      "type": "user"
2025-08-10 22:46:37    },
2025-08-10 22:46:37    "replyToken": "test-reply-token-1754865996955",
2025-08-10 22:46:37    "timestamp": 1754865996955
2025-08-10 22:46:37  }
2025-08-10 22:46:37  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:46:37  {"ts":"2025-08-10T22:46:37.139Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754865997139_rex8fr","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 22:46:37  🔍 用戶ID類型: string
2025-08-10 22:46:37  🔍 是否測試用戶: true
2025-08-10 22:46:37  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:46:37  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 22:46:37  ✅ 規則匹配成功: set_reminder
2025-08-10 22:46:37  {"ts":"2025-08-10T22:46:37.281Z","lvl":"info","stage":"nlp","traceId":"line_1754865997139_rex8fr","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:46:37  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:46:37  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:46:37  📊 規則提取置信度: 0.67
2025-08-10 22:46:37  🤖 啟用 AI 輔助提取...
2025-08-10 22:46:39  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 22:46:39  {"ts":"2025-08-10T22:46:39.306Z","lvl":"info","stage":"slots","traceId":"line_1754865997139_rex8fr","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 22:46:39  🎯 執行任務: set_reminder
2025-08-10 22:46:39  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 22:46:39  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 22:46:39  📊 任務執行結果: {
2025-08-10 22:46:39    success: false,
2025-08-10 22:46:39    code: 'NOT_FOUND',
2025-08-10 22:46:39    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 22:46:39  }
2025-08-10 22:46:39  {"ts":"2025-08-10T22:46:39.382Z","lvl":"info","stage":"task","traceId":"line_1754865997139_rex8fr","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":76}
2025-08-10 22:46:39  🔍 檢查 replyToken: test-reply-token-1754865996955
2025-08-10 22:46:39  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:46:39  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 22:46:39  {"ts":"2025-08-10T22:46:39.667Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754865997139_rex8fr","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 22:46:54  📨 收到 1 個事件
2025-08-10 22:46:54  📋 事件類型: message
2025-08-10 22:46:54  🔍 完整事件 JSON: {
2025-08-10 22:46:54    "type": "message",
2025-08-10 22:46:54    "message": {
2025-08-10 22:46:54      "type": "text",
2025-08-10 22:46:54      "text": "小明的數學課改到下午4點"
2025-08-10 22:46:54    },
2025-08-10 22:46:54  📨 收到 1 個事件
2025-08-10 22:46:54  📋 事件類型: message
2025-08-10 22:46:54  🔍 完整事件 JSON: {
2025-08-10 22:46:54    "type": "message",
2025-08-10 22:46:54    "message": {
2025-08-10 22:46:54      "type": "text",
2025-08-10 22:46:54      "text": "小明的數學課改到下午4點"
2025-08-10 22:46:54    },
2025-08-10 22:46:54    "source": {
2025-08-10 22:46:54      "userId": "U_test_user_qa",
2025-08-10 22:46:54      "type": "user"
2025-08-10 22:46:54    },
2025-08-10 22:46:54    "replyToken": "test-reply-token-1754866013978",
2025-08-10 22:46:54    "timestamp": 1754866013978
2025-08-10 22:46:54  }
2025-08-10 22:46:54  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:46:54  {"ts":"2025-08-10T22:46:54.360Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866014360_9uav26","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 22:46:54  🔍 用戶ID類型: string
2025-08-10 22:46:54  🔍 是否測試用戶: true
2025-08-10 22:46:54  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:46:54  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 22:46:54  ✅ 規則匹配成功: modify_course
2025-08-10 22:46:54  {"ts":"2025-08-10T22:46:54.503Z","lvl":"info","stage":"nlp","traceId":"line_1754866014360_9uav26","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 22:46:54  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 22:46:54  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 22:46:54  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:46:54  📊 規則提取置信度: 0.00
2025-08-10 22:46:54  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 22:46:56  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 22:46:56  {"ts":"2025-08-10T22:46:56.246Z","lvl":"info","stage":"slots","traceId":"line_1754866014360_9uav26","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 22:46:56  🎯 執行任務: modify_course
2025-08-10 22:46:56  ✏️ 執行修改操作任務: {
2025-08-10 22:46:56    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 22:46:56    userId: 'U_test_user_qa'
2025-08-10 22:46:56  }
2025-08-10 22:46:56  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 22:46:56  {"ts":"2025-08-10T22:46:56.318Z","lvl":"info","stage":"task","traceId":"line_1754866014360_9uav26","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":72}
2025-08-10 22:46:56  🔍 檢查 replyToken: test-reply-token-1754866013978
2025-08-10 22:46:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:46:56  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 22:46:56  {"ts":"2025-08-10T22:46:56.603Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866014360_9uav26","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 22:47:09  📨 收到 1 個事件
2025-08-10 22:47:09  📋 事件類型: message
2025-08-10 22:47:09  🔍 完整事件 JSON: {
2025-08-10 22:47:09    "type": "message",
2025-08-10 22:47:09    "message": {
2025-08-10 22:47:09      "type": "text",
2025-08-10 22:47:09      "text": "小明每天的晨練課改到早上7點"
2025-08-10 22:47:09    },
2025-08-10 22:47:09    "source": {
2025-08-10 22:47:09      "userId": "U_test_user_qa",
2025-08-10 22:47:09      "type": "user"
2025-08-10 22:47:09    },
2025-08-10 22:47:09    "replyToken": "test-reply-token-1754866029101",
2025-08-10 22:47:09    "timestamp": 1754866029101
2025-08-10 22:47:09  }
2025-08-10 22:47:09  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:47:09  {"ts":"2025-08-10T22:47:09.473Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866029473_9spqn6","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 22:47:09  🔍 用戶ID類型: string
2025-08-10 22:47:09  🔍 是否測試用戶: true
2025-08-10 22:47:09  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:47:09  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 22:47:09  ✅ 規則匹配成功: create_recurring_course
2025-08-10 22:47:09  {"ts":"2025-08-10T22:47:09.615Z","lvl":"info","stage":"nlp","traceId":"line_1754866029473_9spqn6","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 22:47:09  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 22:47:09  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 22:47:09  ✅ 時間解析成功: {
2025-08-10 22:47:09    input: '小明每天的晨練課改到早上7點',
2025-08-10 22:47:09    output: '07:00',
2025-08-10 22:47:09    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 22:47:09  }
2025-08-10 22:47:09  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:47:09  📊 規則提取置信度: 0.67
2025-08-10 22:47:09  🤖 啟用 AI 輔助提取...
2025-08-10 22:47:11  ✅ 最終 slots: {
2025-08-10 22:47:11    studentName: '小明',
2025-08-10 22:47:11    courseName: '晨練課',
2025-08-10 22:47:11    scheduleTime: '07:00',
2025-08-10 22:47:11    recurring: false
2025-08-10 22:47:11  }
2025-08-10 22:47:11  {"ts":"2025-08-10T22:47:11.964Z","lvl":"info","stage":"slots","traceId":"line_1754866029473_9spqn6","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:11  🎯 執行任務: create_recurring_course
2025-08-10 22:47:11  🎯 開始處理新增課程任務
2025-08-10 22:47:11  📋 接收參數: {
2025-08-10 22:47:11    studentName: '小明',
2025-08-10 22:47:11    courseName: '晨練課',
2025-08-10 22:47:11    scheduleTime: '07:00',
2025-08-10 22:47:11    recurring: false
2025-08-10 22:47:11  }
2025-08-10 22:47:12  📊 任務執行結果: {
2025-08-10 22:47:12    success: false,
2025-08-10 22:47:12    code: 'MISSING_FIELDS',
2025-08-10 22:47:12    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 22:47:12    expectingInput: true,
2025-08-10 22:47:12    missingFields: [ '課程日期' ]
2025-08-10 22:47:12  }
2025-08-10 22:47:12  {"ts":"2025-08-10T22:47:12.107Z","lvl":"info","stage":"task","traceId":"line_1754866029473_9spqn6","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":143}
2025-08-10 22:47:12  🔍 檢查 replyToken: test-reply-token-1754866029101
2025-08-10 22:47:12  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:47:12  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 22:47:12  📊 任務執行結果: {
2025-08-10 22:47:12    success: false,
2025-08-10 22:47:12    code: 'MISSING_FIELDS',
2025-08-10 22:47:12    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 22:47:12    expectingInput: true,
2025-08-10 22:47:12    missingFields: [ '課程日期' ]
2025-08-10 22:47:12  }
2025-08-10 22:47:12  {"ts":"2025-08-10T22:47:12.107Z","lvl":"info","stage":"task","traceId":"line_1754866029473_9spqn6","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":143}
2025-08-10 22:47:12  🔍 檢查 replyToken: test-reply-token-1754866029101
2025-08-10 22:47:12  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:47:12  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 22:47:12  
2025-08-10 22:47:12  範例：「小明每週三下午3點數學課」
2025-08-10 22:47:12  {"ts":"2025-08-10T22:47:12.393Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866029473_9spqn6","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 22:47:25  📨 收到 1 個事件
2025-08-10 22:47:25  📋 事件類型: message
2025-08-10 22:47:25  🔍 完整事件 JSON: {
2025-08-10 22:47:25    "type": "message",
2025-08-10 22:47:25    "message": {
2025-08-10 22:47:25      "type": "text",
2025-08-10 22:47:25      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 22:47:25    },
2025-08-10 22:47:25    "source": {
2025-08-10 22:47:25      "userId": "U_test_user_qa",
2025-08-10 22:47:25      "type": "user"
2025-08-10 22:47:25    },
2025-08-10 22:47:25    "replyToken": "test-reply-token-1754866045359",
2025-08-10 22:47:25    "timestamp": 1754866045359
2025-08-10 22:47:25  }
2025-08-10 22:47:25  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:47:25  {"ts":"2025-08-10T22:47:25.558Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 22:47:25  🔍 用戶ID類型: string
2025-08-10 22:47:25  🔍 是否測試用戶: true
2025-08-10 22:47:25  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:47:25  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 22:47:25  ✅ 規則匹配成功: create_recurring_course
2025-08-10 22:47:25  {"ts":"2025-08-10T22:47:25.701Z","lvl":"info","stage":"nlp","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 22:47:25  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 22:47:25  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 22:47:25  ✅ 時間解析成功: {
2025-08-10 22:47:25    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 22:47:25    output: '15:00',
2025-08-10 22:47:25    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 22:47:25  }
2025-08-10 22:47:25  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:47:25  📊 規則提取置信度: 0.67
2025-08-10 22:47:25  🤖 啟用 AI 輔助提取...
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
2025-08-10 22:47:27  ✅ 最終 slots: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  {"ts":"2025-08-10T22:47:27.077Z","lvl":"info","stage":"slots","traceId":"line_1754866045558_xk3nrb","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:47:27  🎯 執行任務: create_recurring_course
2025-08-10 22:47:27  🎯 開始處理新增課程任務
2025-08-10 22:47:27  📋 接收參數: {
2025-08-10 22:47:27    studentName: 'Lumi',
2025-08-10 22:47:27    courseName: '鋼琴課',
2025-08-10 22:47:27    scheduleTime: '15:00',
2025-08-10 22:47:27    recurring: true
2025-08-10 22:47:27  }
2025-08-10 22:47:27  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:47:27  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:47:27      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:47:27      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:47:27      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:47:27      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:47:27      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:47:27      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:47:27      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:47:27      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:47:27      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:47:27      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:47:27    config: {
2025-08-10 22:47:27      url: URL {
2025-08-10 22:47:27        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        origin: 'https://www.googleapis.com',
2025-08-10 22:47:27        protocol: 'https:',
2025-08-10 22:47:27        username: '',
2025-08-10 22:47:27        password: '',
2025-08-10 22:47:27        host: 'www.googleapis.com',
2025-08-10 22:47:27        hostname: 'www.googleapis.com',
2025-08-10 22:47:27        port: '',
2025-08-10 22:47:27        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:47:27        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:47:27        searchParams: URLSearchParams {
2025-08-10 22:47:27          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27          'singleEvents' => 'true',
2025-08-10 22:47:27          'orderBy' => 'startTime' },
2025-08-10 22:47:27        hash: ''
2025-08-10 22:47:27      },
2025-08-10 22:47:27      method: 'GET',
2025-08-10 22:47:27      apiVersion: '',
2025-08-10 22:47:27      userAgentDirectives: [ [Object] ],
2025-08-10 22:47:27      paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27      headers: Headers {
2025-08-10 22:47:27        'accept-encoding': 'gzip',
2025-08-10 22:47:27        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      params: {
2025-08-10 22:47:27        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:47:27        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:47:27        singleEvents: true,
2025-08-10 22:47:27        orderBy: 'startTime'
2025-08-10 22:47:27      },
2025-08-10 22:47:27      validateStatus: [Function (anonymous)],
2025-08-10 22:47:27      retry: true,
2025-08-10 22:47:27      responseType: 'unknown',
2025-08-10 22:47:27      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:47:27      retryConfig: {
2025-08-10 22:47:27        currentRetryAttempt: 0,
2025-08-10 22:47:27  📝 準備建立事件: calendarId= 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com  resource= {"summary":"[U_test_user_qa] Lumi - 鋼琴課","description":"Lumi的課程\n由 LINE 課程管理機器人自動創建","start":{"dateTime":"2025-08-11T15:00:00+08:00","timeZone":"Asia/Taipei"},"end":{"dateTime":"2025-08-11T16:00:00+08:00","timeZone":"Asia/Taipei"},"recurrence":["RRULE:FREQ=WEEKLY"],"extendedProperties":{"private":{"userId":"U_test_user_qa","studentName":"Lumi","courseId":""}},"reminders":{"useDefault":false,"overrides":[]}}
2025-08-10 22:47:27        retry: 3,
2025-08-10 22:47:27        httpMethodsToRetry: [Array],
2025-08-10 22:47:27        noResponseRetries: 2,
2025-08-10 22:47:27        retryDelayMultiplier: 2,
2025-08-10 22:47:27        timeOfFirstRequest: 1754866047462,
2025-08-10 22:47:27        totalTimeout: 9007199254740991,
2025-08-10 22:47:27        maxRetryDelay: 9007199254740991,
2025-08-10 22:47:27        statusCodesToRetry: [Array]
2025-08-10 22:47:27      }
2025-08-10 22:47:27    },
2025-08-10 22:47:27    response: Response {
2025-08-10 22:47:27      size: 0,
2025-08-10 22:47:27      data: { error: [Object] },
2025-08-10 22:47:27      config: {
2025-08-10 22:47:27        url: URL {},
2025-08-10 22:47:27        method: 'GET',
2025-08-10 22:47:27        apiVersion: '',
2025-08-10 22:47:27        userAgentDirectives: [Array],
2025-08-10 22:47:27        paramsSerializer: [Function (anonymous)],
2025-08-10 22:47:27        headers: Headers {
2025-08-10 22:47:27          'accept-encoding': 'gzip',
2025-08-10 22:47:27          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:47:27          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:47:27          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:47:27        },
2025-08-10 22:47:27        params: [Object],
2025-08-10 22:47:27        validateStatus: [Function (anonymous)],
2025-08-10 22:47:27        retry: true,
2025-08-10 22:47:27        responseType: 'unknown',
2025-08-10 22:47:27        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:47:27      },
