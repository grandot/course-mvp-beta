2025-08-10 22:55:18  📨 收到 1 個事件
2025-08-10 22:55:18  📋 事件類型: message
2025-08-10 22:55:18  🔍 完整事件 JSON: {
2025-08-10 22:55:18    "type": "message",
2025-08-10 22:55:18    "message": {
2025-08-10 22:55:18      "type": "text",
2025-08-10 22:55:18      "text": "小明的晨練課每天幾點？"
2025-08-10 22:55:18    },
2025-08-10 22:55:18    "source": {
2025-08-10 22:55:18      "userId": "U_test_user_qa",
2025-08-10 22:55:18      "type": "user"
2025-08-10 22:55:18    },
2025-08-10 22:55:18    "replyToken": "test-reply-token-1754866518086",
2025-08-10 22:55:18    "timestamp": 1754866518086
2025-08-10 22:55:18  }
2025-08-10 22:55:18  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:55:18  {"ts":"2025-08-10T22:55:18.286Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866518286_ikemc9","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 22:55:18  🔍 用戶ID類型: string
2025-08-10 22:55:18  🔍 是否測試用戶: true
2025-08-10 22:55:18  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:55:18  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 22:55:18  🤖 啟用 AI 備援識別...
2025-08-10 22:55:19  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 22:55:19  {"ts":"2025-08-10T22:55:19.203Z","lvl":"info","stage":"nlp","traceId":"line_1754866518286_ikemc9","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 22:55:19  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 22:55:19  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:55:19  📊 規則提取置信度: 0.50
2025-08-10 22:55:19  🤖 啟用 AI 輔助提取...
2025-08-10 22:55:20  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:55:20  {"ts":"2025-08-10T22:55:20.740Z","lvl":"info","stage":"slots","traceId":"line_1754866518286_ikemc9","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 22:55:20  🎯 執行任務: query_schedule
2025-08-10 22:55:20  🎯 開始處理查詢課表任務
2025-08-10 22:55:20  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 22:55:20  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:55:20  📚 查詢到 353 筆課程資料
2025-08-10 22:55:21  📚 查詢到 14 筆課程
2025-08-10 22:55:21  📊 任務執行結果: {
2025-08-10 22:55:21    success: true,
2025-08-10 22:55:21    code: 'QUERY_OK',
2025-08-10 22:55:21    message: '📅 小明本週的課程安排\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/9 (週六)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/10 (週日)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/11 (週一)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/12 (週二)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/13 (週三)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/14 (週四)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/15 (週五)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄',
2025-08-10 22:55:21    data: {
2025-08-10 22:55:21      courses: [
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object]
2025-08-10 22:55:21      ],
2025-08-10 22:55:21      courseCount: 14,
2025-08-10 22:55:21      dateRange: {
2025-08-10 22:55:21        startDate: '2025-08-10',
2025-08-10 22:55:21        endDate: '2025-08-16',
2025-08-10 22:55:21        description: '本週'
2025-08-10 22:55:21      }
2025-08-10 22:55:21    }
2025-08-10 22:55:21  }
2025-08-10 22:55:21  {"ts":"2025-08-10T22:55:21.080Z","lvl":"info","stage":"task","traceId":"line_1754866518286_ikemc9","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":340}
2025-08-10 22:55:21  🔍 檢查 replyToken: test-reply-token-1754866518086
2025-08-10 22:55:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:55:21  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/9 (週六)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/10 (週日)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/11 (週一)
2025-08-10 22:55:21  📚 查詢到 14 筆課程
2025-08-10 22:55:21  📊 任務執行結果: {
2025-08-10 22:55:21    success: true,
2025-08-10 22:55:21    code: 'QUERY_OK',
2025-08-10 22:55:21    message: '📅 小明本週的課程安排\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/9 (週六)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/10 (週日)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/11 (週一)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/12 (週二)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/13 (週三)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/14 (週四)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '\n' +
2025-08-10 22:55:21      '📆 8/15 (週五)\n' +
2025-08-10 22:55:21      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 22:55:21      '  上午8:00 - 晨練課 🔄',
2025-08-10 22:55:21    data: {
2025-08-10 22:55:21      courses: [
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object],
2025-08-10 22:55:21        [Object], [Object]
2025-08-10 22:55:21      ],
2025-08-10 22:55:21      courseCount: 14,
2025-08-10 22:55:21      dateRange: {
2025-08-10 22:55:21        startDate: '2025-08-10',
2025-08-10 22:55:21        endDate: '2025-08-16',
2025-08-10 22:55:21        description: '本週'
2025-08-10 22:55:21      }
2025-08-10 22:55:21    }
2025-08-10 22:55:21  }
2025-08-10 22:55:21  {"ts":"2025-08-10T22:55:21.080Z","lvl":"info","stage":"task","traceId":"line_1754866518286_ikemc9","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":340}
2025-08-10 22:55:21  🔍 檢查 replyToken: test-reply-token-1754866518086
2025-08-10 22:55:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:55:21  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/9 (週六)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/10 (週日)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/11 (週一)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/12 (週二)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/13 (週三)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/14 (週四)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  
2025-08-10 22:55:21  📆 8/15 (週五)
2025-08-10 22:55:21    上午7:00 - 晨練課 🔄
2025-08-10 22:55:21    上午8:00 - 晨練課 🔄
2025-08-10 22:55:21  {"ts":"2025-08-10T22:55:21.364Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866518286_ikemc9","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 22:55:33  📨 收到 1 個事件
2025-08-10 22:55:33  📋 事件類型: message
2025-08-10 22:55:33  🔍 完整事件 JSON: {
2025-08-10 22:55:33    "type": "message",
2025-08-10 22:55:33    "message": {
2025-08-10 22:55:33      "type": "text",
2025-08-10 22:55:33      "text": "查詢Lumi的重複課程"
2025-08-10 22:55:33    },
2025-08-10 22:55:33    "source": {
2025-08-10 22:55:33      "userId": "U_test_user_qa",
2025-08-10 22:55:33      "type": "user"
2025-08-10 22:55:33    },
2025-08-10 22:55:33    "replyToken": "test-reply-token-1754866533840",
2025-08-10 22:55:33    "timestamp": 1754866533840
2025-08-10 22:55:33  }
2025-08-10 22:55:33  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:55:33  📨 收到 1 個事件
2025-08-10 22:55:33  📋 事件類型: message
2025-08-10 22:55:33  🔍 完整事件 JSON: {
2025-08-10 22:55:33    "type": "message",
2025-08-10 22:55:33    "message": {
2025-08-10 22:55:33      "type": "text",
2025-08-10 22:55:33      "text": "查詢Lumi的重複課程"
2025-08-10 22:55:33    },
2025-08-10 22:55:33    "source": {
2025-08-10 22:55:33      "userId": "U_test_user_qa",
2025-08-10 22:55:33      "type": "user"
2025-08-10 22:55:33    },
2025-08-10 22:55:33    "replyToken": "test-reply-token-1754866533840",
2025-08-10 22:55:33    "timestamp": 1754866533840
2025-08-10 22:55:33  }
2025-08-10 22:55:33  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:55:34  {"ts":"2025-08-10T22:55:34.044Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866534044_xp4obb","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 22:55:34  🔍 用戶ID類型: string
2025-08-10 22:55:34  🔍 是否測試用戶: true
2025-08-10 22:55:34  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:55:34  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 22:55:34  ✅ 規則匹配成功: query_schedule
2025-08-10 22:55:34  {"ts":"2025-08-10T22:55:34.186Z","lvl":"info","stage":"nlp","traceId":"line_1754866534044_xp4obb","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 22:55:34  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 22:55:34  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:55:34  📊 規則提取置信度: 0.50
2025-08-10 22:55:34  🤖 啟用 AI 輔助提取...
2025-08-10 22:55:35  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 22:55:35  {"ts":"2025-08-10T22:55:35.835Z","lvl":"info","stage":"slots","traceId":"line_1754866534044_xp4obb","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 22:55:35  🎯 執行任務: query_schedule
2025-08-10 22:55:35  🎯 開始處理查詢課表任務
2025-08-10 22:55:35  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 22:55:35  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 22:55:36  📚 查詢到 345 筆課程資料
2025-08-10 22:55:36  📚 查詢到 0 筆課程
2025-08-10 22:55:36  📊 任務執行結果: {
2025-08-10 22:55:36    success: true,
2025-08-10 22:55:36    code: 'QUERY_OK_EMPTY',
2025-08-10 22:55:36    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 22:55:36      '\n' +
2025-08-10 22:55:36      '💡 您可以：\n' +
2025-08-10 22:55:36      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 22:55:36      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 22:55:36      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 22:55:36    data: {
2025-08-10 22:55:36      courseCount: 0,
2025-08-10 22:55:36      dateRange: {
2025-08-10 22:55:36        startDate: '2025-08-10',
2025-08-10 22:55:36        endDate: '2025-08-16',
2025-08-10 22:55:36        description: '本週'
2025-08-10 22:55:36      }
2025-08-10 22:55:36    }
2025-08-10 22:55:36  }
2025-08-10 22:55:36  {"ts":"2025-08-10T22:55:36.197Z","lvl":"info","stage":"task","traceId":"line_1754866534044_xp4obb","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":362}
2025-08-10 22:55:36  🔍 檢查 replyToken: test-reply-token-1754866533840
2025-08-10 22:55:36  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:55:36  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 22:55:36  
2025-08-10 22:55:36  💡 您可以：
2025-08-10 22:55:36  • 新增課程：「小明明天上午10點英文課」
2025-08-10 22:55:36  • 查詢其他時間：「小明下週的課表」
2025-08-10 22:55:36  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 22:55:36  {"ts":"2025-08-10T22:55:36.481Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866534044_xp4obb","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 22:55:49  📨 收到 1 個事件
2025-08-10 22:55:49  📋 事件類型: message
2025-08-10 22:55:49  🔍 完整事件 JSON: {
2025-08-10 22:55:49    "type": "message",
2025-08-10 22:55:49    "message": {
2025-08-10 22:55:49      "type": "text",
2025-08-10 22:55:49      "text": "今天小明的數學課學了分數加減法"
2025-08-10 22:55:49    },
2025-08-10 22:55:49    "source": {
2025-08-10 22:55:49      "userId": "U_test_user_qa",
2025-08-10 22:55:49      "type": "user"
2025-08-10 22:55:49    },
2025-08-10 22:55:49    "replyToken": "test-reply-token-1754866548911",
2025-08-10 22:55:49    "timestamp": 1754866548911
2025-08-10 22:55:49  }
2025-08-10 22:55:49  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:55:49  {"ts":"2025-08-10T22:55:49.114Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866549114_g9acro","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 22:55:49  🔍 用戶ID類型: string
2025-08-10 22:55:49  🔍 是否測試用戶: true
2025-08-10 22:55:49  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:55:49  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 22:55:49  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:55:49  {"ts":"2025-08-10T22:55:49.254Z","lvl":"info","stage":"nlp","traceId":"line_1754866549114_g9acro","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:55:49  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:55:49  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:55:49  📊 規則提取置信度: 1.00
2025-08-10 22:55:49  🤖 啟用 AI 輔助提取...
2025-08-10 22:55:50  ✅ 最終 slots: {
2025-08-10 22:55:50    studentName: '小明',
2025-08-10 22:55:50    courseName: '數學課',
2025-08-10 22:55:50    timeReference: 'today',
2025-08-10 22:55:50    content: '分數加減法'
2025-08-10 22:55:50  }
2025-08-10 22:55:50  {"ts":"2025-08-10T22:55:50.688Z","lvl":"info","stage":"slots","traceId":"line_1754866549114_g9acro","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:55:50  🎯 執行任務: record_content
2025-08-10 22:55:50  📝 開始處理記錄課程內容任務: {
2025-08-10 22:55:50    studentName: '小明',
2025-08-10 22:55:50  ✅ 最終 slots: {
2025-08-10 22:55:50    studentName: '小明',
2025-08-10 22:55:50    courseName: '數學課',
2025-08-10 22:55:50    timeReference: 'today',
2025-08-10 22:55:50    content: '分數加減法'
2025-08-10 22:55:50  }
2025-08-10 22:55:50  {"ts":"2025-08-10T22:55:50.688Z","lvl":"info","stage":"slots","traceId":"line_1754866549114_g9acro","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:55:50  🎯 執行任務: record_content
2025-08-10 22:55:50  📝 開始處理記錄課程內容任務: {
2025-08-10 22:55:50    studentName: '小明',
2025-08-10 22:55:50    courseName: '數學課',
2025-08-10 22:55:50    timeReference: 'today',
2025-08-10 22:55:50    content: '分數加減法'
2025-08-10 22:55:50  }
2025-08-10 22:55:50  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 22:55:50  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 22:55:50  ✅ 文檔已添加到 course_contents: IkykGcDKwO2J2tz0hQRl
2025-08-10 22:55:50  ✅ 課程內容記錄已儲存: IkykGcDKwO2J2tz0hQRl
2025-08-10 22:55:51  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 22:55:51  📊 任務執行結果: {
2025-08-10 22:55:51    success: true,
2025-08-10 22:55:51    code: 'RECORD_CONTENT_OK',
2025-08-10 22:55:51    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 22:55:51    data: {
2025-08-10 22:55:51      recordId: 'IkykGcDKwO2J2tz0hQRl',
2025-08-10 22:55:51      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 22:55:51      targetDate: '2025-08-10'
2025-08-10 22:55:51    }
2025-08-10 22:55:51  }
2025-08-10 22:55:51  {"ts":"2025-08-10T22:55:51.051Z","lvl":"info","stage":"task","traceId":"line_1754866549114_g9acro","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":363}
2025-08-10 22:55:51  🔍 檢查 replyToken: test-reply-token-1754866548911
2025-08-10 22:55:51  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:55:51  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:55:51  📚 課程：小明 - 數學課
2025-08-10 22:55:51  📅 日期：2025-08-10
2025-08-10 22:55:51  💬 內容：分數加減法
2025-08-10 22:55:51  {"ts":"2025-08-10T22:55:51.334Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866549114_g9acro","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 22:56:03  📨 收到 1 個事件
2025-08-10 22:56:03  📋 事件類型: message
2025-08-10 22:56:03  🔍 完整事件 JSON: {
2025-08-10 22:56:03    "type": "message",
2025-08-10 22:56:03    "message": {
2025-08-10 22:56:03      "type": "text",
2025-08-10 22:56:03      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 22:56:03    },
2025-08-10 22:56:03    "source": {
2025-08-10 22:56:03      "userId": "U_test_user_qa",
2025-08-10 22:56:03      "type": "user"
2025-08-10 22:56:03    },
2025-08-10 22:56:03    "replyToken": "test-reply-token-1754866563853",
2025-08-10 22:56:03    "timestamp": 1754866563853
2025-08-10 22:56:03  }
2025-08-10 22:56:03  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:56:04  {"ts":"2025-08-10T22:56:04.058Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866564058_spd77q","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 22:56:04  🔍 用戶ID類型: string
2025-08-10 22:56:04  🔍 是否測試用戶: true
2025-08-10 22:56:04  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:56:04  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 22:56:04  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:56:04  {"ts":"2025-08-10T22:56:04.199Z","lvl":"info","stage":"nlp","traceId":"line_1754866564058_spd77q","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:56:04  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:56:04  📊 規則提取置信度: 0.33
2025-08-10 22:56:04  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 22:56:05  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 22:56:05  {"ts":"2025-08-10T22:56:05.903Z","lvl":"info","stage":"slots","traceId":"line_1754866564058_spd77q","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 22:56:05  🎯 執行任務: record_content
2025-08-10 22:56:05  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 22:56:05  ✅ 文檔已添加到 course_contents: AS5vPyW5jEplZBb477nZ
2025-08-10 22:56:05  ✅ 課程內容記錄已儲存: AS5vPyW5jEplZBb477nZ
2025-08-10 22:56:05  📊 任務執行結果: {
2025-08-10 22:56:05    success: true,
2025-08-10 22:56:05    code: 'RECORD_CONTENT_OK',
2025-08-10 22:56:05    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 22:56:05    data: {
2025-08-10 22:56:05      recordId: 'AS5vPyW5jEplZBb477nZ',
2025-08-10 22:56:05      courseId: null,
2025-08-10 22:56:05      targetDate: '2025-08-09'
2025-08-10 22:56:05    }
2025-08-10 22:56:05  }
2025-08-10 22:56:05  {"ts":"2025-08-10T22:56:05.975Z","lvl":"info","stage":"task","traceId":"line_1754866564058_spd77q","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":72}
2025-08-10 22:56:06  🔍 檢查 replyToken: test-reply-token-1754866563853
2025-08-10 22:56:06  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:56:06  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:56:06  📝 記錄為獨立內容
2025-08-10 22:56:06  📚 課程：鋼琴課
2025-08-10 22:56:06  📅 日期：2025-08-09
2025-08-10 22:56:06  💬 內容：練習了小星星
2025-08-10 22:56:06  {"ts":"2025-08-10T22:56:06.259Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866564058_spd77q","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 22:56:18  📨 收到 1 個事件
2025-08-10 22:56:18  📋 事件類型: message
2025-08-10 22:56:18  🔍 完整事件 JSON: {
2025-08-10 22:56:18    "type": "message",
2025-08-10 22:56:18    "message": {
2025-08-10 22:56:18      "type": "text",
2025-08-10 22:56:18      "text": "小明昨天數學課學了什麼？"
2025-08-10 22:56:18    },
2025-08-10 22:56:18    "source": {
2025-08-10 22:56:18      "userId": "U_test_user_qa",
2025-08-10 22:56:18      "type": "user"
2025-08-10 22:56:18    },
2025-08-10 22:56:18  📨 收到 1 個事件
2025-08-10 22:56:18  📋 事件類型: message
2025-08-10 22:56:18  🔍 完整事件 JSON: {
2025-08-10 22:56:18    "type": "message",
2025-08-10 22:56:18    "message": {
2025-08-10 22:56:18      "type": "text",
2025-08-10 22:56:18      "text": "小明昨天數學課學了什麼？"
2025-08-10 22:56:18    },
2025-08-10 22:56:18    "source": {
2025-08-10 22:56:18      "userId": "U_test_user_qa",
2025-08-10 22:56:18      "type": "user"
2025-08-10 22:56:18    },
2025-08-10 22:56:18    "replyToken": "test-reply-token-1754866578729",
2025-08-10 22:56:18    "timestamp": 1754866578729
2025-08-10 22:56:18  }
2025-08-10 22:56:18  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:56:18  {"ts":"2025-08-10T22:56:18.935Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866578935_ly1t6r","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 22:56:18  🔍 用戶ID類型: string
2025-08-10 22:56:18  🔍 是否測試用戶: true
2025-08-10 22:56:18  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:56:18  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 22:56:19  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:56:19  {"ts":"2025-08-10T22:56:19.076Z","lvl":"info","stage":"nlp","traceId":"line_1754866578935_ly1t6r","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:56:19  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:56:19  📊 規則提取置信度: 0.67
2025-08-10 22:56:19  🤖 啟用 AI 輔助提取...
2025-08-10 22:56:20  ✅ 最終 slots: {
2025-08-10 22:56:20    studentName: '小明',
2025-08-10 22:56:20    courseName: '數學課',
2025-08-10 22:56:20    timeReference: 'yesterday',
2025-08-10 22:56:20    content: '什麼？'
2025-08-10 22:56:20  }
2025-08-10 22:56:20  {"ts":"2025-08-10T22:56:20.954Z","lvl":"info","stage":"slots","traceId":"line_1754866578935_ly1t6r","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:56:20  🎯 執行任務: record_content
2025-08-10 22:56:20  📝 開始處理記錄課程內容任務: {
2025-08-10 22:56:20    studentName: '小明',
2025-08-10 22:56:20    courseName: '數學課',
2025-08-10 22:56:20    timeReference: 'yesterday',
2025-08-10 22:56:20    content: '什麼？'
2025-08-10 22:56:20  }
2025-08-10 22:56:20  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 22:56:21  ❓ 未找到完全匹配的課程
2025-08-10 22:56:21  ✅ 文檔已添加到 course_contents: 9QrfGAE1Tjqy4upgqN8Q
2025-08-10 22:56:21  ✅ 課程內容記錄已儲存: 9QrfGAE1Tjqy4upgqN8Q
2025-08-10 22:56:21  📊 任務執行結果: {
2025-08-10 22:56:21    success: true,
2025-08-10 22:56:21    code: 'RECORD_CONTENT_OK',
2025-08-10 22:56:21    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 22:56:21    data: {
2025-08-10 22:56:21      recordId: '9QrfGAE1Tjqy4upgqN8Q',
2025-08-10 22:56:21      courseId: null,
2025-08-10 22:56:21      targetDate: '2025-08-09'
2025-08-10 22:56:21    }
2025-08-10 22:56:21  }
2025-08-10 22:56:21  {"ts":"2025-08-10T22:56:21.173Z","lvl":"info","stage":"task","traceId":"line_1754866578935_ly1t6r","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":219}
2025-08-10 22:56:21  🔍 檢查 replyToken: test-reply-token-1754866578729
2025-08-10 22:56:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:56:21  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:56:21  📝 記錄為獨立內容
2025-08-10 22:56:21  👨‍🎓 學生：小明
2025-08-10 22:56:21  📚 課程：數學課
2025-08-10 22:56:21  📅 日期：2025-08-09
2025-08-10 22:56:21  💬 內容：什麼？
2025-08-10 22:56:21  {"ts":"2025-08-10T22:56:21.455Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866578935_ly1t6r","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 22:56:28  📨 收到 1 個事件
2025-08-10 22:56:28  📋 事件類型: message
2025-08-10 22:56:28  🔍 完整事件 JSON: {
2025-08-10 22:56:28    "type": "message",
2025-08-10 22:56:28    "message": {
2025-08-10 22:56:28      "type": "text",
2025-08-10 22:56:28      "text": "記錄小明今天化學課的內容"
2025-08-10 22:56:28    },
2025-08-10 22:56:28    "source": {
2025-08-10 22:56:28      "userId": "U_test_user_qa",
2025-08-10 22:56:28      "type": "user"
2025-08-10 22:56:28    },
2025-08-10 22:56:28    "replyToken": "test-reply-token-1754866588456",
2025-08-10 22:56:28    "timestamp": 1754866588456
2025-08-10 22:56:28  }
2025-08-10 22:56:28  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:56:28  {"ts":"2025-08-10T22:56:28.768Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866588768_ba4ul7","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 22:56:28  🔍 用戶ID類型: string
2025-08-10 22:56:28  🔍 是否測試用戶: true
2025-08-10 22:56:28  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:56:28  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 22:56:28  📝 內容記錄優先規則命中 → record_content
2025-08-10 22:56:28  {"ts":"2025-08-10T22:56:28.909Z","lvl":"info","stage":"nlp","traceId":"line_1754866588768_ba4ul7","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 22:56:29  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 22:56:29  📊 規則提取置信度: 0.67
2025-08-10 22:56:29  🤖 啟用 AI 輔助提取...
2025-08-10 22:56:30  ✅ 最終 slots: {
2025-08-10 22:56:30    studentName: '小明',
2025-08-10 22:56:30    courseName: '化學課',
2025-08-10 22:56:30    timeReference: 'today',
2025-08-10 22:56:30    content: '小明今天化學課的內容'
2025-08-10 22:56:30  }
2025-08-10 22:56:30  {"ts":"2025-08-10T22:56:30.400Z","lvl":"info","stage":"slots","traceId":"line_1754866588768_ba4ul7","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:56:30  🎯 執行任務: record_content
2025-08-10 22:56:30  📝 開始處理記錄課程內容任務: {
2025-08-10 22:56:30    studentName: '小明',
2025-08-10 22:56:30  ✅ 最終 slots: {
2025-08-10 22:56:30    studentName: '小明',
2025-08-10 22:56:30    courseName: '化學課',
2025-08-10 22:56:30    timeReference: 'today',
2025-08-10 22:56:30    content: '小明今天化學課的內容'
2025-08-10 22:56:30  }
2025-08-10 22:56:30  {"ts":"2025-08-10T22:56:30.400Z","lvl":"info","stage":"slots","traceId":"line_1754866588768_ba4ul7","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 22:56:30  🎯 執行任務: record_content
2025-08-10 22:56:30  📝 開始處理記錄課程內容任務: {
2025-08-10 22:56:30    studentName: '小明',
2025-08-10 22:56:30    courseName: '化學課',
2025-08-10 22:56:30    timeReference: 'today',
2025-08-10 22:56:30    content: '小明今天化學課的內容'
2025-08-10 22:56:30  }
2025-08-10 22:56:30  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 22:56:30  ❓ 未找到完全匹配的課程
2025-08-10 22:56:30  ✅ 文檔已添加到 course_contents: HiykE2G2wyG1rGLbzs4k
2025-08-10 22:56:30  ✅ 課程內容記錄已儲存: HiykE2G2wyG1rGLbzs4k
2025-08-10 22:56:30  📊 任務執行結果: {
2025-08-10 22:56:30    success: true,
2025-08-10 22:56:30    code: 'RECORD_CONTENT_OK',
2025-08-10 22:56:30    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 22:56:30      '📝 記錄為獨立內容\n' +
2025-08-10 22:56:30      '👨‍🎓 學生：小明\n' +
2025-08-10 22:56:30      '📚 課程：化學課\n' +
2025-08-10 22:56:30      '📅 日期：2025-08-10\n' +
2025-08-10 22:56:30      '💬 內容：小明今天化學課的內容',
2025-08-10 22:56:30    data: {
2025-08-10 22:56:30      recordId: 'HiykE2G2wyG1rGLbzs4k',
2025-08-10 22:56:30      courseId: null,
2025-08-10 22:56:30      targetDate: '2025-08-10'
2025-08-10 22:56:30    }
2025-08-10 22:56:30  }
2025-08-10 22:56:30  {"ts":"2025-08-10T22:56:30.620Z","lvl":"info","stage":"task","traceId":"line_1754866588768_ba4ul7","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":220}
2025-08-10 22:56:30  🔍 檢查 replyToken: test-reply-token-1754866588456
2025-08-10 22:56:30  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:56:30  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 22:56:30  📝 記錄為獨立內容
2025-08-10 22:56:30  👨‍🎓 學生：小明
2025-08-10 22:56:30  📚 課程：化學課
2025-08-10 22:56:30  📅 日期：2025-08-10
2025-08-10 22:56:30  💬 內容：小明今天化學課的內容
2025-08-10 22:56:30  {"ts":"2025-08-10T22:56:30.903Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866588768_ba4ul7","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 22:56:43  📨 收到 1 個事件
2025-08-10 22:56:43  📋 事件類型: message
2025-08-10 22:56:43  🔍 完整事件 JSON: {
2025-08-10 22:56:43    "type": "message",
2025-08-10 22:56:43    "message": {
2025-08-10 22:56:43      "type": "text",
2025-08-10 22:56:43      "text": "提醒我小明的數學課"
2025-08-10 22:56:43    },
2025-08-10 22:56:43    "source": {
2025-08-10 22:56:43      "userId": "U_test_user_qa",
2025-08-10 22:56:43      "type": "user"
2025-08-10 22:56:43    },
2025-08-10 22:56:43    "replyToken": "test-reply-token-1754866603555",
2025-08-10 22:56:43    "timestamp": 1754866603555
2025-08-10 22:56:43  }
2025-08-10 22:56:43  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:56:43  {"ts":"2025-08-10T22:56:43.766Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866603766_ii12og","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 22:56:43  🔍 用戶ID類型: string
2025-08-10 22:56:43  🔍 是否測試用戶: true
2025-08-10 22:56:43  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:56:43  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 22:56:43  ✅ 規則匹配成功: set_reminder
2025-08-10 22:56:43  {"ts":"2025-08-10T22:56:43.907Z","lvl":"info","stage":"nlp","traceId":"line_1754866603766_ii12og","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:56:44  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:56:44  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:56:44  📊 規則提取置信度: 0.67
2025-08-10 22:56:44  🤖 啟用 AI 輔助提取...
2025-08-10 22:56:45  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 22:56:45  {"ts":"2025-08-10T22:56:45.759Z","lvl":"info","stage":"slots","traceId":"line_1754866603766_ii12og","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 22:56:45  🎯 執行任務: set_reminder
2025-08-10 22:56:45  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 22:56:45  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 22:56:45  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 22:56:45  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 22:56:46  ✅ 提醒記錄已創建: LeIKhcfVHWrrWlwvLlhJ
2025-08-10 22:56:46  ✅ 提醒設定成功: LeIKhcfVHWrrWlwvLlhJ
2025-08-10 22:56:46  📊 任務執行結果: {
2025-08-10 22:56:46    success: true,
2025-08-10 22:56:46    code: 'REMINDER_SET_OK',
2025-08-10 22:56:46    message: '✅ 提醒設定完成！\n' +
2025-08-10 22:56:46      '📚 課程：小明 的 數學課\n' +
2025-08-10 22:56:46      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 22:56:46      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 22:56:46  }
2025-08-10 22:56:46  {"ts":"2025-08-10T22:56:46.024Z","lvl":"info","stage":"task","traceId":"line_1754866603766_ii12og","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":265}
2025-08-10 22:56:46  🔍 檢查 replyToken: test-reply-token-1754866603555
2025-08-10 22:56:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:56:46  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 22:56:46  📚 課程：小明 的 數學課
2025-08-10 22:56:46  📅 上課時間：8/11 下午02:00
2025-08-10 22:56:46  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 22:56:46  {"ts":"2025-08-10T22:56:46.309Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866603766_ii12og","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 22:56:58  📨 收到 1 個事件
2025-08-10 22:56:58  📋 事件類型: message
2025-08-10 22:56:58  🔍 完整事件 JSON: {
2025-08-10 22:56:58    "type": "message",
2025-08-10 22:56:58    "message": {
2025-08-10 22:56:58  📨 收到 1 個事件
2025-08-10 22:56:58  📋 事件類型: message
2025-08-10 22:56:58  🔍 完整事件 JSON: {
2025-08-10 22:56:58    "type": "message",
2025-08-10 22:56:58    "message": {
2025-08-10 22:56:58      "type": "text",
2025-08-10 22:56:58      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 22:56:58    },
2025-08-10 22:56:58    "source": {
2025-08-10 22:56:58      "userId": "U_test_user_qa",
2025-08-10 22:56:58      "type": "user"
2025-08-10 22:56:58    },
2025-08-10 22:56:58    "replyToken": "test-reply-token-1754866618673",
2025-08-10 22:56:58    "timestamp": 1754866618673
2025-08-10 22:56:58  }
2025-08-10 22:56:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:56:58  {"ts":"2025-08-10T22:56:58.891Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866618891_tjwfmc","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 22:56:58  🔍 用戶ID類型: string
2025-08-10 22:56:58  🔍 是否測試用戶: true
2025-08-10 22:56:58  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:56:58  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 22:56:59  ✅ 規則匹配成功: set_reminder
2025-08-10 22:56:59  {"ts":"2025-08-10T22:56:59.033Z","lvl":"info","stage":"nlp","traceId":"line_1754866618891_tjwfmc","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:56:59  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:56:59  📊 規則提取置信度: 0.67
2025-08-10 22:56:59  🤖 啟用 AI 輔助提取...
2025-08-10 22:57:00  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 22:57:00  {"ts":"2025-08-10T22:57:00.849Z","lvl":"info","stage":"slots","traceId":"line_1754866618891_tjwfmc","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 22:57:00  🎯 執行任務: set_reminder
2025-08-10 22:57:00  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 22:57:00  📊 任務執行結果: {
2025-08-10 22:57:00    success: false,
2025-08-10 22:57:00    code: 'MISSING_STUDENT',
2025-08-10 22:57:00    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 22:57:00  }
2025-08-10 22:57:00  {"ts":"2025-08-10T22:57:00.849Z","lvl":"info","stage":"task","traceId":"line_1754866618891_tjwfmc","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 22:57:01  🔍 檢查 replyToken: test-reply-token-1754866618673
2025-08-10 22:57:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:57:01  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 22:57:01  {"ts":"2025-08-10T22:57:01.132Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866618891_tjwfmc","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 22:57:14  📨 收到 1 個事件
2025-08-10 22:57:14  📋 事件類型: message
2025-08-10 22:57:14  🔍 完整事件 JSON: {
2025-08-10 22:57:14    "type": "message",
2025-08-10 22:57:14    "message": {
2025-08-10 22:57:14      "type": "text",
2025-08-10 22:57:14      "text": "提醒我小明的物理課"
2025-08-10 22:57:14    },
2025-08-10 22:57:14    "source": {
2025-08-10 22:57:14      "userId": "U_test_user_qa",
2025-08-10 22:57:14      "type": "user"
2025-08-10 22:57:14    },
2025-08-10 22:57:14    "replyToken": "test-reply-token-1754866633823",
2025-08-10 22:57:14    "timestamp": 1754866633823
2025-08-10 22:57:14  }
2025-08-10 22:57:14  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:57:14  {"ts":"2025-08-10T22:57:14.133Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866634133_i7yh1o","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 22:57:14  🔍 用戶ID類型: string
2025-08-10 22:57:14  🔍 是否測試用戶: true
2025-08-10 22:57:14  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:57:14  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 22:57:14  ✅ 規則匹配成功: set_reminder
2025-08-10 22:57:14  {"ts":"2025-08-10T22:57:14.274Z","lvl":"info","stage":"nlp","traceId":"line_1754866634133_i7yh1o","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 22:57:14  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 22:57:14  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:57:14  📊 規則提取置信度: 0.67
2025-08-10 22:57:14  🤖 啟用 AI 輔助提取...
2025-08-10 22:57:16  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 22:57:16  {"ts":"2025-08-10T22:57:16.268Z","lvl":"info","stage":"slots","traceId":"line_1754866634133_i7yh1o","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 22:57:16  🎯 執行任務: set_reminder
2025-08-10 22:57:16  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 22:57:16  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 22:57:16  📊 任務執行結果: {
2025-08-10 22:57:16    success: false,
2025-08-10 22:57:16    code: 'NOT_FOUND',
2025-08-10 22:57:16    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 22:57:16  }
2025-08-10 22:57:16  {"ts":"2025-08-10T22:57:16.339Z","lvl":"info","stage":"task","traceId":"line_1754866634133_i7yh1o","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":71}
2025-08-10 22:57:16  🔍 檢查 replyToken: test-reply-token-1754866633823
2025-08-10 22:57:16  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:57:16  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 22:57:16  {"ts":"2025-08-10T22:57:16.621Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866634133_i7yh1o","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 22:57:29  📨 收到 1 個事件
2025-08-10 22:57:29  📋 事件類型: message
2025-08-10 22:57:29  🔍 完整事件 JSON: {
2025-08-10 22:57:29    "type": "message",
2025-08-10 22:57:29    "message": {
2025-08-10 22:57:29      "type": "text",
2025-08-10 22:57:29      "text": "小明的數學課改到下午4點"
2025-08-10 22:57:29    },
2025-08-10 22:57:29    "source": {
2025-08-10 22:57:29      "userId": "U_test_user_qa",
2025-08-10 22:57:29      "type": "user"
2025-08-10 22:57:29    },
2025-08-10 22:57:29    "replyToken": "test-reply-token-1754866649336",
2025-08-10 22:57:29    "timestamp": 1754866649336
2025-08-10 22:57:29  }
2025-08-10 22:57:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:57:29  {"ts":"2025-08-10T22:57:29.548Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866649548_b0lpyt","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 22:57:29  🔍 用戶ID類型: string
2025-08-10 22:57:29  📨 收到 1 個事件
2025-08-10 22:57:29  📋 事件類型: message
2025-08-10 22:57:29  🔍 完整事件 JSON: {
2025-08-10 22:57:29    "type": "message",
2025-08-10 22:57:29    "message": {
2025-08-10 22:57:29      "type": "text",
2025-08-10 22:57:29      "text": "小明的數學課改到下午4點"
2025-08-10 22:57:29    },
2025-08-10 22:57:29    "source": {
2025-08-10 22:57:29      "userId": "U_test_user_qa",
2025-08-10 22:57:29      "type": "user"
2025-08-10 22:57:29    },
2025-08-10 22:57:29    "replyToken": "test-reply-token-1754866649336",
2025-08-10 22:57:29    "timestamp": 1754866649336
2025-08-10 22:57:29  }
2025-08-10 22:57:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:57:29  {"ts":"2025-08-10T22:57:29.548Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866649548_b0lpyt","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 22:57:29  🔍 用戶ID類型: string
2025-08-10 22:57:29  🔍 是否測試用戶: true
2025-08-10 22:57:29  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:57:29  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 22:57:29  ✅ 規則匹配成功: modify_course
2025-08-10 22:57:29  {"ts":"2025-08-10T22:57:29.689Z","lvl":"info","stage":"nlp","traceId":"line_1754866649548_b0lpyt","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 22:57:29  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 22:57:29  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 22:57:29  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:57:29  📊 規則提取置信度: 0.00
2025-08-10 22:57:29  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 22:57:31  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 22:57:31  {"ts":"2025-08-10T22:57:31.124Z","lvl":"info","stage":"slots","traceId":"line_1754866649548_b0lpyt","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 22:57:31  🎯 執行任務: modify_course
2025-08-10 22:57:31  ✏️ 執行修改操作任務: {
2025-08-10 22:57:31    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 22:57:31    userId: 'U_test_user_qa'
2025-08-10 22:57:31  }
2025-08-10 22:57:31  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 22:57:31  {"ts":"2025-08-10T22:57:31.195Z","lvl":"info","stage":"task","traceId":"line_1754866649548_b0lpyt","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 22:57:31  🔍 檢查 replyToken: test-reply-token-1754866649336
2025-08-10 22:57:31  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:57:31  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 22:57:31  {"ts":"2025-08-10T22:57:31.479Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866649548_b0lpyt","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 22:57:44  📨 收到 1 個事件
2025-08-10 22:57:44  📋 事件類型: message
2025-08-10 22:57:44  🔍 完整事件 JSON: {
2025-08-10 22:57:44    "type": "message",
2025-08-10 22:57:44    "message": {
2025-08-10 22:57:44      "type": "text",
2025-08-10 22:57:44      "text": "小明每天的晨練課改到早上7點"
2025-08-10 22:57:44    },
2025-08-10 22:57:44    "source": {
2025-08-10 22:57:44      "userId": "U_test_user_qa",
2025-08-10 22:57:44      "type": "user"
2025-08-10 22:57:44    },
2025-08-10 22:57:44    "replyToken": "test-reply-token-1754866663894",
2025-08-10 22:57:44    "timestamp": 1754866663894
2025-08-10 22:57:44  }
2025-08-10 22:57:44  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:57:44  {"ts":"2025-08-10T22:57:44.172Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866664172_ws8q2c","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 22:57:44  🔍 用戶ID類型: string
2025-08-10 22:57:44  🔍 是否測試用戶: true
2025-08-10 22:57:44  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:57:44  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 22:57:44  ✅ 規則匹配成功: create_recurring_course
2025-08-10 22:57:44  {"ts":"2025-08-10T22:57:44.314Z","lvl":"info","stage":"nlp","traceId":"line_1754866664172_ws8q2c","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 22:57:44  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 22:57:44  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 22:57:44  ✅ 時間解析成功: {
2025-08-10 22:57:44    input: '小明每天的晨練課改到早上7點',
2025-08-10 22:57:44    output: '07:00',
2025-08-10 22:57:44    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 22:57:44  }
2025-08-10 22:57:44  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:57:44  📊 規則提取置信度: 0.67
2025-08-10 22:57:44  🤖 啟用 AI 輔助提取...
2025-08-10 22:57:45  ✅ 最終 slots: {
2025-08-10 22:57:45    studentName: '小明',
2025-08-10 22:57:45    courseName: '晨練課',
2025-08-10 22:57:45    scheduleTime: '07:00',
2025-08-10 22:57:45    recurring: false
2025-08-10 22:57:45  }
2025-08-10 22:57:45  {"ts":"2025-08-10T22:57:45.647Z","lvl":"info","stage":"slots","traceId":"line_1754866664172_ws8q2c","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:57:45  🎯 執行任務: create_recurring_course
2025-08-10 22:57:45  🎯 開始處理新增課程任務
2025-08-10 22:57:45  📋 接收參數: {
2025-08-10 22:57:45    studentName: '小明',
2025-08-10 22:57:45    courseName: '晨練課',
2025-08-10 22:57:45    scheduleTime: '07:00',
2025-08-10 22:57:45    recurring: false
2025-08-10 22:57:45  }
2025-08-10 22:57:45  📊 任務執行結果: {
2025-08-10 22:57:45    success: false,
2025-08-10 22:57:45    code: 'MISSING_FIELDS',
2025-08-10 22:57:45    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 22:57:45    expectingInput: true,
2025-08-10 22:57:45    missingFields: [ '課程日期' ]
2025-08-10 22:57:45  }
2025-08-10 22:57:45  {"ts":"2025-08-10T22:57:45.789Z","lvl":"info","stage":"task","traceId":"line_1754866664172_ws8q2c","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 22:57:46  🔍 檢查 replyToken: test-reply-token-1754866663894
2025-08-10 22:57:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:57:46  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 22:57:46  🔍 檢查 replyToken: test-reply-token-1754866663894
2025-08-10 22:57:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 22:57:46  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 22:57:46  
2025-08-10 22:57:46  範例：「小明每週三下午3點數學課」
2025-08-10 22:57:46  {"ts":"2025-08-10T22:57:46.072Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754866664172_ws8q2c","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 22:57:58  📨 收到 1 個事件
2025-08-10 22:57:58  📋 事件類型: message
2025-08-10 22:57:58  🔍 完整事件 JSON: {
2025-08-10 22:57:58    "type": "message",
2025-08-10 22:57:58    "message": {
2025-08-10 22:57:58      "type": "text",
2025-08-10 22:57:58      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 22:57:58    },
2025-08-10 22:57:58    "source": {
2025-08-10 22:57:58      "userId": "U_test_user_qa",
2025-08-10 22:57:58      "type": "user"
2025-08-10 22:57:58    },
2025-08-10 22:57:58    "replyToken": "test-reply-token-1754866678690",
2025-08-10 22:57:58    "timestamp": 1754866678690
2025-08-10 22:57:58  }
2025-08-10 22:57:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 22:57:58  {"ts":"2025-08-10T22:57:58.899Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 22:57:58  🔍 用戶ID類型: string
2025-08-10 22:57:58  🔍 是否測試用戶: true
2025-08-10 22:57:58  🚀 生產用戶，使用真實 LINE Service
2025-08-10 22:57:58  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 22:57:59  ✅ 規則匹配成功: create_recurring_course
2025-08-10 22:57:59  {"ts":"2025-08-10T22:57:59.040Z","lvl":"info","stage":"nlp","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 22:57:59  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 22:57:59  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 22:57:59  ✅ 時間解析成功: {
2025-08-10 22:57:59    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 22:57:59    output: '15:00',
2025-08-10 22:57:59    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 22:57:59  }
2025-08-10 22:57:59  🧠 使用對話上下文增強 slots 提取
2025-08-10 22:57:59  📊 規則提取置信度: 0.67
2025-08-10 22:57:59  🤖 啟用 AI 輔助提取...
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
2025-08-10 22:58:00  ✅ 最終 slots: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  {"ts":"2025-08-10T22:58:00.476Z","lvl":"info","stage":"slots","traceId":"line_1754866678899_340t7a","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 22:58:00  🎯 執行任務: create_recurring_course
2025-08-10 22:58:00  🎯 開始處理新增課程任務
2025-08-10 22:58:00  📋 接收參數: {
2025-08-10 22:58:00    studentName: 'Lumi',
2025-08-10 22:58:00    courseName: '鋼琴課',
2025-08-10 22:58:00    scheduleTime: '15:00',
2025-08-10 22:58:00    recurring: true
2025-08-10 22:58:00  }
2025-08-10 22:58:00  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 22:58:00  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 22:58:00      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 22:58:00      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 22:58:00      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 22:58:00      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 22:58:00      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 22:58:00      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 22:58:00      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 22:58:00      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 22:58:00      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 22:58:00      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 22:58:00    config: {
2025-08-10 22:58:00      url: URL {
2025-08-10 22:58:00        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        origin: 'https://www.googleapis.com',
2025-08-10 22:58:00        protocol: 'https:',
2025-08-10 22:58:00        username: '',
2025-08-10 22:58:00        password: '',
2025-08-10 22:58:00        host: 'www.googleapis.com',
2025-08-10 22:58:00        hostname: 'www.googleapis.com',
2025-08-10 22:58:00        port: '',
2025-08-10 22:58:00        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 22:58:00        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 22:58:00        searchParams: URLSearchParams {
2025-08-10 22:58:00          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00          'singleEvents' => 'true',
2025-08-10 22:58:00          'orderBy' => 'startTime' },
2025-08-10 22:58:00        hash: ''
2025-08-10 22:58:00      },
2025-08-10 22:58:00      method: 'GET',
2025-08-10 22:58:00      apiVersion: '',
2025-08-10 22:58:00      userAgentDirectives: [ [Object] ],
2025-08-10 22:58:00      paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00      headers: Headers {
2025-08-10 22:58:00        'accept-encoding': 'gzip',
2025-08-10 22:58:00        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      params: {
2025-08-10 22:58:00        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 22:58:00        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 22:58:00        singleEvents: true,
2025-08-10 22:58:00        orderBy: 'startTime'
2025-08-10 22:58:00      },
2025-08-10 22:58:00      validateStatus: [Function (anonymous)],
2025-08-10 22:58:00      retry: true,
2025-08-10 22:58:00      responseType: 'unknown',
2025-08-10 22:58:00      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 22:58:00      retryConfig: {
2025-08-10 22:58:00        currentRetryAttempt: 0,
2025-08-10 22:58:00        retry: 3,
2025-08-10 22:58:00        httpMethodsToRetry: [Array],
2025-08-10 22:58:00        noResponseRetries: 2,
2025-08-10 22:58:00        retryDelayMultiplier: 2,
2025-08-10 22:58:00        timeOfFirstRequest: 1754866680841,
2025-08-10 22:58:00        totalTimeout: 9007199254740991,
2025-08-10 22:58:00        maxRetryDelay: 9007199254740991,
2025-08-10 22:58:00        statusCodesToRetry: [Array]
2025-08-10 22:58:00      }
2025-08-10 22:58:00    },
2025-08-10 22:58:00    response: Response {
2025-08-10 22:58:00      size: 0,
2025-08-10 22:58:00      data: { error: [Object] },
2025-08-10 22:58:00      config: {
2025-08-10 22:58:00        url: URL {},
2025-08-10 22:58:00        method: 'GET',
2025-08-10 22:58:00        apiVersion: '',
2025-08-10 22:58:00        userAgentDirectives: [Array],
2025-08-10 22:58:00        paramsSerializer: [Function (anonymous)],
2025-08-10 22:58:00        headers: Headers {
2025-08-10 22:58:00          'accept-encoding': 'gzip',
2025-08-10 22:58:00          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 22:58:00          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 22:58:00          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 22:58:00        },
2025-08-10 22:58:00        params: [Object],
2025-08-10 22:58:00        validateStatus: [Function (anonymous)],
2025-08-10 22:58:00        retry: true,
2025-08-10 22:58:00        responseType: 'unknown',
2025-08-10 22:58:00        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 22:58:00      },
2025-08-10 22:58:00      Symbol(Body internals): {
