2025-08-10 23:06:02  📨 收到 1 個事件
2025-08-10 23:06:02  📋 事件類型: message
2025-08-10 23:06:02  🔍 完整事件 JSON: {
2025-08-10 23:06:02    "type": "message",
2025-08-10 23:06:02    "message": {
2025-08-10 23:06:02      "type": "text",
2025-08-10 23:06:02      "text": "查詢Lumi的重複課程"
2025-08-10 23:06:02    },
2025-08-10 23:06:02    "source": {
2025-08-10 23:06:02      "userId": "U_test_user_qa",
2025-08-10 23:06:02      "type": "user"
2025-08-10 23:06:02    },
2025-08-10 23:06:02    "replyToken": "test-reply-token-1754867162156",
2025-08-10 23:06:02    "timestamp": 1754867162156
2025-08-10 23:06:02  }
2025-08-10 23:06:02  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:06:02  {"ts":"2025-08-10T23:06:02.471Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867162471_0mcmkq","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 23:06:02  🔍 用戶ID類型: string
2025-08-10 23:06:02  🔍 是否測試用戶: true
2025-08-10 23:06:02  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:06:02  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 23:06:02  ✅ 規則匹配成功: query_schedule
2025-08-10 23:06:02  {"ts":"2025-08-10T23:06:02.613Z","lvl":"info","stage":"nlp","traceId":"line_1754867162471_0mcmkq","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 23:06:02  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 23:06:02  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:06:02  📊 規則提取置信度: 0.50
2025-08-10 23:06:02  🤖 啟用 AI 輔助提取...
2025-08-10 23:06:04  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 23:06:04  {"ts":"2025-08-10T23:06:04.542Z","lvl":"info","stage":"slots","traceId":"line_1754867162471_0mcmkq","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 23:06:04  🎯 執行任務: query_schedule
2025-08-10 23:06:04  🎯 開始處理查詢課表任務
2025-08-10 23:06:04  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 23:06:04  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 23:06:04  📚 查詢到 346 筆課程資料
2025-08-10 23:06:04  📚 查詢到 0 筆課程
2025-08-10 23:06:04  📊 任務執行結果: {
2025-08-10 23:06:04    success: true,
2025-08-10 23:06:04    code: 'QUERY_OK_EMPTY',
2025-08-10 23:06:04    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 23:06:04      '\n' +
2025-08-10 23:06:04      '💡 您可以：\n' +
2025-08-10 23:06:04      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 23:06:04      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 23:06:04      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 23:06:04    data: {
2025-08-10 23:06:04      courseCount: 0,
2025-08-10 23:06:04      dateRange: {
2025-08-10 23:06:04        startDate: '2025-08-10',
2025-08-10 23:06:04        endDate: '2025-08-16',
2025-08-10 23:06:04        description: '本週'
2025-08-10 23:06:04      }
2025-08-10 23:06:04    }
2025-08-10 23:06:04  }
2025-08-10 23:06:04  {"ts":"2025-08-10T23:06:04.862Z","lvl":"info","stage":"task","traceId":"line_1754867162471_0mcmkq","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":320}
2025-08-10 23:06:05  🔍 檢查 replyToken: test-reply-token-1754867162156
2025-08-10 23:06:05  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:06:05  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 23:06:05  
2025-08-10 23:06:05  💡 您可以：
2025-08-10 23:06:05  • 新增課程：「小明明天上午10點英文課」
2025-08-10 23:06:05  • 查詢其他時間：「小明下週的課表」
2025-08-10 23:06:05  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 23:06:05  {"ts":"2025-08-10T23:06:05.145Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867162471_0mcmkq","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 23:06:17  📨 收到 1 個事件
2025-08-10 23:06:17  📋 事件類型: message
2025-08-10 23:06:17  🔍 完整事件 JSON: {
2025-08-10 23:06:17    "type": "message",
2025-08-10 23:06:17    "message": {
2025-08-10 23:06:17      "type": "text",
2025-08-10 23:06:17      "text": "今天小明的數學課學了分數加減法"
2025-08-10 23:06:17    },
2025-08-10 23:06:17    "source": {
2025-08-10 23:06:17      "userId": "U_test_user_qa",
2025-08-10 23:06:17      "type": "user"
2025-08-10 23:06:17    },
2025-08-10 23:06:17    "replyToken": "test-reply-token-1754867177466",
2025-08-10 23:06:17    "timestamp": 1754867177466
2025-08-10 23:06:17  }
2025-08-10 23:06:17  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:06:17  {"ts":"2025-08-10T23:06:17.780Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867177780_n5jat2","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 23:06:17  🔍 用戶ID類型: string
2025-08-10 23:06:17  🔍 是否測試用戶: true
2025-08-10 23:06:17  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:06:17  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 23:06:17  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:06:17  {"ts":"2025-08-10T23:06:17.921Z","lvl":"info","stage":"nlp","traceId":"line_1754867177780_n5jat2","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:06:18  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:06:18  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:06:18  📊 規則提取置信度: 1.00
2025-08-10 23:06:18  🤖 啟用 AI 輔助提取...
2025-08-10 23:06:19  ✅ 最終 slots: {
2025-08-10 23:06:19    studentName: '小明',
2025-08-10 23:06:19    courseName: '數學課',
2025-08-10 23:06:19    timeReference: 'today',
2025-08-10 23:06:19    content: '分數加減法'
2025-08-10 23:06:19  }
2025-08-10 23:06:19  {"ts":"2025-08-10T23:06:19.610Z","lvl":"info","stage":"slots","traceId":"line_1754867177780_n5jat2","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:06:19  🎯 執行任務: record_content
2025-08-10 23:06:19  📝 開始處理記錄課程內容任務: {
2025-08-10 23:06:19    studentName: '小明',
2025-08-10 23:06:19  ✅ 最終 slots: {
2025-08-10 23:06:19    studentName: '小明',
2025-08-10 23:06:19    courseName: '數學課',
2025-08-10 23:06:19    timeReference: 'today',
2025-08-10 23:06:19    content: '分數加減法'
2025-08-10 23:06:19  }
2025-08-10 23:06:19  {"ts":"2025-08-10T23:06:19.610Z","lvl":"info","stage":"slots","traceId":"line_1754867177780_n5jat2","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:06:19  🎯 執行任務: record_content
2025-08-10 23:06:19  📝 開始處理記錄課程內容任務: {
2025-08-10 23:06:19    studentName: '小明',
2025-08-10 23:06:19    courseName: '數學課',
2025-08-10 23:06:19    timeReference: 'today',
2025-08-10 23:06:19    content: '分數加減法'
2025-08-10 23:06:19  }
2025-08-10 23:06:19  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 23:06:19  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 23:06:19  ✅ 文檔已添加到 course_contents: 12kW1fL22x6kdaxTWwQb
2025-08-10 23:06:19  ✅ 課程內容記錄已儲存: 12kW1fL22x6kdaxTWwQb
2025-08-10 23:06:19  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 23:06:19  📊 任務執行結果: {
2025-08-10 23:06:19    success: true,
2025-08-10 23:06:19    code: 'RECORD_CONTENT_OK',
2025-08-10 23:06:19    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 23:06:19    data: {
2025-08-10 23:06:19      recordId: '12kW1fL22x6kdaxTWwQb',
2025-08-10 23:06:19      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 23:06:19      targetDate: '2025-08-10'
2025-08-10 23:06:19    }
2025-08-10 23:06:19  }
2025-08-10 23:06:19  {"ts":"2025-08-10T23:06:19.920Z","lvl":"info","stage":"task","traceId":"line_1754867177780_n5jat2","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":310}
2025-08-10 23:06:20  🔍 檢查 replyToken: test-reply-token-1754867177466
2025-08-10 23:06:20  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:06:20  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:06:20  📚 課程：小明 - 數學課
2025-08-10 23:06:20  📅 日期：2025-08-10
2025-08-10 23:06:20  💬 內容：分數加減法
2025-08-10 23:06:20  {"ts":"2025-08-10T23:06:20.203Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867177780_n5jat2","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 23:06:32  📨 收到 1 個事件
2025-08-10 23:06:32  📋 事件類型: message
2025-08-10 23:06:32  🔍 完整事件 JSON: {
2025-08-10 23:06:32    "type": "message",
2025-08-10 23:06:32    "message": {
2025-08-10 23:06:32      "type": "text",
2025-08-10 23:06:32      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 23:06:32    },
2025-08-10 23:06:32    "source": {
2025-08-10 23:06:32      "userId": "U_test_user_qa",
2025-08-10 23:06:32      "type": "user"
2025-08-10 23:06:32    },
2025-08-10 23:06:32    "replyToken": "test-reply-token-1754867192606",
2025-08-10 23:06:32    "timestamp": 1754867192606
2025-08-10 23:06:32  }
2025-08-10 23:06:32  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:06:32  {"ts":"2025-08-10T23:06:32.819Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867192819_9azybp","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 23:06:32  🔍 用戶ID類型: string
2025-08-10 23:06:32  🔍 是否測試用戶: true
2025-08-10 23:06:32  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:06:32  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 23:06:32  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:06:32  {"ts":"2025-08-10T23:06:32.964Z","lvl":"info","stage":"nlp","traceId":"line_1754867192819_9azybp","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:06:33  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:06:33  📊 規則提取置信度: 0.33
2025-08-10 23:06:33  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 23:06:34  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 23:06:34  {"ts":"2025-08-10T23:06:34.473Z","lvl":"info","stage":"slots","traceId":"line_1754867192819_9azybp","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 23:06:34  🎯 執行任務: record_content
2025-08-10 23:06:34  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 23:06:34  ✅ 文檔已添加到 course_contents: 8IzNeG0vfRQzv20LGukw
2025-08-10 23:06:34  ✅ 課程內容記錄已儲存: 8IzNeG0vfRQzv20LGukw
2025-08-10 23:06:34  📊 任務執行結果: {
2025-08-10 23:06:34    success: true,
2025-08-10 23:06:34    code: 'RECORD_CONTENT_OK',
2025-08-10 23:06:34    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 23:06:34    data: {
2025-08-10 23:06:34      recordId: '8IzNeG0vfRQzv20LGukw',
2025-08-10 23:06:34      courseId: null,
2025-08-10 23:06:34      targetDate: '2025-08-09'
2025-08-10 23:06:34    }
2025-08-10 23:06:34  }
2025-08-10 23:06:34  {"ts":"2025-08-10T23:06:34.548Z","lvl":"info","stage":"task","traceId":"line_1754867192819_9azybp","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":74}
2025-08-10 23:06:34  🔍 檢查 replyToken: test-reply-token-1754867192606
2025-08-10 23:06:34  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:06:34  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:06:34  📝 記錄為獨立內容
2025-08-10 23:06:34  📚 課程：鋼琴課
2025-08-10 23:06:34  📅 日期：2025-08-09
2025-08-10 23:06:34  💬 內容：練習了小星星
2025-08-10 23:06:34  {"ts":"2025-08-10T23:06:34.830Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867192819_9azybp","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 23:06:47  📨 收到 1 個事件
2025-08-10 23:06:47  📋 事件類型: message
2025-08-10 23:06:47  🔍 完整事件 JSON: {
2025-08-10 23:06:47    "type": "message",
2025-08-10 23:06:47    "message": {
2025-08-10 23:06:47      "type": "text",
2025-08-10 23:06:47      "text": "小明昨天數學課學了什麼？"
2025-08-10 23:06:47    },
2025-08-10 23:06:47    "source": {
2025-08-10 23:06:47      "userId": "U_test_user_qa",
2025-08-10 23:06:47      "type": "user"
2025-08-10 23:06:47    },
2025-08-10 23:06:47  📨 收到 1 個事件
2025-08-10 23:06:47  📋 事件類型: message
2025-08-10 23:06:47  🔍 完整事件 JSON: {
2025-08-10 23:06:47    "type": "message",
2025-08-10 23:06:47    "message": {
2025-08-10 23:06:47      "type": "text",
2025-08-10 23:06:47      "text": "小明昨天數學課學了什麼？"
2025-08-10 23:06:47    },
2025-08-10 23:06:47    "source": {
2025-08-10 23:06:47      "userId": "U_test_user_qa",
2025-08-10 23:06:47      "type": "user"
2025-08-10 23:06:47    },
2025-08-10 23:06:47    "replyToken": "test-reply-token-1754867207639",
2025-08-10 23:06:47    "timestamp": 1754867207639
2025-08-10 23:06:47  }
2025-08-10 23:06:47  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:06:47  {"ts":"2025-08-10T23:06:47.844Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867207844_dsikvt","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 23:06:47  🔍 用戶ID類型: string
2025-08-10 23:06:47  🔍 是否測試用戶: true
2025-08-10 23:06:47  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:06:47  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 23:06:47  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:06:47  {"ts":"2025-08-10T23:06:47.985Z","lvl":"info","stage":"nlp","traceId":"line_1754867207844_dsikvt","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:06:48  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:06:48  📊 規則提取置信度: 0.67
2025-08-10 23:06:48  🤖 啟用 AI 輔助提取...
2025-08-10 23:06:49  ✅ 最終 slots: {
2025-08-10 23:06:49    studentName: '小明',
2025-08-10 23:06:49    courseName: '數學課',
2025-08-10 23:06:49    timeReference: 'yesterday',
2025-08-10 23:06:49    content: '什麼？'
2025-08-10 23:06:49  }
2025-08-10 23:06:49  {"ts":"2025-08-10T23:06:49.337Z","lvl":"info","stage":"slots","traceId":"line_1754867207844_dsikvt","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:06:49  🎯 執行任務: record_content
2025-08-10 23:06:49  📝 開始處理記錄課程內容任務: {
2025-08-10 23:06:49    studentName: '小明',
2025-08-10 23:06:49    courseName: '數學課',
2025-08-10 23:06:49    timeReference: 'yesterday',
2025-08-10 23:06:49    content: '什麼？'
2025-08-10 23:06:49  }
2025-08-10 23:06:49  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 23:06:49  ❓ 未找到完全匹配的課程
2025-08-10 23:06:49  ✅ 文檔已添加到 course_contents: bCSGuzNpIAjFYM2LsZLM
2025-08-10 23:06:49  ✅ 課程內容記錄已儲存: bCSGuzNpIAjFYM2LsZLM
2025-08-10 23:06:49  📊 任務執行結果: {
2025-08-10 23:06:49    success: true,
2025-08-10 23:06:49    code: 'RECORD_CONTENT_OK',
2025-08-10 23:06:49    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 23:06:49    data: {
2025-08-10 23:06:49      recordId: 'bCSGuzNpIAjFYM2LsZLM',
2025-08-10 23:06:49      courseId: null,
2025-08-10 23:06:49      targetDate: '2025-08-09'
2025-08-10 23:06:49    }
2025-08-10 23:06:49  }
2025-08-10 23:06:49  {"ts":"2025-08-10T23:06:49.635Z","lvl":"info","stage":"task","traceId":"line_1754867207844_dsikvt","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":298}
2025-08-10 23:06:49  🔍 檢查 replyToken: test-reply-token-1754867207639
2025-08-10 23:06:49  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:06:49  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:06:49  📝 記錄為獨立內容
2025-08-10 23:06:49  👨‍🎓 學生：小明
2025-08-10 23:06:49  📚 課程：數學課
2025-08-10 23:06:49  📅 日期：2025-08-09
2025-08-10 23:06:49  💬 內容：什麼？
2025-08-10 23:06:49  {"ts":"2025-08-10T23:06:49.918Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867207844_dsikvt","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 23:06:57  📨 收到 1 個事件
2025-08-10 23:06:57  📋 事件類型: message
2025-08-10 23:06:57  🔍 完整事件 JSON: {
2025-08-10 23:06:57    "type": "message",
2025-08-10 23:06:57    "message": {
2025-08-10 23:06:57      "type": "text",
2025-08-10 23:06:57      "text": "記錄小明今天化學課的內容"
2025-08-10 23:06:57    },
2025-08-10 23:06:57    "source": {
2025-08-10 23:06:57      "userId": "U_test_user_qa",
2025-08-10 23:06:57      "type": "user"
2025-08-10 23:06:57    },
2025-08-10 23:06:57    "replyToken": "test-reply-token-1754867216862",
2025-08-10 23:06:57    "timestamp": 1754867216862
2025-08-10 23:06:57  }
2025-08-10 23:06:57  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:06:57  {"ts":"2025-08-10T23:06:57.082Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867217082_61cl0c","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 23:06:57  🔍 用戶ID類型: string
2025-08-10 23:06:57  🔍 是否測試用戶: true
2025-08-10 23:06:57  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:06:57  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 23:06:57  📝 內容記錄優先規則命中 → record_content
2025-08-10 23:06:57  {"ts":"2025-08-10T23:06:57.223Z","lvl":"info","stage":"nlp","traceId":"line_1754867217082_61cl0c","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 23:06:57  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 23:06:57  📊 規則提取置信度: 0.67
2025-08-10 23:06:57  🤖 啟用 AI 輔助提取...
2025-08-10 23:06:58  ✅ 最終 slots: {
2025-08-10 23:06:58    studentName: '小明',
2025-08-10 23:06:58    courseName: '化學課',
2025-08-10 23:06:58    timeReference: 'today',
2025-08-10 23:06:58    content: '小明今天化學課的內容'
2025-08-10 23:06:58  }
2025-08-10 23:06:58  {"ts":"2025-08-10T23:06:58.502Z","lvl":"info","stage":"slots","traceId":"line_1754867217082_61cl0c","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:06:58  🎯 執行任務: record_content
2025-08-10 23:06:58  📝 開始處理記錄課程內容任務: {
2025-08-10 23:06:58    studentName: '小明',
2025-08-10 23:06:58  ✅ 最終 slots: {
2025-08-10 23:06:58    studentName: '小明',
2025-08-10 23:06:58    courseName: '化學課',
2025-08-10 23:06:58    timeReference: 'today',
2025-08-10 23:06:58    content: '小明今天化學課的內容'
2025-08-10 23:06:58  }
2025-08-10 23:06:58  {"ts":"2025-08-10T23:06:58.502Z","lvl":"info","stage":"slots","traceId":"line_1754867217082_61cl0c","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 23:06:58  🎯 執行任務: record_content
2025-08-10 23:06:58  📝 開始處理記錄課程內容任務: {
2025-08-10 23:06:58    studentName: '小明',
2025-08-10 23:06:58    courseName: '化學課',
2025-08-10 23:06:58    timeReference: 'today',
2025-08-10 23:06:58    content: '小明今天化學課的內容'
2025-08-10 23:06:58  }
2025-08-10 23:06:58  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 23:06:58  ❓ 未找到完全匹配的課程
2025-08-10 23:06:58  ✅ 文檔已添加到 course_contents: oCS6PUJbclJXt98aI3vJ
2025-08-10 23:06:58  ✅ 課程內容記錄已儲存: oCS6PUJbclJXt98aI3vJ
2025-08-10 23:06:58  📊 任務執行結果: {
2025-08-10 23:06:58    success: true,
2025-08-10 23:06:58    code: 'RECORD_CONTENT_OK',
2025-08-10 23:06:58    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 23:06:58      '📝 記錄為獨立內容\n' +
2025-08-10 23:06:58      '👨‍🎓 學生：小明\n' +
2025-08-10 23:06:58      '📚 課程：化學課\n' +
2025-08-10 23:06:58      '📅 日期：2025-08-10\n' +
2025-08-10 23:06:58      '💬 內容：小明今天化學課的內容',
2025-08-10 23:06:58    data: {
2025-08-10 23:06:58      recordId: 'oCS6PUJbclJXt98aI3vJ',
2025-08-10 23:06:58      courseId: null,
2025-08-10 23:06:58      targetDate: '2025-08-10'
2025-08-10 23:06:58    }
2025-08-10 23:06:58  }
2025-08-10 23:06:58  {"ts":"2025-08-10T23:06:58.800Z","lvl":"info","stage":"task","traceId":"line_1754867217082_61cl0c","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":298}
2025-08-10 23:06:59  🔍 檢查 replyToken: test-reply-token-1754867216862
2025-08-10 23:06:59  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:06:59  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 23:06:59  📝 記錄為獨立內容
2025-08-10 23:06:59  👨‍🎓 學生：小明
2025-08-10 23:06:59  📚 課程：化學課
2025-08-10 23:06:59  📅 日期：2025-08-10
2025-08-10 23:06:59  💬 內容：小明今天化學課的內容
2025-08-10 23:06:59  {"ts":"2025-08-10T23:06:59.083Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867217082_61cl0c","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 23:07:11  📨 收到 1 個事件
2025-08-10 23:07:11  📋 事件類型: message
2025-08-10 23:07:11  🔍 完整事件 JSON: {
2025-08-10 23:07:11    "type": "message",
2025-08-10 23:07:11    "message": {
2025-08-10 23:07:11      "type": "text",
2025-08-10 23:07:11      "text": "提醒我小明的數學課"
2025-08-10 23:07:11    },
2025-08-10 23:07:11    "source": {
2025-08-10 23:07:11      "userId": "U_test_user_qa",
2025-08-10 23:07:11      "type": "user"
2025-08-10 23:07:11    },
2025-08-10 23:07:11    "replyToken": "test-reply-token-1754867231477",
2025-08-10 23:07:11    "timestamp": 1754867231477
2025-08-10 23:07:11  }
2025-08-10 23:07:11  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:07:11  {"ts":"2025-08-10T23:07:11.691Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867231691_i284bb","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 23:07:11  🔍 用戶ID類型: string
2025-08-10 23:07:11  🔍 是否測試用戶: true
2025-08-10 23:07:11  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:07:11  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 23:07:11  ✅ 規則匹配成功: set_reminder
2025-08-10 23:07:11  {"ts":"2025-08-10T23:07:11.832Z","lvl":"info","stage":"nlp","traceId":"line_1754867231691_i284bb","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 23:07:11  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 23:07:12  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:07:12  📊 規則提取置信度: 0.67
2025-08-10 23:07:12  🤖 啟用 AI 輔助提取...
2025-08-10 23:07:13  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 23:07:13  {"ts":"2025-08-10T23:07:13.890Z","lvl":"info","stage":"slots","traceId":"line_1754867231691_i284bb","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 23:07:13  🎯 執行任務: set_reminder
2025-08-10 23:07:13  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 23:07:14  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 23:07:14  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 23:07:14  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 23:07:14  ✅ 提醒記錄已創建: huY3pJQ26fWijtknkhMw
2025-08-10 23:07:14  ✅ 提醒設定成功: huY3pJQ26fWijtknkhMw
2025-08-10 23:07:14  📊 任務執行結果: {
2025-08-10 23:07:14    success: true,
2025-08-10 23:07:14    code: 'REMINDER_SET_OK',
2025-08-10 23:07:14    message: '✅ 提醒設定完成！\n' +
2025-08-10 23:07:14      '📚 課程：小明 的 數學課\n' +
2025-08-10 23:07:14      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 23:07:14      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 23:07:14  }
2025-08-10 23:07:14  {"ts":"2025-08-10T23:07:14.188Z","lvl":"info","stage":"task","traceId":"line_1754867231691_i284bb","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":298}
2025-08-10 23:07:14  🔍 檢查 replyToken: test-reply-token-1754867231477
2025-08-10 23:07:14  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:07:14  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 23:07:14  📚 課程：小明 的 數學課
2025-08-10 23:07:14  📅 上課時間：8/11 下午02:00
2025-08-10 23:07:14  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 23:07:14  {"ts":"2025-08-10T23:07:14.471Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867231691_i284bb","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 23:07:27  📨 收到 1 個事件
2025-08-10 23:07:27  📋 事件類型: message
2025-08-10 23:07:27  🔍 完整事件 JSON: {
2025-08-10 23:07:27    "type": "message",
2025-08-10 23:07:27    "message": {
2025-08-10 23:07:27  📨 收到 1 個事件
2025-08-10 23:07:27  📋 事件類型: message
2025-08-10 23:07:27  🔍 完整事件 JSON: {
2025-08-10 23:07:27    "type": "message",
2025-08-10 23:07:27    "message": {
2025-08-10 23:07:27      "type": "text",
2025-08-10 23:07:27      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 23:07:27    },
2025-08-10 23:07:27    "source": {
2025-08-10 23:07:27      "userId": "U_test_user_qa",
2025-08-10 23:07:27      "type": "user"
2025-08-10 23:07:27    },
2025-08-10 23:07:27    "replyToken": "test-reply-token-1754867246865",
2025-08-10 23:07:27    "timestamp": 1754867246865
2025-08-10 23:07:27  }
2025-08-10 23:07:27  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:07:27  {"ts":"2025-08-10T23:07:27.073Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867247073_vufqvt","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 23:07:27  🔍 用戶ID類型: string
2025-08-10 23:07:27  🔍 是否測試用戶: true
2025-08-10 23:07:27  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:07:27  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 23:07:27  ✅ 規則匹配成功: set_reminder
2025-08-10 23:07:27  {"ts":"2025-08-10T23:07:27.215Z","lvl":"info","stage":"nlp","traceId":"line_1754867247073_vufqvt","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 23:07:27  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 23:07:27  📊 規則提取置信度: 0.67
2025-08-10 23:07:27  🤖 啟用 AI 輔助提取...
2025-08-10 23:07:29  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 23:07:29  {"ts":"2025-08-10T23:07:29.117Z","lvl":"info","stage":"slots","traceId":"line_1754867247073_vufqvt","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 23:07:29  🎯 執行任務: set_reminder
2025-08-10 23:07:29  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 23:07:29  📊 任務執行結果: {
2025-08-10 23:07:29    success: false,
2025-08-10 23:07:29    code: 'MISSING_STUDENT',
2025-08-10 23:07:29    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 23:07:29  }
2025-08-10 23:07:29  {"ts":"2025-08-10T23:07:29.117Z","lvl":"info","stage":"task","traceId":"line_1754867247073_vufqvt","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 23:07:29  🔍 檢查 replyToken: test-reply-token-1754867246865
2025-08-10 23:07:29  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:07:29  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 23:07:29  {"ts":"2025-08-10T23:07:29.399Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867247073_vufqvt","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 23:07:51  📨 收到 1 個事件
2025-08-10 23:07:51  📋 事件類型: message
2025-08-10 23:07:51  🔍 完整事件 JSON: {
2025-08-10 23:07:51    "type": "message",
2025-08-10 23:07:51    "message": {
2025-08-10 23:07:51      "type": "text",
2025-08-10 23:07:51      "text": "提醒我小明的物理課"
2025-08-10 23:07:51    },
2025-08-10 23:07:51    "source": {
2025-08-10 23:07:51      "userId": "U_test_user_qa",
2025-08-10 23:07:51      "type": "user"
2025-08-10 23:07:51    },
2025-08-10 23:07:51    "replyToken": "test-reply-token-1754867271200",
2025-08-10 23:07:51    "timestamp": 1754867271200
2025-08-10 23:07:51  }
2025-08-10 23:07:51  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:07:51  {"ts":"2025-08-10T23:07:51.410Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867271410_bbg62p","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 23:07:51  🔍 用戶ID類型: string
2025-08-10 23:07:51  🔍 是否測試用戶: true
2025-08-10 23:07:51  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:07:51  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 23:07:51  ✅ 規則匹配成功: set_reminder
2025-08-10 23:07:51  {"ts":"2025-08-10T23:07:51.552Z","lvl":"info","stage":"nlp","traceId":"line_1754867271410_bbg62p","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 23:07:51  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 23:07:51  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:07:51  📊 規則提取置信度: 0.67
2025-08-10 23:07:51  🤖 啟用 AI 輔助提取...
2025-08-10 23:07:52  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 23:07:52  {"ts":"2025-08-10T23:07:52.977Z","lvl":"info","stage":"slots","traceId":"line_1754867271410_bbg62p","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 23:07:52  🎯 執行任務: set_reminder
2025-08-10 23:07:52  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 23:07:53  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 23:07:53  📊 任務執行結果: {
2025-08-10 23:07:53    success: false,
2025-08-10 23:07:53    code: 'NOT_FOUND',
2025-08-10 23:07:53    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 23:07:53  }
2025-08-10 23:07:53  {"ts":"2025-08-10T23:07:53.045Z","lvl":"info","stage":"task","traceId":"line_1754867271410_bbg62p","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":68}
2025-08-10 23:07:53  🔍 檢查 replyToken: test-reply-token-1754867271200
2025-08-10 23:07:53  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:07:53  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 23:07:53  {"ts":"2025-08-10T23:07:53.330Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867271410_bbg62p","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 23:08:06  📨 收到 1 個事件
2025-08-10 23:08:06  📋 事件類型: message
2025-08-10 23:08:06  🔍 完整事件 JSON: {
2025-08-10 23:08:06    "type": "message",
2025-08-10 23:08:06    "message": {
2025-08-10 23:08:06      "type": "text",
2025-08-10 23:08:06      "text": "小明的數學課改到下午4點"
2025-08-10 23:08:06    },
2025-08-10 23:08:06    "source": {
2025-08-10 23:08:06      "userId": "U_test_user_qa",
2025-08-10 23:08:06      "type": "user"
2025-08-10 23:08:06    },
2025-08-10 23:08:06    "replyToken": "test-reply-token-1754867286278",
2025-08-10 23:08:06    "timestamp": 1754867286278
2025-08-10 23:08:06  }
2025-08-10 23:08:06  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:08:06  {"ts":"2025-08-10T23:08:06.560Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867286560_tmbrpv","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 23:08:06  🔍 用戶ID類型: string
2025-08-10 23:08:06  📨 收到 1 個事件
2025-08-10 23:08:06  📋 事件類型: message
2025-08-10 23:08:06  🔍 完整事件 JSON: {
2025-08-10 23:08:06    "type": "message",
2025-08-10 23:08:06    "message": {
2025-08-10 23:08:06      "type": "text",
2025-08-10 23:08:06      "text": "小明的數學課改到下午4點"
2025-08-10 23:08:06    },
2025-08-10 23:08:06    "source": {
2025-08-10 23:08:06      "userId": "U_test_user_qa",
2025-08-10 23:08:06      "type": "user"
2025-08-10 23:08:06    },
2025-08-10 23:08:06    "replyToken": "test-reply-token-1754867286278",
2025-08-10 23:08:06    "timestamp": 1754867286278
2025-08-10 23:08:06  }
2025-08-10 23:08:06  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:08:06  {"ts":"2025-08-10T23:08:06.560Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867286560_tmbrpv","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 23:08:06  🔍 用戶ID類型: string
2025-08-10 23:08:06  🔍 是否測試用戶: true
2025-08-10 23:08:06  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:08:06  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 23:08:06  ✅ 規則匹配成功: modify_course
2025-08-10 23:08:06  {"ts":"2025-08-10T23:08:06.704Z","lvl":"info","stage":"nlp","traceId":"line_1754867286560_tmbrpv","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 23:08:06  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 23:08:06  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 23:08:06  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:08:06  📊 規則提取置信度: 0.00
2025-08-10 23:08:06  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 23:08:07  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 23:08:07  {"ts":"2025-08-10T23:08:07.947Z","lvl":"info","stage":"slots","traceId":"line_1754867286560_tmbrpv","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 23:08:07  🎯 執行任務: modify_course
2025-08-10 23:08:07  ✏️ 執行修改操作任務: {
2025-08-10 23:08:07    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 23:08:07    userId: 'U_test_user_qa'
2025-08-10 23:08:07  }
2025-08-10 23:08:08  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 23:08:08  {"ts":"2025-08-10T23:08:08.089Z","lvl":"info","stage":"task","traceId":"line_1754867286560_tmbrpv","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":142}
2025-08-10 23:08:08  🔍 檢查 replyToken: test-reply-token-1754867286278
2025-08-10 23:08:08  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:08:08  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 23:08:08  {"ts":"2025-08-10T23:08:08.371Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867286560_tmbrpv","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 23:08:21  📨 收到 1 個事件
2025-08-10 23:08:21  📋 事件類型: message
2025-08-10 23:08:21  🔍 完整事件 JSON: {
2025-08-10 23:08:21    "type": "message",
2025-08-10 23:08:21    "message": {
2025-08-10 23:08:21      "type": "text",
2025-08-10 23:08:21      "text": "小明每天的晨練課改到早上7點"
2025-08-10 23:08:21    },
2025-08-10 23:08:21    "source": {
2025-08-10 23:08:21      "userId": "U_test_user_qa",
2025-08-10 23:08:21      "type": "user"
2025-08-10 23:08:21    },
2025-08-10 23:08:21    "replyToken": "test-reply-token-1754867300813",
2025-08-10 23:08:21    "timestamp": 1754867300813
2025-08-10 23:08:21  }
2025-08-10 23:08:21  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:08:21  {"ts":"2025-08-10T23:08:21.129Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867301129_cpoall","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 23:08:21  🔍 用戶ID類型: string
2025-08-10 23:08:21  🔍 是否測試用戶: true
2025-08-10 23:08:21  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:08:21  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 23:08:21  ✅ 規則匹配成功: create_recurring_course
2025-08-10 23:08:21  {"ts":"2025-08-10T23:08:21.270Z","lvl":"info","stage":"nlp","traceId":"line_1754867301129_cpoall","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 23:08:21  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 23:08:21  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 23:08:21  ✅ 時間解析成功: {
2025-08-10 23:08:21    input: '小明每天的晨練課改到早上7點',
2025-08-10 23:08:21    output: '07:00',
2025-08-10 23:08:21    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 23:08:21  }
2025-08-10 23:08:21  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:08:21  📊 規則提取置信度: 0.67
2025-08-10 23:08:21  🤖 啟用 AI 輔助提取...
2025-08-10 23:08:22  ✅ 最終 slots: {
2025-08-10 23:08:22    studentName: '小明',
2025-08-10 23:08:22    courseName: '晨練課',
2025-08-10 23:08:22    scheduleTime: '07:00',
2025-08-10 23:08:22    recurring: false
2025-08-10 23:08:22  }
2025-08-10 23:08:22  {"ts":"2025-08-10T23:08:22.522Z","lvl":"info","stage":"slots","traceId":"line_1754867301129_cpoall","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:22  🎯 執行任務: create_recurring_course
2025-08-10 23:08:22  🎯 開始處理新增課程任務
2025-08-10 23:08:22  📋 接收參數: {
2025-08-10 23:08:22    studentName: '小明',
2025-08-10 23:08:22    courseName: '晨練課',
2025-08-10 23:08:22    scheduleTime: '07:00',
2025-08-10 23:08:22    recurring: false
2025-08-10 23:08:22  }
2025-08-10 23:08:22  📊 任務執行結果: {
2025-08-10 23:08:22    success: false,
2025-08-10 23:08:22    code: 'MISSING_FIELDS',
2025-08-10 23:08:22    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 23:08:22    expectingInput: true,
2025-08-10 23:08:22    missingFields: [ '課程日期' ]
2025-08-10 23:08:22  }
2025-08-10 23:08:22  {"ts":"2025-08-10T23:08:22.663Z","lvl":"info","stage":"task","traceId":"line_1754867301129_cpoall","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":141}
2025-08-10 23:08:22  🔍 檢查 replyToken: test-reply-token-1754867300813
2025-08-10 23:08:22  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:08:22  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 23:08:22  ✅ 最終 slots: {
2025-08-10 23:08:22    studentName: '小明',
2025-08-10 23:08:22    courseName: '晨練課',
2025-08-10 23:08:22    scheduleTime: '07:00',
2025-08-10 23:08:22    recurring: false
2025-08-10 23:08:22  }
2025-08-10 23:08:22  {"ts":"2025-08-10T23:08:22.522Z","lvl":"info","stage":"slots","traceId":"line_1754867301129_cpoall","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:22  🎯 執行任務: create_recurring_course
2025-08-10 23:08:22  🎯 開始處理新增課程任務
2025-08-10 23:08:22  📋 接收參數: {
2025-08-10 23:08:22    studentName: '小明',
2025-08-10 23:08:22    courseName: '晨練課',
2025-08-10 23:08:22    scheduleTime: '07:00',
2025-08-10 23:08:22    recurring: false
2025-08-10 23:08:22  }
2025-08-10 23:08:22  📊 任務執行結果: {
2025-08-10 23:08:22    success: false,
2025-08-10 23:08:22    code: 'MISSING_FIELDS',
2025-08-10 23:08:22    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 23:08:22    expectingInput: true,
2025-08-10 23:08:22    missingFields: [ '課程日期' ]
2025-08-10 23:08:22  }
2025-08-10 23:08:22  {"ts":"2025-08-10T23:08:22.663Z","lvl":"info","stage":"task","traceId":"line_1754867301129_cpoall","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":141}
2025-08-10 23:08:22  🔍 檢查 replyToken: test-reply-token-1754867300813
2025-08-10 23:08:22  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 23:08:22  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 23:08:22  
2025-08-10 23:08:22  範例：「小明每週三下午3點數學課」
2025-08-10 23:08:22  {"ts":"2025-08-10T23:08:22.947Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754867301129_cpoall","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 23:08:35  📨 收到 1 個事件
2025-08-10 23:08:35  📋 事件類型: message
2025-08-10 23:08:35  🔍 完整事件 JSON: {
2025-08-10 23:08:35    "type": "message",
2025-08-10 23:08:35    "message": {
2025-08-10 23:08:35      "type": "text",
2025-08-10 23:08:35      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 23:08:35    },
2025-08-10 23:08:35    "source": {
2025-08-10 23:08:35      "userId": "U_test_user_qa",
2025-08-10 23:08:35      "type": "user"
2025-08-10 23:08:35    },
2025-08-10 23:08:35    "replyToken": "test-reply-token-1754867315324",
2025-08-10 23:08:35    "timestamp": 1754867315324
2025-08-10 23:08:35  }
2025-08-10 23:08:35  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 23:08:35  {"ts":"2025-08-10T23:08:35.532Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 23:08:35  🔍 用戶ID類型: string
2025-08-10 23:08:35  🔍 是否測試用戶: true
2025-08-10 23:08:35  🚀 生產用戶，使用真實 LINE Service
2025-08-10 23:08:35  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 23:08:35  ✅ 規則匹配成功: create_recurring_course
2025-08-10 23:08:35  {"ts":"2025-08-10T23:08:35.674Z","lvl":"info","stage":"nlp","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 23:08:35  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 23:08:35  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 23:08:35  ✅ 時間解析成功: {
2025-08-10 23:08:35    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 23:08:35    output: '15:00',
2025-08-10 23:08:35    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 23:08:35  }
2025-08-10 23:08:35  🧠 使用對話上下文增強 slots 提取
2025-08-10 23:08:35  📊 規則提取置信度: 0.67
2025-08-10 23:08:35  🤖 啟用 AI 輔助提取...
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
2025-08-10 23:08:37  ✅ 最終 slots: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  {"ts":"2025-08-10T23:08:37.448Z","lvl":"info","stage":"slots","traceId":"line_1754867315532_vqenie","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 23:08:37  🎯 執行任務: create_recurring_course
2025-08-10 23:08:37  🎯 開始處理新增課程任務
2025-08-10 23:08:37  📋 接收參數: {
2025-08-10 23:08:37    studentName: 'Lumi',
2025-08-10 23:08:37    courseName: '鋼琴課',
2025-08-10 23:08:37    scheduleTime: '15:00',
2025-08-10 23:08:37    recurring: true
2025-08-10 23:08:37  }
2025-08-10 23:08:37  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 23:08:37  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 23:08:37      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 23:08:37      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 23:08:37      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 23:08:37      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 23:08:37      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 23:08:37      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 23:08:37      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 23:08:37      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 23:08:37      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 23:08:37      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 23:08:37    config: {
2025-08-10 23:08:37      url: URL {
2025-08-10 23:08:37        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        origin: 'https://www.googleapis.com',
2025-08-10 23:08:37        protocol: 'https:',
2025-08-10 23:08:37        username: '',
2025-08-10 23:08:37        password: '',
2025-08-10 23:08:37        host: 'www.googleapis.com',
2025-08-10 23:08:37        hostname: 'www.googleapis.com',
2025-08-10 23:08:37        port: '',
2025-08-10 23:08:37        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 23:08:37        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 23:08:37        searchParams: URLSearchParams {
2025-08-10 23:08:37          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37          'singleEvents' => 'true',
2025-08-10 23:08:37          'orderBy' => 'startTime' },
2025-08-10 23:08:37        hash: ''
2025-08-10 23:08:37      },
2025-08-10 23:08:37      method: 'GET',
2025-08-10 23:08:37      apiVersion: '',
2025-08-10 23:08:37      userAgentDirectives: [ [Object] ],
2025-08-10 23:08:37      paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37      headers: Headers {
2025-08-10 23:08:37        'accept-encoding': 'gzip',
2025-08-10 23:08:37        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      params: {
2025-08-10 23:08:37        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 23:08:37        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 23:08:37        singleEvents: true,
2025-08-10 23:08:37        orderBy: 'startTime'
2025-08-10 23:08:37      },
2025-08-10 23:08:37      validateStatus: [Function (anonymous)],
2025-08-10 23:08:37      retry: true,
2025-08-10 23:08:37      responseType: 'unknown',
2025-08-10 23:08:37      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 23:08:37      retryConfig: {
2025-08-10 23:08:37        currentRetryAttempt: 0,
2025-08-10 23:08:37        retry: 3,
2025-08-10 23:08:37        httpMethodsToRetry: [Array],
2025-08-10 23:08:37        noResponseRetries: 2,
2025-08-10 23:08:37        retryDelayMultiplier: 2,
2025-08-10 23:08:37        timeOfFirstRequest: 1754867317842,
2025-08-10 23:08:37        totalTimeout: 9007199254740991,
2025-08-10 23:08:37        maxRetryDelay: 9007199254740991,
2025-08-10 23:08:37        statusCodesToRetry: [Array]
2025-08-10 23:08:37      }
2025-08-10 23:08:37    },
2025-08-10 23:08:37    response: Response {
2025-08-10 23:08:37      size: 0,
2025-08-10 23:08:37      data: { error: [Object] },
2025-08-10 23:08:37      config: {
2025-08-10 23:08:37        url: URL {},
2025-08-10 23:08:37        method: 'GET',
2025-08-10 23:08:37        apiVersion: '',
2025-08-10 23:08:37        userAgentDirectives: [Array],
2025-08-10 23:08:37        paramsSerializer: [Function (anonymous)],
2025-08-10 23:08:37        headers: Headers {
2025-08-10 23:08:37          'accept-encoding': 'gzip',
2025-08-10 23:08:37          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 23:08:37          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 23:08:37          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 23:08:37        },
2025-08-10 23:08:37        params: [Object],
2025-08-10 23:08:37        validateStatus: [Function (anonymous)],
2025-08-10 23:08:37        retry: true,
2025-08-10 23:08:37        responseType: 'unknown',
2025-08-10 23:08:37        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 23:08:37      },
2025-08-10 23:08:37      Symbol(Body internals): {
