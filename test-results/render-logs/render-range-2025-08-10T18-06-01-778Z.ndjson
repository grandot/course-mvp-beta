2025-08-10 17:51:09  📨 收到 1 個事件
2025-08-10 17:51:09  📋 事件類型: message
2025-08-10 17:51:09  🔍 完整事件 JSON: {
2025-08-10 17:51:09    "type": "message",
2025-08-10 17:51:09    "message": {
2025-08-10 17:51:09      "type": "text",
2025-08-10 17:51:09      "text": "提醒我小明的數學課"
2025-08-10 17:51:09    },
2025-08-10 17:51:09    "source": {
2025-08-10 17:51:09      "userId": "U_test_user_qa",
2025-08-10 17:51:09      "type": "user"
2025-08-10 17:51:09    },
2025-08-10 17:51:09    "replyToken": "test-reply-token-1754848269003",
2025-08-10 17:51:09    "timestamp": 1754848269003
2025-08-10 17:51:09  }
2025-08-10 17:51:09  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:51:09  {"ts":"2025-08-10T17:51:09.274Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754848269274_icw2a9","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 17:51:09  🔍 用戶ID類型: string
2025-08-10 17:51:09  🔍 是否測試用戶: true
2025-08-10 17:51:09  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:51:09  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 17:51:09  ✅ 規則匹配成功: set_reminder
2025-08-10 17:51:09  {"ts":"2025-08-10T17:51:09.419Z","lvl":"info","stage":"nlp","traceId":"line_1754848269274_icw2a9","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:51:09  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:51:09  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:51:09  📊 規則提取置信度: 0.67
2025-08-10 17:51:09  🤖 啟用 AI 輔助提取...
2025-08-10 17:51:10  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:51:10  {"ts":"2025-08-10T17:51:10.763Z","lvl":"info","stage":"slots","traceId":"line_1754848269274_icw2a9","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:51:10  🎯 執行任務: set_reminder
2025-08-10 17:51:10  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:51:10  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 17:51:10  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 17:51:10  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 17:51:11  ✅ 提醒記錄已創建: vFXJZ7OV3m3FlohaX0Vn
2025-08-10 17:51:11  ✅ 提醒設定成功: vFXJZ7OV3m3FlohaX0Vn
2025-08-10 17:51:11  📊 任務執行結果: {
2025-08-10 17:51:11    success: true,
2025-08-10 17:51:11    code: 'REMINDER_SET_OK',
2025-08-10 17:51:11    message: '✅ 提醒設定完成！\n' +
2025-08-10 17:51:11      '📚 課程：小明 的 數學課\n' +
2025-08-10 17:51:11      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 17:51:11      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 17:51:11  }
2025-08-10 17:51:11  {"ts":"2025-08-10T17:51:11.044Z","lvl":"info","stage":"task","traceId":"line_1754848269274_icw2a9","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":281}
2025-08-10 17:51:11  🔍 檢查 replyToken: test-reply-token-1754848269003
2025-08-10 17:51:11  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:51:11  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 17:51:11  📚 課程：小明 的 數學課
2025-08-10 17:51:11  📅 上課時間：8/11 下午02:00
2025-08-10 17:51:11  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 17:51:11  {"ts":"2025-08-10T17:51:11.334Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754848269274_icw2a9","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 17:51:23  📨 收到 1 個事件
2025-08-10 17:51:23  📋 事件類型: message
2025-08-10 17:51:23  🔍 完整事件 JSON: {
2025-08-10 17:51:23    "type": "message",
2025-08-10 17:51:23    "message": {
2025-08-10 17:51:23      "type": "text",
2025-08-10 17:51:23      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 17:51:23    },
2025-08-10 17:51:23    "source": {
2025-08-10 17:51:23      "userId": "U_test_user_qa",
2025-08-10 17:51:23      "type": "user"
2025-08-10 17:51:23    },
2025-08-10 17:51:23    "replyToken": "test-reply-token-1754848283910",
2025-08-10 17:51:23    "timestamp": 1754848283910
2025-08-10 17:51:23  }
2025-08-10 17:51:23  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:51:24  {"ts":"2025-08-10T17:51:24.071Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754848284071_nqyi7b","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 17:51:24  🔍 用戶ID類型: string
2025-08-10 17:51:24  🔍 是否測試用戶: true
2025-08-10 17:51:24  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:51:24  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 17:51:24  ✅ 規則匹配成功: set_reminder
2025-08-10 17:51:24  {"ts":"2025-08-10T17:51:24.217Z","lvl":"info","stage":"nlp","traceId":"line_1754848284071_nqyi7b","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:51:24  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:51:24  📊 規則提取置信度: 0.67
2025-08-10 17:51:24  🤖 啟用 AI 輔助提取...
2025-08-10 17:51:26  ✅ 最終 slots: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 17:51:26  {"ts":"2025-08-10T17:51:26.502Z","lvl":"info","stage":"slots","traceId":"line_1754848284071_nqyi7b","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","reminderTime","reminderNote"]}
2025-08-10 17:51:26  🎯 執行任務: set_reminder
2025-08-10 17:51:26  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 17:51:26  📊 任務執行結果: {
2025-08-10 17:51:26    success: false,
2025-08-10 17:51:26    code: 'MISSING_STUDENT',
2025-08-10 17:51:26    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 17:51:26  }
2025-08-10 17:51:26  {"ts":"2025-08-10T17:51:26.502Z","lvl":"info","stage":"task","traceId":"line_1754848284071_nqyi7b","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 17:51:26  🔍 檢查 replyToken: test-reply-token-1754848283910
2025-08-10 17:51:26  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:51:26  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 17:51:26  {"ts":"2025-08-10T17:51:26.791Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754848284071_nqyi7b","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 17:51:39  📨 收到 1 個事件
2025-08-10 17:51:39  📋 事件類型: message
2025-08-10 17:51:39  🔍 完整事件 JSON: {
2025-08-10 17:51:39    "type": "message",
2025-08-10 17:51:39    "message": {
2025-08-10 17:51:39      "type": "text",
2025-08-10 17:51:39      "text": "提醒我小明的物理課"
2025-08-10 17:51:39    },
2025-08-10 17:51:39  📨 收到 1 個事件
2025-08-10 17:51:39  📋 事件類型: message
2025-08-10 17:51:39  🔍 完整事件 JSON: {
2025-08-10 17:51:39    "type": "message",
2025-08-10 17:51:39    "message": {
2025-08-10 17:51:39      "type": "text",
2025-08-10 17:51:39      "text": "提醒我小明的物理課"
2025-08-10 17:51:39    },
2025-08-10 17:51:39    "source": {
2025-08-10 17:51:39      "userId": "U_test_user_qa",
2025-08-10 17:51:39      "type": "user"
2025-08-10 17:51:39    },
2025-08-10 17:51:39    "replyToken": "test-reply-token-1754848299616",
2025-08-10 17:51:39    "timestamp": 1754848299616
2025-08-10 17:51:39  }
2025-08-10 17:51:39  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:51:39  {"ts":"2025-08-10T17:51:39.786Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754848299786_5b4jak","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 17:51:39  🔍 用戶ID類型: string
2025-08-10 17:51:39  🔍 是否測試用戶: true
2025-08-10 17:51:39  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:51:39  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 17:51:39  ✅ 規則匹配成功: set_reminder
2025-08-10 17:51:39  {"ts":"2025-08-10T17:51:39.932Z","lvl":"info","stage":"nlp","traceId":"line_1754848299786_5b4jak","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:51:40  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:51:40  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:51:40  📊 規則提取置信度: 0.67
2025-08-10 17:51:40  🤖 啟用 AI 輔助提取...
2025-08-10 17:51:41  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:51:41  {"ts":"2025-08-10T17:51:41.422Z","lvl":"info","stage":"slots","traceId":"line_1754848299786_5b4jak","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:51:41  🎯 執行任務: set_reminder
2025-08-10 17:51:41  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:51:41  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 17:51:41  📊 任務執行結果: {
2025-08-10 17:51:41    success: false,
2025-08-10 17:51:41    code: 'NOT_FOUND',
2025-08-10 17:51:41    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 17:51:41  }
2025-08-10 17:51:41  {"ts":"2025-08-10T17:51:41.492Z","lvl":"info","stage":"task","traceId":"line_1754848299786_5b4jak","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":70}
2025-08-10 17:51:41  🔍 檢查 replyToken: test-reply-token-1754848299616
2025-08-10 17:51:41  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:51:41  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 17:51:41  {"ts":"2025-08-10T17:51:41.782Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754848299786_5b4jak","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 17:51:54  📨 收到 1 個事件
2025-08-10 17:51:54  📋 事件類型: message
2025-08-10 17:51:54  🔍 完整事件 JSON: {
2025-08-10 17:51:54    "type": "message",
2025-08-10 17:51:54    "message": {
2025-08-10 17:51:54      "type": "text",
2025-08-10 17:51:54      "text": "小明的數學課改到下午4點"
2025-08-10 17:51:54    },
2025-08-10 17:51:54    "source": {
2025-08-10 17:51:54      "userId": "U_test_user_qa",
2025-08-10 17:51:54      "type": "user"
2025-08-10 17:51:54    },
2025-08-10 17:51:54    "replyToken": "test-reply-token-1754848314441",
2025-08-10 17:51:54    "timestamp": 1754848314441
2025-08-10 17:51:54  }
2025-08-10 17:51:54  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:51:54  {"ts":"2025-08-10T17:51:54.608Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754848314608_8fzpgn","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 17:51:54  🔍 用戶ID類型: string
2025-08-10 17:51:54  🔍 是否測試用戶: true
2025-08-10 17:51:54  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:51:54  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 17:51:54  ✅ 規則匹配成功: modify_course
2025-08-10 17:51:54  {"ts":"2025-08-10T17:51:54.753Z","lvl":"info","stage":"nlp","traceId":"line_1754848314608_8fzpgn","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 17:51:54  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 17:51:54  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 17:51:55  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:51:55  📊 規則提取置信度: 0.00
2025-08-10 17:51:55  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 17:51:56  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 17:51:56  {"ts":"2025-08-10T17:51:56.058Z","lvl":"info","stage":"slots","traceId":"line_1754848314608_8fzpgn","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 17:51:56  🎯 執行任務: modify_course
2025-08-10 17:51:56  ✏️ 執行修改操作任務: {
2025-08-10 17:51:56    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 17:51:56    userId: 'U_test_user_qa'
2025-08-10 17:51:56  }
2025-08-10 17:51:56  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 17:51:56  {"ts":"2025-08-10T17:51:56.131Z","lvl":"info","stage":"task","traceId":"line_1754848314608_8fzpgn","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":72}
2025-08-10 17:51:56  🔍 檢查 replyToken: test-reply-token-1754848314441
2025-08-10 17:51:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:51:56  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 17:51:56  {"ts":"2025-08-10T17:51:56.420Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754848314608_8fzpgn","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 17:52:09  📨 收到 1 個事件
2025-08-10 17:52:09  📋 事件類型: message
2025-08-10 17:52:09  🔍 完整事件 JSON: {
2025-08-10 17:52:09    "type": "message",
2025-08-10 17:52:09    "message": {
2025-08-10 17:52:09      "type": "text",
2025-08-10 17:52:09      "text": "小明每天的晨練課改到早上7點"
2025-08-10 17:52:09    },
2025-08-10 17:52:09    "source": {
2025-08-10 17:52:09      "userId": "U_test_user_qa",
2025-08-10 17:52:09      "type": "user"
2025-08-10 17:52:09    },
2025-08-10 17:52:09    "replyToken": "test-reply-token-1754848329315",
2025-08-10 17:52:09    "timestamp": 1754848329315
2025-08-10 17:52:09  }
2025-08-10 17:52:09  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:52:09  {"ts":"2025-08-10T17:52:09.669Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754848329669_ivxhw4","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 17:52:09  📨 收到 1 個事件
2025-08-10 17:52:09  📋 事件類型: message
2025-08-10 17:52:09  🔍 完整事件 JSON: {
2025-08-10 17:52:09    "type": "message",
2025-08-10 17:52:09    "message": {
2025-08-10 17:52:09      "type": "text",
2025-08-10 17:52:09      "text": "小明每天的晨練課改到早上7點"
2025-08-10 17:52:09    },
2025-08-10 17:52:09    "source": {
2025-08-10 17:52:09      "userId": "U_test_user_qa",
2025-08-10 17:52:09      "type": "user"
2025-08-10 17:52:09    },
2025-08-10 17:52:09    "replyToken": "test-reply-token-1754848329315",
2025-08-10 17:52:09    "timestamp": 1754848329315
2025-08-10 17:52:09  }
2025-08-10 17:52:09  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:52:09  {"ts":"2025-08-10T17:52:09.669Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754848329669_ivxhw4","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 17:52:09  🔍 用戶ID類型: string
2025-08-10 17:52:09  🔍 是否測試用戶: true
2025-08-10 17:52:09  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:52:09  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 17:52:09  ✅ 規則匹配成功: create_recurring_course
2025-08-10 17:52:09  {"ts":"2025-08-10T17:52:09.814Z","lvl":"info","stage":"nlp","traceId":"line_1754848329669_ivxhw4","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 17:52:09  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 17:52:09  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 17:52:09  ✅ 時間解析成功: {
2025-08-10 17:52:09    input: '小明每天的晨練課改到早上7點',
2025-08-10 17:52:09    output: '07:00',
2025-08-10 17:52:09    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 17:52:09  }
2025-08-10 17:52:10  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:52:10  📊 規則提取置信度: 0.67
2025-08-10 17:52:10  🤖 啟用 AI 輔助提取...
2025-08-10 17:52:10  ✅ 最終 slots: {
2025-08-10 17:52:10    studentName: '小明',
2025-08-10 17:52:10    courseName: '晨練課',
2025-08-10 17:52:10    scheduleTime: '07:00',
2025-08-10 17:52:10    recurring: false
2025-08-10 17:52:10  }
2025-08-10 17:52:10  {"ts":"2025-08-10T17:52:10.990Z","lvl":"info","stage":"slots","traceId":"line_1754848329669_ivxhw4","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:10  🎯 執行任務: create_recurring_course
2025-08-10 17:52:10  🎯 開始處理新增課程任務
2025-08-10 17:52:10  📋 接收參數: {
2025-08-10 17:52:10    studentName: '小明',
2025-08-10 17:52:10    courseName: '晨練課',
2025-08-10 17:52:10    scheduleTime: '07:00',
2025-08-10 17:52:10    recurring: false
2025-08-10 17:52:10  }
2025-08-10 17:52:11  📊 任務執行結果: {
2025-08-10 17:52:11    success: false,
2025-08-10 17:52:11    code: 'MISSING_FIELDS',
2025-08-10 17:52:11    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 17:52:11    expectingInput: true,
2025-08-10 17:52:11    missingFields: [ '課程日期' ]
2025-08-10 17:52:11  }
2025-08-10 17:52:11  {"ts":"2025-08-10T17:52:11.136Z","lvl":"info","stage":"task","traceId":"line_1754848329669_ivxhw4","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":146}
2025-08-10 17:52:11  🔍 檢查 replyToken: test-reply-token-1754848329315
2025-08-10 17:52:11  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:52:11  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 17:52:11  
2025-08-10 17:52:11  範例：「小明每週三下午3點數學課」
2025-08-10 17:52:11  {"ts":"2025-08-10T17:52:11.430Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754848329669_ivxhw4","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 17:52:24  📨 收到 1 個事件
2025-08-10 17:52:24  📋 事件類型: message
2025-08-10 17:52:24  🔍 完整事件 JSON: {
2025-08-10 17:52:24    "type": "message",
2025-08-10 17:52:24    "message": {
2025-08-10 17:52:24      "type": "text",
2025-08-10 17:52:24      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 17:52:24    },
2025-08-10 17:52:24    "source": {
2025-08-10 17:52:24      "userId": "U_test_user_qa",
2025-08-10 17:52:24      "type": "user"
2025-08-10 17:52:24    },
2025-08-10 17:52:24    "replyToken": "test-reply-token-1754848344153",
2025-08-10 17:52:24    "timestamp": 1754848344153
2025-08-10 17:52:24  }
2025-08-10 17:52:24  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:52:24  {"ts":"2025-08-10T17:52:24.314Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 17:52:24  🔍 用戶ID類型: string
2025-08-10 17:52:24  🔍 是否測試用戶: true
2025-08-10 17:52:24  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:52:24  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 17:52:24  ✅ 規則匹配成功: create_recurring_course
2025-08-10 17:52:24  {"ts":"2025-08-10T17:52:24.459Z","lvl":"info","stage":"nlp","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 17:52:24  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 17:52:24  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 17:52:24  ✅ 時間解析成功: {
2025-08-10 17:52:24    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 17:52:24    output: '15:00',
2025-08-10 17:52:24    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 17:52:24  }
2025-08-10 17:52:24  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:52:24  📊 規則提取置信度: 0.67
2025-08-10 17:52:24  🤖 啟用 AI 輔助提取...
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
2025-08-10 17:52:26  ✅ 最終 slots: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  {"ts":"2025-08-10T17:52:26.318Z","lvl":"info","stage":"slots","traceId":"line_1754848344314_mc8bjs","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:52:26  🎯 執行任務: create_recurring_course
2025-08-10 17:52:26  🎯 開始處理新增課程任務
2025-08-10 17:52:26  📋 接收參數: {
2025-08-10 17:52:26    studentName: 'Lumi',
2025-08-10 17:52:26    courseName: '鋼琴課',
2025-08-10 17:52:26    scheduleTime: '15:00',
2025-08-10 17:52:26    recurring: true
2025-08-10 17:52:26  }
2025-08-10 17:52:26  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 17:52:26  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:52:26      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:52:26      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:52:26      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:52:26      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:52:26      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:52:26      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:52:26      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:52:26      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:52:26      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:52:26      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:52:26    config: {
2025-08-10 17:52:26      url: URL {
2025-08-10 17:52:26        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        origin: 'https://www.googleapis.com',
2025-08-10 17:52:26        protocol: 'https:',
2025-08-10 17:52:26        username: '',
2025-08-10 17:52:26        password: '',
2025-08-10 17:52:26        host: 'www.googleapis.com',
2025-08-10 17:52:26        hostname: 'www.googleapis.com',
2025-08-10 17:52:26        port: '',
2025-08-10 17:52:26        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 17:52:26        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:52:26        searchParams: URLSearchParams {
2025-08-10 17:52:26          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26          'singleEvents' => 'true',
2025-08-10 17:52:26          'orderBy' => 'startTime' },
2025-08-10 17:52:26        hash: ''
2025-08-10 17:52:26      },
2025-08-10 17:52:26      method: 'GET',
2025-08-10 17:52:26      apiVersion: '',
2025-08-10 17:52:26      userAgentDirectives: [ [Object] ],
2025-08-10 17:52:26      paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26      headers: Headers {
2025-08-10 17:52:26        'accept-encoding': 'gzip',
2025-08-10 17:52:26        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      params: {
2025-08-10 17:52:26        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:52:26        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:52:26        singleEvents: true,
2025-08-10 17:52:26        orderBy: 'startTime'
2025-08-10 17:52:26      },
2025-08-10 17:52:26      validateStatus: [Function (anonymous)],
2025-08-10 17:52:26      retry: true,
2025-08-10 17:52:26      responseType: 'unknown',
2025-08-10 17:52:26      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:52:26      retryConfig: {
2025-08-10 17:52:26        currentRetryAttempt: 0,
2025-08-10 17:52:26        retry: 3,
2025-08-10 17:52:26        httpMethodsToRetry: [Array],
2025-08-10 17:52:26        noResponseRetries: 2,
2025-08-10 17:52:26        retryDelayMultiplier: 2,
2025-08-10 17:52:26        timeOfFirstRequest: 1754848346701,
2025-08-10 17:52:26        totalTimeout: 9007199254740991,
2025-08-10 17:52:26        maxRetryDelay: 9007199254740991,
2025-08-10 17:52:26        statusCodesToRetry: [Array]
2025-08-10 17:52:26      }
2025-08-10 17:52:26    },
2025-08-10 17:52:26    response: Response {
2025-08-10 17:52:26      size: 0,
2025-08-10 17:52:26      data: { error: [Object] },
2025-08-10 17:52:26      config: {
2025-08-10 17:52:26        url: URL {},
2025-08-10 17:52:26        method: 'GET',
2025-08-10 17:52:26        apiVersion: '',
2025-08-10 17:52:26        userAgentDirectives: [Array],
2025-08-10 17:52:26        paramsSerializer: [Function (anonymous)],
2025-08-10 17:52:26        headers: Headers {
2025-08-10 17:52:26          'accept-encoding': 'gzip',
2025-08-10 17:52:26          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:52:26          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:52:26          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:52:26        },
2025-08-10 17:52:26        params: [Object],
2025-08-10 17:52:26        validateStatus: [Function (anonymous)],
2025-08-10 17:52:26        retry: true,
2025-08-10 17:52:26        responseType: 'unknown',
2025-08-10 17:52:26        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:52:26      },
2025-08-10 17:52:26      Symbol(Body internals): {
