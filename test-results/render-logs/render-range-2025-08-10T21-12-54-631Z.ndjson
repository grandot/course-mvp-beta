2025-08-10 20:57:54  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 20:57:54  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:57:54  📊 規則提取置信度: 0.50
2025-08-10 20:57:54  🤖 啟用 AI 輔助提取...
2025-08-10 20:57:55  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:57:55  {"ts":"2025-08-10T20:57:55.719Z","lvl":"info","stage":"slots","traceId":"line_1754859472368_3y49j3","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 20:57:55  🎯 執行任務: query_schedule
2025-08-10 20:57:55  🎯 開始處理查詢課表任務
2025-08-10 20:57:55  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:57:55  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:57:55  📚 查詢到 341 筆課程資料
2025-08-10 20:57:56  📚 查詢到 14 筆課程
2025-08-10 20:57:56  📊 任務執行結果: {
2025-08-10 20:57:56    success: true,
2025-08-10 20:57:56    code: 'QUERY_OK',
2025-08-10 20:57:56    message: '📅 小明本週的課程安排\n' +
2025-08-10 20:57:56      '\n' +
2025-08-10 20:57:56      '📆 8/9 (週六)\n' +
2025-08-10 20:57:56      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '\n' +
2025-08-10 20:57:56      '📆 8/10 (週日)\n' +
2025-08-10 20:57:56      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '\n' +
2025-08-10 20:57:56      '📆 8/11 (週一)\n' +
2025-08-10 20:57:56      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '\n' +
2025-08-10 20:57:56      '📆 8/12 (週二)\n' +
2025-08-10 20:57:56      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '\n' +
2025-08-10 20:57:56      '📆 8/13 (週三)\n' +
2025-08-10 20:57:56      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '\n' +
2025-08-10 20:57:56      '📆 8/14 (週四)\n' +
2025-08-10 20:57:56      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '\n' +
2025-08-10 20:57:56      '📆 8/15 (週五)\n' +
2025-08-10 20:57:56      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:57:56      '  上午8:00 - 晨練課 🔄',
2025-08-10 20:57:56    data: {
2025-08-10 20:57:56      courses: [
2025-08-10 20:57:56        [Object], [Object],
2025-08-10 20:57:56        [Object], [Object],
2025-08-10 20:57:56        [Object], [Object],
2025-08-10 20:57:56        [Object], [Object],
2025-08-10 20:57:56        [Object], [Object],
2025-08-10 20:57:56        [Object], [Object],
2025-08-10 20:57:56        [Object], [Object]
2025-08-10 20:57:56      ],
2025-08-10 20:57:56      courseCount: 14,
2025-08-10 20:57:56      dateRange: {
2025-08-10 20:57:56        startDate: '2025-08-10',
2025-08-10 20:57:56        endDate: '2025-08-16',
2025-08-10 20:57:56        description: '本週'
2025-08-10 20:57:56      }
2025-08-10 20:57:56    }
2025-08-10 20:57:56  }
2025-08-10 20:57:56  {"ts":"2025-08-10T20:57:56.057Z","lvl":"info","stage":"task","traceId":"line_1754859472368_3y49j3","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":338}
2025-08-10 20:57:56  🔍 檢查 replyToken: test-reply-token-1754859472183
2025-08-10 20:57:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:57:56  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 20:57:56  
2025-08-10 20:57:56  📆 8/9 (週六)
2025-08-10 20:57:56    上午7:00 - 晨練課 🔄
2025-08-10 20:57:56    上午8:00 - 晨練課 🔄
2025-08-10 20:57:56  
2025-08-10 20:57:56  📆 8/10 (週日)
2025-08-10 20:57:56    上午7:00 - 晨練課 🔄
2025-08-10 20:57:56    上午8:00 - 晨練課 🔄
2025-08-10 20:57:56  
2025-08-10 20:57:56  📆 8/11 (週一)
2025-08-10 20:57:56    上午7:00 - 晨練課 🔄
2025-08-10 20:57:56    上午8:00 - 晨練課 🔄
2025-08-10 20:57:56  
2025-08-10 20:57:56  📆 8/12 (週二)
2025-08-10 20:57:56    上午7:00 - 晨練課 🔄
2025-08-10 20:57:56    上午8:00 - 晨練課 🔄
2025-08-10 20:57:56  
2025-08-10 20:57:56  📆 8/13 (週三)
2025-08-10 20:57:56    上午7:00 - 晨練課 🔄
2025-08-10 20:57:56    上午8:00 - 晨練課 🔄
2025-08-10 20:57:56  
2025-08-10 20:57:56  📆 8/14 (週四)
2025-08-10 20:57:56    上午7:00 - 晨練課 🔄
2025-08-10 20:57:56    上午8:00 - 晨練課 🔄
2025-08-10 20:57:56  
2025-08-10 20:57:56  📆 8/15 (週五)
2025-08-10 20:57:56    上午7:00 - 晨練課 🔄
2025-08-10 20:57:56    上午8:00 - 晨練課 🔄
2025-08-10 20:57:56  {"ts":"2025-08-10T20:57:56.344Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859472368_3y49j3","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 20:58:08  📨 收到 1 個事件
2025-08-10 20:58:08  📋 事件類型: message
2025-08-10 20:58:08  🔍 完整事件 JSON: {
2025-08-10 20:58:08    "type": "message",
2025-08-10 20:58:08    "message": {
2025-08-10 20:58:08  📨 收到 1 個事件
2025-08-10 20:58:08  📋 事件類型: message
2025-08-10 20:58:08  🔍 完整事件 JSON: {
2025-08-10 20:58:08    "type": "message",
2025-08-10 20:58:08    "message": {
2025-08-10 20:58:08      "type": "text",
2025-08-10 20:58:08      "text": "查詢Lumi的重複課程"
2025-08-10 20:58:08    },
2025-08-10 20:58:08    "source": {
2025-08-10 20:58:08      "userId": "U_test_user_qa",
2025-08-10 20:58:08      "type": "user"
2025-08-10 20:58:08    },
2025-08-10 20:58:08    "replyToken": "test-reply-token-1754859488825",
2025-08-10 20:58:08    "timestamp": 1754859488825
2025-08-10 20:58:08  }
2025-08-10 20:58:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:58:09  {"ts":"2025-08-10T20:58:09.006Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859489006_hgxllj","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 20:58:09  🔍 用戶ID類型: string
2025-08-10 20:58:09  🔍 是否測試用戶: true
2025-08-10 20:58:09  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:58:09  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 20:58:09  ✅ 規則匹配成功: query_schedule
2025-08-10 20:58:09  {"ts":"2025-08-10T20:58:09.148Z","lvl":"info","stage":"nlp","traceId":"line_1754859489006_hgxllj","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 20:58:09  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 20:58:09  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:58:09  📊 規則提取置信度: 0.50
2025-08-10 20:58:09  🤖 啟用 AI 輔助提取...
2025-08-10 20:58:10  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:58:10  {"ts":"2025-08-10T20:58:10.638Z","lvl":"info","stage":"slots","traceId":"line_1754859489006_hgxllj","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 20:58:10  🎯 執行任務: query_schedule
2025-08-10 20:58:10  🎯 開始處理查詢課表任務
2025-08-10 20:58:10  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:58:10  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:58:10  📚 查詢到 334 筆課程資料
2025-08-10 20:58:10  📚 查詢到 0 筆課程
2025-08-10 20:58:10  📊 任務執行結果: {
2025-08-10 20:58:10    success: true,
2025-08-10 20:58:10    code: 'QUERY_OK_EMPTY',
2025-08-10 20:58:10    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 20:58:10      '\n' +
2025-08-10 20:58:10      '💡 您可以：\n' +
2025-08-10 20:58:10      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 20:58:10      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 20:58:10      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 20:58:10    data: {
2025-08-10 20:58:10      courseCount: 0,
2025-08-10 20:58:10      dateRange: {
2025-08-10 20:58:10        startDate: '2025-08-10',
2025-08-10 20:58:10        endDate: '2025-08-16',
2025-08-10 20:58:10        description: '本週'
2025-08-10 20:58:10      }
2025-08-10 20:58:10    }
2025-08-10 20:58:10  }
2025-08-10 20:58:10  {"ts":"2025-08-10T20:58:10.920Z","lvl":"info","stage":"task","traceId":"line_1754859489006_hgxllj","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":281}
2025-08-10 20:58:11  🔍 檢查 replyToken: test-reply-token-1754859488825
2025-08-10 20:58:11  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:58:11  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 20:58:11  
2025-08-10 20:58:11  💡 您可以：
2025-08-10 20:58:11  • 新增課程：「小明明天上午10點英文課」
2025-08-10 20:58:11  • 查詢其他時間：「小明下週的課表」
2025-08-10 20:58:11  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 20:58:11  {"ts":"2025-08-10T20:58:11.205Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859489006_hgxllj","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 20:58:24  📨 收到 1 個事件
2025-08-10 20:58:24  📋 事件類型: message
2025-08-10 20:58:24  🔍 完整事件 JSON: {
2025-08-10 20:58:24    "type": "message",
2025-08-10 20:58:24    "message": {
2025-08-10 20:58:24      "type": "text",
2025-08-10 20:58:24      "text": "今天小明的數學課學了分數加減法"
2025-08-10 20:58:24    },
2025-08-10 20:58:24    "source": {
2025-08-10 20:58:24      "userId": "U_test_user_qa",
2025-08-10 20:58:24      "type": "user"
2025-08-10 20:58:24    },
2025-08-10 20:58:24    "replyToken": "test-reply-token-1754859503899",
2025-08-10 20:58:24    "timestamp": 1754859503899
2025-08-10 20:58:24  }
2025-08-10 20:58:24  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:58:24  {"ts":"2025-08-10T20:58:24.071Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859504071_u56mxd","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 20:58:24  🔍 用戶ID類型: string
2025-08-10 20:58:24  🔍 是否測試用戶: true
2025-08-10 20:58:24  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:58:24  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 20:58:24  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:58:24  {"ts":"2025-08-10T20:58:24.221Z","lvl":"info","stage":"nlp","traceId":"line_1754859504071_u56mxd","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:58:24  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:58:24  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:58:24  📊 規則提取置信度: 1.00
2025-08-10 20:58:24  🤖 啟用 AI 輔助提取...
2025-08-10 20:58:25  ✅ 最終 slots: {
2025-08-10 20:58:25    studentName: '小明',
2025-08-10 20:58:25    courseName: '數學課',
2025-08-10 20:58:25    timeReference: 'today',
2025-08-10 20:58:25    content: '分數加減法'
2025-08-10 20:58:25  }
2025-08-10 20:58:25  {"ts":"2025-08-10T20:58:25.527Z","lvl":"info","stage":"slots","traceId":"line_1754859504071_u56mxd","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:58:25  🎯 執行任務: record_content
2025-08-10 20:58:25  📝 開始處理記錄課程內容任務: {
2025-08-10 20:58:25    studentName: '小明',
2025-08-10 20:58:25  ✅ 最終 slots: {
2025-08-10 20:58:25    studentName: '小明',
2025-08-10 20:58:25    courseName: '數學課',
2025-08-10 20:58:25    timeReference: 'today',
2025-08-10 20:58:25    content: '分數加減法'
2025-08-10 20:58:25  }
2025-08-10 20:58:25  {"ts":"2025-08-10T20:58:25.527Z","lvl":"info","stage":"slots","traceId":"line_1754859504071_u56mxd","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:58:25  🎯 執行任務: record_content
2025-08-10 20:58:25  📝 開始處理記錄課程內容任務: {
2025-08-10 20:58:25    studentName: '小明',
2025-08-10 20:58:25    courseName: '數學課',
2025-08-10 20:58:25    timeReference: 'today',
2025-08-10 20:58:25    content: '分數加減法'
2025-08-10 20:58:25  }
2025-08-10 20:58:25  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 20:58:25  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 20:58:25  ✅ 文檔已添加到 course_contents: sXuqfokIl0zfDC3VDbWk
2025-08-10 20:58:25  ✅ 課程內容記錄已儲存: sXuqfokIl0zfDC3VDbWk
2025-08-10 20:58:25  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 20:58:25  📊 任務執行結果: {
2025-08-10 20:58:25    success: true,
2025-08-10 20:58:25    code: 'RECORD_CONTENT_OK',
2025-08-10 20:58:25    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 20:58:25    data: {
2025-08-10 20:58:25      recordId: 'sXuqfokIl0zfDC3VDbWk',
2025-08-10 20:58:25      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 20:58:25      targetDate: '2025-08-10'
2025-08-10 20:58:25    }
2025-08-10 20:58:25  }
2025-08-10 20:58:25  {"ts":"2025-08-10T20:58:25.821Z","lvl":"info","stage":"task","traceId":"line_1754859504071_u56mxd","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":294}
2025-08-10 20:58:26  🔍 檢查 replyToken: test-reply-token-1754859503899
2025-08-10 20:58:26  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:58:26  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:58:26  📚 課程：小明 - 數學課
2025-08-10 20:58:26  📅 日期：2025-08-10
2025-08-10 20:58:26  💬 內容：分數加減法
2025-08-10 20:58:26  {"ts":"2025-08-10T20:58:26.104Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859504071_u56mxd","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 20:58:38  📨 收到 1 個事件
2025-08-10 20:58:38  📋 事件類型: message
2025-08-10 20:58:38  🔍 完整事件 JSON: {
2025-08-10 20:58:38    "type": "message",
2025-08-10 20:58:38    "message": {
2025-08-10 20:58:38      "type": "text",
2025-08-10 20:58:38      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 20:58:38    },
2025-08-10 20:58:38    "source": {
2025-08-10 20:58:38      "userId": "U_test_user_qa",
2025-08-10 20:58:38      "type": "user"
2025-08-10 20:58:38    },
2025-08-10 20:58:38    "replyToken": "test-reply-token-1754859518561",
2025-08-10 20:58:38    "timestamp": 1754859518561
2025-08-10 20:58:38  }
2025-08-10 20:58:38  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:58:38  {"ts":"2025-08-10T20:58:38.745Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859518745_3a3e7a","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 20:58:38  🔍 用戶ID類型: string
2025-08-10 20:58:38  🔍 是否測試用戶: true
2025-08-10 20:58:38  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:58:38  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 20:58:38  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:58:38  {"ts":"2025-08-10T20:58:38.886Z","lvl":"info","stage":"nlp","traceId":"line_1754859518745_3a3e7a","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:58:39  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:58:39  📊 規則提取置信度: 0.33
2025-08-10 20:58:39  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 20:58:40  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:58:40  {"ts":"2025-08-10T20:58:40.971Z","lvl":"info","stage":"slots","traceId":"line_1754859518745_3a3e7a","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 20:58:40  🎯 執行任務: record_content
2025-08-10 20:58:40  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:58:41  ✅ 文檔已添加到 course_contents: bhgzNeilm0ythCFpfsVj
2025-08-10 20:58:41  ✅ 課程內容記錄已儲存: bhgzNeilm0ythCFpfsVj
2025-08-10 20:58:41  📊 任務執行結果: {
2025-08-10 20:58:41    success: true,
2025-08-10 20:58:41    code: 'RECORD_CONTENT_OK',
2025-08-10 20:58:41    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 20:58:41    data: {
2025-08-10 20:58:41      recordId: 'bhgzNeilm0ythCFpfsVj',
2025-08-10 20:58:41      courseId: null,
2025-08-10 20:58:41      targetDate: '2025-08-09'
2025-08-10 20:58:41    }
2025-08-10 20:58:41  }
2025-08-10 20:58:41  {"ts":"2025-08-10T20:58:41.051Z","lvl":"info","stage":"task","traceId":"line_1754859518745_3a3e7a","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":80}
2025-08-10 20:58:41  🔍 檢查 replyToken: test-reply-token-1754859518561
2025-08-10 20:58:41  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:58:41  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:58:41  📝 記錄為獨立內容
2025-08-10 20:58:41  📚 課程：鋼琴課
2025-08-10 20:58:41  📅 日期：2025-08-09
2025-08-10 20:58:41  💬 內容：練習了小星星
2025-08-10 20:58:41  {"ts":"2025-08-10T20:58:41.335Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859518745_3a3e7a","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 20:58:54  📨 收到 1 個事件
2025-08-10 20:58:54  📋 事件類型: message
2025-08-10 20:58:54  🔍 完整事件 JSON: {
2025-08-10 20:58:54    "type": "message",
2025-08-10 20:58:54    "message": {
2025-08-10 20:58:54      "type": "text",
2025-08-10 20:58:54      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:58:54    },
2025-08-10 20:58:54    "source": {
2025-08-10 20:58:54      "userId": "U_test_user_qa",
2025-08-10 20:58:54      "type": "user"
2025-08-10 20:58:54    },
2025-08-10 20:58:54  📨 收到 1 個事件
2025-08-10 20:58:54  📋 事件類型: message
2025-08-10 20:58:54  🔍 完整事件 JSON: {
2025-08-10 20:58:54    "type": "message",
2025-08-10 20:58:54    "message": {
2025-08-10 20:58:54      "type": "text",
2025-08-10 20:58:54      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:58:54    },
2025-08-10 20:58:54    "source": {
2025-08-10 20:58:54      "userId": "U_test_user_qa",
2025-08-10 20:58:54      "type": "user"
2025-08-10 20:58:54    },
2025-08-10 20:58:54    "replyToken": "test-reply-token-1754859533971",
2025-08-10 20:58:54    "timestamp": 1754859533971
2025-08-10 20:58:54  }
2025-08-10 20:58:54  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:58:54  {"ts":"2025-08-10T20:58:54.158Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859534158_dddt0m","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 20:58:54  🔍 用戶ID類型: string
2025-08-10 20:58:54  🔍 是否測試用戶: true
2025-08-10 20:58:54  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:58:54  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 20:58:54  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:58:54  {"ts":"2025-08-10T20:58:54.299Z","lvl":"info","stage":"nlp","traceId":"line_1754859534158_dddt0m","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:58:54  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:58:54  📊 規則提取置信度: 0.67
2025-08-10 20:58:54  🤖 啟用 AI 輔助提取...
2025-08-10 20:58:57  ✅ 最終 slots: {
2025-08-10 20:58:57    studentName: '小明',
2025-08-10 20:58:57    courseName: '數學課',
2025-08-10 20:58:57    timeReference: 'yesterday',
2025-08-10 20:58:57    content: '什麼？'
2025-08-10 20:58:57  }
2025-08-10 20:58:57  {"ts":"2025-08-10T20:58:57.043Z","lvl":"info","stage":"slots","traceId":"line_1754859534158_dddt0m","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:58:57  🎯 執行任務: record_content
2025-08-10 20:58:57  📝 開始處理記錄課程內容任務: {
2025-08-10 20:58:57    studentName: '小明',
2025-08-10 20:58:57    courseName: '數學課',
2025-08-10 20:58:57    timeReference: 'yesterday',
2025-08-10 20:58:57    content: '什麼？'
2025-08-10 20:58:57  }
2025-08-10 20:58:57  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 20:58:57  ❓ 未找到完全匹配的課程
2025-08-10 20:58:57  ✅ 文檔已添加到 course_contents: slIhDnbmpzYRAbLBKfVs
2025-08-10 20:58:57  ✅ 課程內容記錄已儲存: slIhDnbmpzYRAbLBKfVs
2025-08-10 20:58:57  📊 任務執行結果: {
2025-08-10 20:58:57    success: true,
2025-08-10 20:58:57    code: 'RECORD_CONTENT_OK',
2025-08-10 20:58:57    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 20:58:57    data: {
2025-08-10 20:58:57      recordId: 'slIhDnbmpzYRAbLBKfVs',
2025-08-10 20:58:57      courseId: null,
2025-08-10 20:58:57      targetDate: '2025-08-09'
2025-08-10 20:58:57    }
2025-08-10 20:58:57  }
2025-08-10 20:58:57  {"ts":"2025-08-10T20:58:57.443Z","lvl":"info","stage":"task","traceId":"line_1754859534158_dddt0m","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":400}
2025-08-10 20:58:57  🔍 檢查 replyToken: test-reply-token-1754859533971
2025-08-10 20:58:57  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:58:57  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:58:57  📝 記錄為獨立內容
2025-08-10 20:58:57  👨‍🎓 學生：小明
2025-08-10 20:58:57  📚 課程：數學課
2025-08-10 20:58:57  📅 日期：2025-08-09
2025-08-10 20:58:57  💬 內容：什麼？
2025-08-10 20:58:57  {"ts":"2025-08-10T20:58:57.726Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859534158_dddt0m","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 20:59:04  📨 收到 1 個事件
2025-08-10 20:59:04  📋 事件類型: message
2025-08-10 20:59:04  🔍 完整事件 JSON: {
2025-08-10 20:59:04    "type": "message",
2025-08-10 20:59:04    "message": {
2025-08-10 20:59:04      "type": "text",
2025-08-10 20:59:04      "text": "記錄小明今天化學課的內容"
2025-08-10 20:59:04    },
2025-08-10 20:59:04    "source": {
2025-08-10 20:59:04      "userId": "U_test_user_qa",
2025-08-10 20:59:04      "type": "user"
2025-08-10 20:59:04    },
2025-08-10 20:59:04    "replyToken": "test-reply-token-1754859544701",
2025-08-10 20:59:04    "timestamp": 1754859544701
2025-08-10 20:59:04  }
2025-08-10 20:59:04  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:59:04  {"ts":"2025-08-10T20:59:04.986Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859544986_kqx2px","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 20:59:04  🔍 用戶ID類型: string
2025-08-10 20:59:04  🔍 是否測試用戶: true
2025-08-10 20:59:04  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:59:04  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 20:59:05  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:59:05  {"ts":"2025-08-10T20:59:05.128Z","lvl":"info","stage":"nlp","traceId":"line_1754859544986_kqx2px","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:59:05  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:59:05  📊 規則提取置信度: 0.67
2025-08-10 20:59:05  🤖 啟用 AI 輔助提取...
2025-08-10 20:59:06  ✅ 最終 slots: {
2025-08-10 20:59:06    studentName: '小明',
2025-08-10 20:59:06    courseName: '化學課',
2025-08-10 20:59:06    timeReference: 'today',
2025-08-10 20:59:06    content: '小明今天化學課的內容'
2025-08-10 20:59:06  }
2025-08-10 20:59:06  {"ts":"2025-08-10T20:59:06.642Z","lvl":"info","stage":"slots","traceId":"line_1754859544986_kqx2px","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:59:06  🎯 執行任務: record_content
2025-08-10 20:59:06  📝 開始處理記錄課程內容任務: {
2025-08-10 20:59:06    studentName: '小明',
2025-08-10 20:59:06  ✅ 最終 slots: {
2025-08-10 20:59:06    studentName: '小明',
2025-08-10 20:59:06    courseName: '化學課',
2025-08-10 20:59:06    timeReference: 'today',
2025-08-10 20:59:06    content: '小明今天化學課的內容'
2025-08-10 20:59:06  }
2025-08-10 20:59:06  {"ts":"2025-08-10T20:59:06.642Z","lvl":"info","stage":"slots","traceId":"line_1754859544986_kqx2px","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:59:06  🎯 執行任務: record_content
2025-08-10 20:59:06  📝 開始處理記錄課程內容任務: {
2025-08-10 20:59:06    studentName: '小明',
2025-08-10 20:59:06    courseName: '化學課',
2025-08-10 20:59:06    timeReference: 'today',
2025-08-10 20:59:06    content: '小明今天化學課的內容'
2025-08-10 20:59:06  }
2025-08-10 20:59:06  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 20:59:06  ❓ 未找到完全匹配的課程
2025-08-10 20:59:06  ✅ 文檔已添加到 course_contents: cKZyt4QX5MRrRKOXraR8
2025-08-10 20:59:06  ✅ 課程內容記錄已儲存: cKZyt4QX5MRrRKOXraR8
2025-08-10 20:59:06  📊 任務執行結果: {
2025-08-10 20:59:06    success: true,
2025-08-10 20:59:06    code: 'RECORD_CONTENT_OK',
2025-08-10 20:59:06    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 20:59:06      '📝 記錄為獨立內容\n' +
2025-08-10 20:59:06      '👨‍🎓 學生：小明\n' +
2025-08-10 20:59:06      '📚 課程：化學課\n' +
2025-08-10 20:59:06      '📅 日期：2025-08-10\n' +
2025-08-10 20:59:06      '💬 內容：小明今天化學課的內容',
2025-08-10 20:59:06    data: {
2025-08-10 20:59:06      recordId: 'cKZyt4QX5MRrRKOXraR8',
2025-08-10 20:59:06      courseId: null,
2025-08-10 20:59:06      targetDate: '2025-08-10'
2025-08-10 20:59:06    }
2025-08-10 20:59:06  }
2025-08-10 20:59:06  {"ts":"2025-08-10T20:59:06.885Z","lvl":"info","stage":"task","traceId":"line_1754859544986_kqx2px","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":243}
2025-08-10 20:59:07  🔍 檢查 replyToken: test-reply-token-1754859544701
2025-08-10 20:59:07  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:59:07  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:59:07  📝 記錄為獨立內容
2025-08-10 20:59:07  👨‍🎓 學生：小明
2025-08-10 20:59:07  📚 課程：化學課
2025-08-10 20:59:07  📅 日期：2025-08-10
2025-08-10 20:59:07  💬 內容：小明今天化學課的內容
2025-08-10 20:59:07  {"ts":"2025-08-10T20:59:07.169Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859544986_kqx2px","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 20:59:19  📨 收到 1 個事件
2025-08-10 20:59:19  📋 事件類型: message
2025-08-10 20:59:19  🔍 完整事件 JSON: {
2025-08-10 20:59:19    "type": "message",
2025-08-10 20:59:19    "message": {
2025-08-10 20:59:19      "type": "text",
2025-08-10 20:59:19      "text": "提醒我小明的數學課"
2025-08-10 20:59:19    },
2025-08-10 20:59:19    "source": {
2025-08-10 20:59:19      "userId": "U_test_user_qa",
2025-08-10 20:59:19      "type": "user"
2025-08-10 20:59:19    },
2025-08-10 20:59:19    "replyToken": "test-reply-token-1754859559738",
2025-08-10 20:59:19    "timestamp": 1754859559738
2025-08-10 20:59:19  }
2025-08-10 20:59:19  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:59:19  {"ts":"2025-08-10T20:59:19.919Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859559919_4tii92","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 20:59:19  🔍 用戶ID類型: string
2025-08-10 20:59:19  🔍 是否測試用戶: true
2025-08-10 20:59:19  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:59:19  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 20:59:20  ✅ 規則匹配成功: set_reminder
2025-08-10 20:59:20  {"ts":"2025-08-10T20:59:20.064Z","lvl":"info","stage":"nlp","traceId":"line_1754859559919_4tii92","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:59:20  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:59:20  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:59:20  📊 規則提取置信度: 0.67
2025-08-10 20:59:20  🤖 啟用 AI 輔助提取...
2025-08-10 20:59:21  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:59:21  {"ts":"2025-08-10T20:59:21.363Z","lvl":"info","stage":"slots","traceId":"line_1754859559919_4tii92","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:59:21  🎯 執行任務: set_reminder
2025-08-10 20:59:21  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:59:21  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 20:59:21  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 20:59:21  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 20:59:21  ✅ 提醒記錄已創建: yFRCxWIMfEVQgvzEGObH
2025-08-10 20:59:21  ✅ 提醒設定成功: yFRCxWIMfEVQgvzEGObH
2025-08-10 20:59:21  📊 任務執行結果: {
2025-08-10 20:59:21    success: true,
2025-08-10 20:59:21    code: 'REMINDER_SET_OK',
2025-08-10 20:59:21    message: '✅ 提醒設定完成！\n' +
2025-08-10 20:59:21      '📚 課程：小明 的 數學課\n' +
2025-08-10 20:59:21      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 20:59:21      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 20:59:21  }
2025-08-10 20:59:21  {"ts":"2025-08-10T20:59:21.660Z","lvl":"info","stage":"task","traceId":"line_1754859559919_4tii92","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":297}
2025-08-10 20:59:21  🔍 檢查 replyToken: test-reply-token-1754859559738
2025-08-10 20:59:21  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:59:21  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 20:59:21  📚 課程：小明 的 數學課
2025-08-10 20:59:21  📅 上課時間：8/11 下午02:00
2025-08-10 20:59:21  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 20:59:21  {"ts":"2025-08-10T20:59:21.946Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859559919_4tii92","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 20:59:34  📨 收到 1 個事件
2025-08-10 20:59:34  📋 事件類型: message
2025-08-10 20:59:34  🔍 完整事件 JSON: {
2025-08-10 20:59:34    "type": "message",
2025-08-10 20:59:34    "message": {
2025-08-10 20:59:34  📨 收到 1 個事件
2025-08-10 20:59:34  📋 事件類型: message
2025-08-10 20:59:34  🔍 完整事件 JSON: {
2025-08-10 20:59:34    "type": "message",
2025-08-10 20:59:34    "message": {
2025-08-10 20:59:34      "type": "text",
2025-08-10 20:59:34      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 20:59:34    },
2025-08-10 20:59:34    "source": {
2025-08-10 20:59:34      "userId": "U_test_user_qa",
2025-08-10 20:59:34      "type": "user"
2025-08-10 20:59:34    },
2025-08-10 20:59:34    "replyToken": "test-reply-token-1754859574327",
2025-08-10 20:59:34    "timestamp": 1754859574327
2025-08-10 20:59:34  }
2025-08-10 20:59:34  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:59:34  {"ts":"2025-08-10T20:59:34.511Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859574511_yf77qq","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 20:59:34  🔍 用戶ID類型: string
2025-08-10 20:59:34  🔍 是否測試用戶: true
2025-08-10 20:59:34  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:59:34  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 20:59:34  ✅ 規則匹配成功: set_reminder
2025-08-10 20:59:34  {"ts":"2025-08-10T20:59:34.652Z","lvl":"info","stage":"nlp","traceId":"line_1754859574511_yf77qq","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:59:34  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:59:34  📊 規則提取置信度: 0.67
2025-08-10 20:59:34  🤖 啟用 AI 輔助提取...
2025-08-10 20:59:36  ✅ 最終 slots: { courseName: '鋼琴課', reminderTime: 60 }
2025-08-10 20:59:36  {"ts":"2025-08-10T20:59:36.533Z","lvl":"info","stage":"slots","traceId":"line_1754859574511_yf77qq","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","reminderTime"]}
2025-08-10 20:59:36  🎯 執行任務: set_reminder
2025-08-10 20:59:36  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', reminderTime: 60 }
2025-08-10 20:59:36  📊 任務執行結果: {
2025-08-10 20:59:36    success: false,
2025-08-10 20:59:36    code: 'MISSING_STUDENT',
2025-08-10 20:59:36    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 20:59:36  }
2025-08-10 20:59:36  {"ts":"2025-08-10T20:59:36.533Z","lvl":"info","stage":"task","traceId":"line_1754859574511_yf77qq","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 20:59:36  🔍 檢查 replyToken: test-reply-token-1754859574327
2025-08-10 20:59:36  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:59:36  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 20:59:36  {"ts":"2025-08-10T20:59:36.816Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859574511_yf77qq","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 20:59:53  📨 收到 1 個事件
2025-08-10 20:59:53  📋 事件類型: message
2025-08-10 20:59:53  🔍 完整事件 JSON: {
2025-08-10 20:59:53    "type": "message",
2025-08-10 20:59:53    "message": {
2025-08-10 20:59:53      "type": "text",
2025-08-10 20:59:53      "text": "提醒我小明的物理課"
2025-08-10 20:59:53    },
2025-08-10 20:59:53    "source": {
2025-08-10 20:59:53      "userId": "U_test_user_qa",
2025-08-10 20:59:53      "type": "user"
2025-08-10 20:59:53    },
2025-08-10 20:59:53    "replyToken": "test-reply-token-1754859593762",
2025-08-10 20:59:53    "timestamp": 1754859593762
2025-08-10 20:59:53  }
2025-08-10 20:59:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:59:54  {"ts":"2025-08-10T20:59:54.053Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859594053_z00cqb","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 20:59:54  🔍 用戶ID類型: string
2025-08-10 20:59:54  🔍 是否測試用戶: true
2025-08-10 20:59:54  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:59:54  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 20:59:54  ✅ 規則匹配成功: set_reminder
2025-08-10 20:59:54  {"ts":"2025-08-10T20:59:54.195Z","lvl":"info","stage":"nlp","traceId":"line_1754859594053_z00cqb","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:59:54  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:59:54  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:59:54  📊 規則提取置信度: 0.67
2025-08-10 20:59:54  🤖 啟用 AI 輔助提取...
2025-08-10 20:59:55  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:59:55  {"ts":"2025-08-10T20:59:55.591Z","lvl":"info","stage":"slots","traceId":"line_1754859594053_z00cqb","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:59:55  🎯 執行任務: set_reminder
2025-08-10 20:59:55  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:59:55  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 20:59:55  📊 任務執行結果: {
2025-08-10 20:59:55    success: false,
2025-08-10 20:59:55    code: 'NOT_FOUND',
2025-08-10 20:59:55    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 20:59:55  }
2025-08-10 20:59:55  {"ts":"2025-08-10T20:59:55.665Z","lvl":"info","stage":"task","traceId":"line_1754859594053_z00cqb","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":74}
2025-08-10 20:59:55  🔍 檢查 replyToken: test-reply-token-1754859593762
2025-08-10 20:59:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:59:55  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 20:59:55  {"ts":"2025-08-10T20:59:55.951Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859594053_z00cqb","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 21:00:03  📨 收到 1 個事件
2025-08-10 21:00:03  📋 事件類型: message
2025-08-10 21:00:03  🔍 完整事件 JSON: {
2025-08-10 21:00:03    "type": "message",
2025-08-10 21:00:03    "message": {
2025-08-10 21:00:03      "type": "text",
2025-08-10 21:00:03      "text": "小明的數學課改到下午4點"
2025-08-10 21:00:03    },
2025-08-10 21:00:03    "source": {
2025-08-10 21:00:03      "userId": "U_test_user_qa",
2025-08-10 21:00:03      "type": "user"
2025-08-10 21:00:03    },
2025-08-10 21:00:03    "replyToken": "test-reply-token-1754859602880",
2025-08-10 21:00:03    "timestamp": 1754859602880
2025-08-10 21:00:03  }
2025-08-10 21:00:03  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:00:03  {"ts":"2025-08-10T21:00:03.187Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859603187_4v6qn6","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 21:00:03  🔍 用戶ID類型: string
2025-08-10 21:00:03  📨 收到 1 個事件
2025-08-10 21:00:03  📋 事件類型: message
2025-08-10 21:00:03  🔍 完整事件 JSON: {
2025-08-10 21:00:03    "type": "message",
2025-08-10 21:00:03    "message": {
2025-08-10 21:00:03      "type": "text",
2025-08-10 21:00:03      "text": "小明的數學課改到下午4點"
2025-08-10 21:00:03    },
2025-08-10 21:00:03    "source": {
2025-08-10 21:00:03      "userId": "U_test_user_qa",
2025-08-10 21:00:03      "type": "user"
2025-08-10 21:00:03    },
2025-08-10 21:00:03    "replyToken": "test-reply-token-1754859602880",
2025-08-10 21:00:03    "timestamp": 1754859602880
2025-08-10 21:00:03  }
2025-08-10 21:00:03  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:00:03  {"ts":"2025-08-10T21:00:03.187Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859603187_4v6qn6","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 21:00:03  🔍 用戶ID類型: string
2025-08-10 21:00:03  🔍 是否測試用戶: true
2025-08-10 21:00:03  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:00:03  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 21:00:03  ✅ 規則匹配成功: modify_course
2025-08-10 21:00:03  {"ts":"2025-08-10T21:00:03.328Z","lvl":"info","stage":"nlp","traceId":"line_1754859603187_4v6qn6","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 21:00:03  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 21:00:03  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 21:00:03  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:00:03  📊 規則提取置信度: 0.00
2025-08-10 21:00:03  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 21:00:05  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 21:00:05  {"ts":"2025-08-10T21:00:05.183Z","lvl":"info","stage":"slots","traceId":"line_1754859603187_4v6qn6","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 21:00:05  🎯 執行任務: modify_course
2025-08-10 21:00:05  ✏️ 執行修改操作任務: {
2025-08-10 21:00:05    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 21:00:05    userId: 'U_test_user_qa'
2025-08-10 21:00:05  }
2025-08-10 21:00:05  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 21:00:05  {"ts":"2025-08-10T21:00:05.255Z","lvl":"info","stage":"task","traceId":"line_1754859603187_4v6qn6","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":72}
2025-08-10 21:00:05  🔍 檢查 replyToken: test-reply-token-1754859602880
2025-08-10 21:00:05  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:00:05  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 21:00:05  {"ts":"2025-08-10T21:00:05.542Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859603187_4v6qn6","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 21:00:18  📨 收到 1 個事件
2025-08-10 21:00:18  📋 事件類型: message
2025-08-10 21:00:18  🔍 完整事件 JSON: {
2025-08-10 21:00:18    "type": "message",
2025-08-10 21:00:18    "message": {
2025-08-10 21:00:18      "type": "text",
2025-08-10 21:00:18      "text": "小明每天的晨練課改到早上7點"
2025-08-10 21:00:18    },
2025-08-10 21:00:18    "source": {
2025-08-10 21:00:18      "userId": "U_test_user_qa",
2025-08-10 21:00:18      "type": "user"
2025-08-10 21:00:18    },
2025-08-10 21:00:18    "replyToken": "test-reply-token-1754859617940",
2025-08-10 21:00:18    "timestamp": 1754859617940
2025-08-10 21:00:18  }
2025-08-10 21:00:18  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:00:18  {"ts":"2025-08-10T21:00:18.195Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859618195_uazn60","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 21:00:18  🔍 用戶ID類型: string
2025-08-10 21:00:18  🔍 是否測試用戶: true
2025-08-10 21:00:18  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:00:18  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 21:00:18  ✅ 規則匹配成功: create_recurring_course
2025-08-10 21:00:18  {"ts":"2025-08-10T21:00:18.336Z","lvl":"info","stage":"nlp","traceId":"line_1754859618195_uazn60","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 21:00:18  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 21:00:18  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 21:00:18  ✅ 時間解析成功: {
2025-08-10 21:00:18    input: '小明每天的晨練課改到早上7點',
2025-08-10 21:00:18    output: '07:00',
2025-08-10 21:00:18    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 21:00:18  }
2025-08-10 21:00:18  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:00:18  📊 規則提取置信度: 0.67
2025-08-10 21:00:18  🤖 啟用 AI 輔助提取...
2025-08-10 21:00:20  ✅ 最終 slots: {
2025-08-10 21:00:20    studentName: '小明',
2025-08-10 21:00:20    courseName: '晨練課',
2025-08-10 21:00:20    scheduleTime: '07:00',
2025-08-10 21:00:20    recurring: false
2025-08-10 21:00:20  }
2025-08-10 21:00:20  {"ts":"2025-08-10T21:00:20.161Z","lvl":"info","stage":"slots","traceId":"line_1754859618195_uazn60","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:20  🎯 執行任務: create_recurring_course
2025-08-10 21:00:20  🎯 開始處理新增課程任務
2025-08-10 21:00:20  📋 接收參數: {
2025-08-10 21:00:20    studentName: '小明',
2025-08-10 21:00:20    courseName: '晨練課',
2025-08-10 21:00:20    scheduleTime: '07:00',
2025-08-10 21:00:20    recurring: false
2025-08-10 21:00:20  }
2025-08-10 21:00:20  📊 任務執行結果: {
2025-08-10 21:00:20    success: false,
2025-08-10 21:00:20    code: 'MISSING_FIELDS',
2025-08-10 21:00:20    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 21:00:20    expectingInput: true,
2025-08-10 21:00:20    missingFields: [ '課程日期' ]
2025-08-10 21:00:20  }
2025-08-10 21:00:20  {"ts":"2025-08-10T21:00:20.302Z","lvl":"info","stage":"task","traceId":"line_1754859618195_uazn60","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":141}
2025-08-10 21:00:20  🔍 檢查 replyToken: test-reply-token-1754859617940
2025-08-10 21:00:20  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:00:20  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 21:00:20  ✅ 最終 slots: {
2025-08-10 21:00:20    studentName: '小明',
2025-08-10 21:00:20    courseName: '晨練課',
2025-08-10 21:00:20    scheduleTime: '07:00',
2025-08-10 21:00:20    recurring: false
2025-08-10 21:00:20  }
2025-08-10 21:00:20  {"ts":"2025-08-10T21:00:20.161Z","lvl":"info","stage":"slots","traceId":"line_1754859618195_uazn60","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:20  🎯 執行任務: create_recurring_course
2025-08-10 21:00:20  🎯 開始處理新增課程任務
2025-08-10 21:00:20  📋 接收參數: {
2025-08-10 21:00:20    studentName: '小明',
2025-08-10 21:00:20    courseName: '晨練課',
2025-08-10 21:00:20    scheduleTime: '07:00',
2025-08-10 21:00:20    recurring: false
2025-08-10 21:00:20  }
2025-08-10 21:00:20  📊 任務執行結果: {
2025-08-10 21:00:20    success: false,
2025-08-10 21:00:20    code: 'MISSING_FIELDS',
2025-08-10 21:00:20    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 21:00:20    expectingInput: true,
2025-08-10 21:00:20    missingFields: [ '課程日期' ]
2025-08-10 21:00:20  }
2025-08-10 21:00:20  {"ts":"2025-08-10T21:00:20.302Z","lvl":"info","stage":"task","traceId":"line_1754859618195_uazn60","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":141}
2025-08-10 21:00:20  🔍 檢查 replyToken: test-reply-token-1754859617940
2025-08-10 21:00:20  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:00:20  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 21:00:20  
2025-08-10 21:00:20  範例：「小明每週三下午3點數學課」
2025-08-10 21:00:20  {"ts":"2025-08-10T21:00:20.588Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754859618195_uazn60","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 21:00:33  📨 收到 1 個事件
2025-08-10 21:00:33  📋 事件類型: message
2025-08-10 21:00:33  🔍 完整事件 JSON: {
2025-08-10 21:00:33    "type": "message",
2025-08-10 21:00:33    "message": {
2025-08-10 21:00:33      "type": "text",
2025-08-10 21:00:33      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 21:00:33    },
2025-08-10 21:00:33    "source": {
2025-08-10 21:00:33      "userId": "U_test_user_qa",
2025-08-10 21:00:33      "type": "user"
2025-08-10 21:00:33    },
2025-08-10 21:00:33    "replyToken": "test-reply-token-1754859633300",
2025-08-10 21:00:33    "timestamp": 1754859633300
2025-08-10 21:00:33  }
2025-08-10 21:00:33  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:00:33  {"ts":"2025-08-10T21:00:33.592Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 21:00:33  🔍 用戶ID類型: string
2025-08-10 21:00:33  🔍 是否測試用戶: true
2025-08-10 21:00:33  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:00:33  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 21:00:33  ✅ 規則匹配成功: create_recurring_course
2025-08-10 21:00:33  {"ts":"2025-08-10T21:00:33.734Z","lvl":"info","stage":"nlp","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 21:00:33  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 21:00:33  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 21:00:33  ✅ 時間解析成功: {
2025-08-10 21:00:33    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 21:00:33    output: '15:00',
2025-08-10 21:00:33    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 21:00:33  }
2025-08-10 21:00:34  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:00:34  📊 規則提取置信度: 0.67
2025-08-10 21:00:34  🤖 啟用 AI 輔助提取...
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
2025-08-10 21:00:35  ✅ 最終 slots: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  {"ts":"2025-08-10T21:00:35.395Z","lvl":"info","stage":"slots","traceId":"line_1754859633592_23eqc8","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:00:35  🎯 執行任務: create_recurring_course
2025-08-10 21:00:35  🎯 開始處理新增課程任務
2025-08-10 21:00:35  📋 接收參數: {
2025-08-10 21:00:35    studentName: 'Lumi',
2025-08-10 21:00:35    courseName: '鋼琴課',
2025-08-10 21:00:35    scheduleTime: '15:00',
2025-08-10 21:00:35    recurring: true
2025-08-10 21:00:35  }
2025-08-10 21:00:35  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:00:35  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:00:35      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:00:35      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:00:35      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:00:35      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:00:35      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:00:35      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:00:35      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:00:35      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:00:35      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:00:35      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:00:35    config: {
2025-08-10 21:00:35      url: URL {
2025-08-10 21:00:35        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        origin: 'https://www.googleapis.com',
2025-08-10 21:00:35        protocol: 'https:',
2025-08-10 21:00:35        username: '',
2025-08-10 21:00:35        password: '',
2025-08-10 21:00:35        host: 'www.googleapis.com',
2025-08-10 21:00:35        hostname: 'www.googleapis.com',
2025-08-10 21:00:35        port: '',
2025-08-10 21:00:35        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:00:35        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:00:35        searchParams: URLSearchParams {
2025-08-10 21:00:35          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35          'singleEvents' => 'true',
2025-08-10 21:00:35          'orderBy' => 'startTime' },
2025-08-10 21:00:35        hash: ''
2025-08-10 21:00:35      },
2025-08-10 21:00:35      method: 'GET',
2025-08-10 21:00:35      apiVersion: '',
2025-08-10 21:00:35      userAgentDirectives: [ [Object] ],
2025-08-10 21:00:35      paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35      headers: Headers {
2025-08-10 21:00:35        'accept-encoding': 'gzip',
2025-08-10 21:00:35        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      params: {
2025-08-10 21:00:35        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:00:35        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:00:35        singleEvents: true,
2025-08-10 21:00:35        orderBy: 'startTime'
2025-08-10 21:00:35      },
2025-08-10 21:00:35      validateStatus: [Function (anonymous)],
2025-08-10 21:00:35      retry: true,
2025-08-10 21:00:35      responseType: 'unknown',
2025-08-10 21:00:35      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:00:35      retryConfig: {
2025-08-10 21:00:35        currentRetryAttempt: 0,
2025-08-10 21:00:35        retry: 3,
2025-08-10 21:00:35        httpMethodsToRetry: [Array],
2025-08-10 21:00:35        noResponseRetries: 2,
2025-08-10 21:00:35        retryDelayMultiplier: 2,
2025-08-10 21:00:35        timeOfFirstRequest: 1754859635819,
2025-08-10 21:00:35        totalTimeout: 9007199254740991,
2025-08-10 21:00:35        maxRetryDelay: 9007199254740991,
2025-08-10 21:00:35        statusCodesToRetry: [Array]
2025-08-10 21:00:35      }
2025-08-10 21:00:35    },
2025-08-10 21:00:35    response: Response {
2025-08-10 21:00:35      size: 0,
2025-08-10 21:00:35      data: { error: [Object] },
2025-08-10 21:00:35      config: {
2025-08-10 21:00:35        url: URL {},
2025-08-10 21:00:35        method: 'GET',
2025-08-10 21:00:35        apiVersion: '',
2025-08-10 21:00:35        userAgentDirectives: [Array],
2025-08-10 21:00:35        paramsSerializer: [Function (anonymous)],
2025-08-10 21:00:35        headers: Headers {
2025-08-10 21:00:35          'accept-encoding': 'gzip',
2025-08-10 21:00:35          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:00:35          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:00:35          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:00:35        },
2025-08-10 21:00:35        params: [Object],
2025-08-10 21:00:35        validateStatus: [Function (anonymous)],
2025-08-10 21:00:35        retry: true,
2025-08-10 21:00:35        responseType: 'unknown',
2025-08-10 21:00:35        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:00:35      },
2025-08-10 21:00:35      Symbol(Body internals): {
