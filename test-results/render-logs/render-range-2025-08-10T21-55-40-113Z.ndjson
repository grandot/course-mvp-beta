2025-08-10 21:40:43  📨 收到 1 個事件
2025-08-10 21:40:43  📋 事件類型: message
2025-08-10 21:40:43  🔍 完整事件 JSON: {
2025-08-10 21:40:43    "type": "message",
2025-08-10 21:40:43    "message": {
2025-08-10 21:40:43      "type": "text",
2025-08-10 21:40:43      "text": "小明的晨練課每天幾點？"
2025-08-10 21:40:43    },
2025-08-10 21:40:43    "source": {
2025-08-10 21:40:43      "userId": "U_test_user_qa",
2025-08-10 21:40:43      "type": "user"
2025-08-10 21:40:43    },
2025-08-10 21:40:43    "replyToken": "test-reply-token-1754862043520",
2025-08-10 21:40:43    "timestamp": 1754862043520
2025-08-10 21:40:43  }
2025-08-10 21:40:43  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:40:43  {"ts":"2025-08-10T21:40:43.786Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862043786_y42snn","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 21:40:43  🔍 用戶ID類型: string
2025-08-10 21:40:43  🔍 是否測試用戶: true
2025-08-10 21:40:43  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:40:43  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 21:40:43  🤖 啟用 AI 備援識別...
2025-08-10 21:40:44  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 21:40:44  {"ts":"2025-08-10T21:40:44.666Z","lvl":"info","stage":"nlp","traceId":"line_1754862043786_y42snn","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 21:40:44  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 21:40:44  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:40:44  📊 規則提取置信度: 0.50
2025-08-10 21:40:44  🤖 啟用 AI 輔助提取...
2025-08-10 21:40:46  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 21:40:46  {"ts":"2025-08-10T21:40:46.146Z","lvl":"info","stage":"slots","traceId":"line_1754862043786_y42snn","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 21:40:46  🎯 執行任務: query_schedule
2025-08-10 21:40:46  🎯 開始處理查詢課表任務
2025-08-10 21:40:46  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 21:40:46  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 21:40:46  📚 查詢到 345 筆課程資料
2025-08-10 21:40:46  📚 查詢到 14 筆課程
2025-08-10 21:40:46  📊 任務執行結果: {
2025-08-10 21:40:46    success: true,
2025-08-10 21:40:46    code: 'QUERY_OK',
2025-08-10 21:40:46    message: '📅 小明本週的課程安排\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/9 (週六)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/10 (週日)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/11 (週一)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/12 (週二)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/13 (週三)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/14 (週四)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/15 (週五)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄',
2025-08-10 21:40:46    data: {
2025-08-10 21:40:46      courses: [
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object]
2025-08-10 21:40:46      ],
2025-08-10 21:40:46      courseCount: 14,
2025-08-10 21:40:46      dateRange: {
2025-08-10 21:40:46        startDate: '2025-08-10',
2025-08-10 21:40:46        endDate: '2025-08-16',
2025-08-10 21:40:46        description: '本週'
2025-08-10 21:40:46      }
2025-08-10 21:40:46    }
2025-08-10 21:40:46  }
2025-08-10 21:40:46  {"ts":"2025-08-10T21:40:46.519Z","lvl":"info","stage":"task","traceId":"line_1754862043786_y42snn","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":372}
2025-08-10 21:40:46  🔍 檢查 replyToken: test-reply-token-1754862043520
2025-08-10 21:40:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:40:46  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/9 (週六)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/10 (週日)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/11 (週一)
2025-08-10 21:40:46  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 21:40:46  {"ts":"2025-08-10T21:40:46.146Z","lvl":"info","stage":"slots","traceId":"line_1754862043786_y42snn","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 21:40:46  🎯 執行任務: query_schedule
2025-08-10 21:40:46  🎯 開始處理查詢課表任務
2025-08-10 21:40:46  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 21:40:46  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 21:40:46  📚 查詢到 345 筆課程資料
2025-08-10 21:40:46  📚 查詢到 14 筆課程
2025-08-10 21:40:46  📊 任務執行結果: {
2025-08-10 21:40:46    success: true,
2025-08-10 21:40:46    code: 'QUERY_OK',
2025-08-10 21:40:46    message: '📅 小明本週的課程安排\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/9 (週六)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/10 (週日)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/11 (週一)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/12 (週二)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/13 (週三)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/14 (週四)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '\n' +
2025-08-10 21:40:46      '📆 8/15 (週五)\n' +
2025-08-10 21:40:46      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:40:46      '  上午8:00 - 晨練課 🔄',
2025-08-10 21:40:46    data: {
2025-08-10 21:40:46      courses: [
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object],
2025-08-10 21:40:46        [Object], [Object]
2025-08-10 21:40:46      ],
2025-08-10 21:40:46      courseCount: 14,
2025-08-10 21:40:46      dateRange: {
2025-08-10 21:40:46        startDate: '2025-08-10',
2025-08-10 21:40:46        endDate: '2025-08-16',
2025-08-10 21:40:46        description: '本週'
2025-08-10 21:40:46      }
2025-08-10 21:40:46    }
2025-08-10 21:40:46  }
2025-08-10 21:40:46  {"ts":"2025-08-10T21:40:46.519Z","lvl":"info","stage":"task","traceId":"line_1754862043786_y42snn","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":372}
2025-08-10 21:40:46  🔍 檢查 replyToken: test-reply-token-1754862043520
2025-08-10 21:40:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:40:46  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/9 (週六)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/10 (週日)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/11 (週一)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/12 (週二)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/13 (週三)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/14 (週四)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  
2025-08-10 21:40:46  📆 8/15 (週五)
2025-08-10 21:40:46    上午7:00 - 晨練課 🔄
2025-08-10 21:40:46    上午8:00 - 晨練課 🔄
2025-08-10 21:40:46  {"ts":"2025-08-10T21:40:46.803Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862043786_y42snn","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 21:40:59  📨 收到 1 個事件
2025-08-10 21:40:59  📋 事件類型: message
2025-08-10 21:40:59  🔍 完整事件 JSON: {
2025-08-10 21:40:59    "type": "message",
2025-08-10 21:40:59    "message": {
2025-08-10 21:40:59      "type": "text",
2025-08-10 21:40:59      "text": "查詢Lumi的重複課程"
2025-08-10 21:40:59    },
2025-08-10 21:40:59    "source": {
2025-08-10 21:40:59  📨 收到 1 個事件
2025-08-10 21:40:59  📋 事件類型: message
2025-08-10 21:40:59  🔍 完整事件 JSON: {
2025-08-10 21:40:59    "type": "message",
2025-08-10 21:40:59    "message": {
2025-08-10 21:40:59      "type": "text",
2025-08-10 21:40:59      "text": "查詢Lumi的重複課程"
2025-08-10 21:40:59    },
2025-08-10 21:40:59    "source": {
2025-08-10 21:40:59      "userId": "U_test_user_qa",
2025-08-10 21:40:59      "type": "user"
2025-08-10 21:40:59    },
2025-08-10 21:40:59    "replyToken": "test-reply-token-1754862059362",
2025-08-10 21:40:59    "timestamp": 1754862059362
2025-08-10 21:40:59  }
2025-08-10 21:40:59  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:40:59  {"ts":"2025-08-10T21:40:59.642Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862059642_obrgfg","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 21:40:59  🔍 用戶ID類型: string
2025-08-10 21:40:59  🔍 是否測試用戶: true
2025-08-10 21:40:59  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:40:59  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 21:40:59  ✅ 規則匹配成功: query_schedule
2025-08-10 21:40:59  {"ts":"2025-08-10T21:40:59.783Z","lvl":"info","stage":"nlp","traceId":"line_1754862059642_obrgfg","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 21:40:59  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 21:41:00  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:41:00  📊 規則提取置信度: 0.50
2025-08-10 21:41:00  🤖 啟用 AI 輔助提取...
2025-08-10 21:41:01  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 21:41:01  {"ts":"2025-08-10T21:41:01.024Z","lvl":"info","stage":"slots","traceId":"line_1754862059642_obrgfg","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 21:41:01  🎯 執行任務: query_schedule
2025-08-10 21:41:01  🎯 開始處理查詢課表任務
2025-08-10 21:41:01  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 21:41:01  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 21:41:01  📚 查詢到 338 筆課程資料
2025-08-10 21:41:01  📚 查詢到 0 筆課程
2025-08-10 21:41:01  📊 任務執行結果: {
2025-08-10 21:41:01    success: true,
2025-08-10 21:41:01    code: 'QUERY_OK_EMPTY',
2025-08-10 21:41:01    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 21:41:01      '\n' +
2025-08-10 21:41:01      '💡 您可以：\n' +
2025-08-10 21:41:01      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 21:41:01      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 21:41:01      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 21:41:01    data: {
2025-08-10 21:41:01      courseCount: 0,
2025-08-10 21:41:01      dateRange: {
2025-08-10 21:41:01        startDate: '2025-08-10',
2025-08-10 21:41:01        endDate: '2025-08-16',
2025-08-10 21:41:01        description: '本週'
2025-08-10 21:41:01      }
2025-08-10 21:41:01    }
2025-08-10 21:41:01  }
2025-08-10 21:41:01  {"ts":"2025-08-10T21:41:01.396Z","lvl":"info","stage":"task","traceId":"line_1754862059642_obrgfg","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":372}
2025-08-10 21:41:01  🔍 檢查 replyToken: test-reply-token-1754862059362
2025-08-10 21:41:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:41:01  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 21:41:01  
2025-08-10 21:41:01  💡 您可以：
2025-08-10 21:41:01  • 新增課程：「小明明天上午10點英文課」
2025-08-10 21:41:01  • 查詢其他時間：「小明下週的課表」
2025-08-10 21:41:01  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 21:41:01  {"ts":"2025-08-10T21:41:01.678Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862059642_obrgfg","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 21:41:14  📨 收到 1 個事件
2025-08-10 21:41:14  📋 事件類型: message
2025-08-10 21:41:14  🔍 完整事件 JSON: {
2025-08-10 21:41:14    "type": "message",
2025-08-10 21:41:14    "message": {
2025-08-10 21:41:14      "type": "text",
2025-08-10 21:41:14      "text": "今天小明的數學課學了分數加減法"
2025-08-10 21:41:14    },
2025-08-10 21:41:14    "source": {
2025-08-10 21:41:14      "userId": "U_test_user_qa",
2025-08-10 21:41:14      "type": "user"
2025-08-10 21:41:14    },
2025-08-10 21:41:14    "replyToken": "test-reply-token-1754862074135",
2025-08-10 21:41:14    "timestamp": 1754862074135
2025-08-10 21:41:14  }
2025-08-10 21:41:14  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:41:14  {"ts":"2025-08-10T21:41:14.289Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862074289_wr77zh","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 21:41:14  🔍 用戶ID類型: string
2025-08-10 21:41:14  🔍 是否測試用戶: true
2025-08-10 21:41:14  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:41:14  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 21:41:14  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:41:14  {"ts":"2025-08-10T21:41:14.431Z","lvl":"info","stage":"nlp","traceId":"line_1754862074289_wr77zh","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:41:14  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:41:14  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:41:14  📊 規則提取置信度: 1.00
2025-08-10 21:41:14  🤖 啟用 AI 輔助提取...
2025-08-10 21:41:15  ✅ 最終 slots: {
2025-08-10 21:41:15    studentName: '小明',
2025-08-10 21:41:15    courseName: '數學課',
2025-08-10 21:41:15    timeReference: 'today',
2025-08-10 21:41:15    content: '分數加減法'
2025-08-10 21:41:15  }
2025-08-10 21:41:15  {"ts":"2025-08-10T21:41:15.987Z","lvl":"info","stage":"slots","traceId":"line_1754862074289_wr77zh","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:41:15  🎯 執行任務: record_content
2025-08-10 21:41:15  📝 開始處理記錄課程內容任務: {
2025-08-10 21:41:15    studentName: '小明',
2025-08-10 21:41:15  ✅ 最終 slots: {
2025-08-10 21:41:15    studentName: '小明',
2025-08-10 21:41:15    courseName: '數學課',
2025-08-10 21:41:15    timeReference: 'today',
2025-08-10 21:41:15    content: '分數加減法'
2025-08-10 21:41:15  }
2025-08-10 21:41:15  {"ts":"2025-08-10T21:41:15.987Z","lvl":"info","stage":"slots","traceId":"line_1754862074289_wr77zh","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:41:15  🎯 執行任務: record_content
2025-08-10 21:41:15  📝 開始處理記錄課程內容任務: {
2025-08-10 21:41:15    studentName: '小明',
2025-08-10 21:41:15    courseName: '數學課',
2025-08-10 21:41:15    timeReference: 'today',
2025-08-10 21:41:15    content: '分數加減法'
2025-08-10 21:41:15  }
2025-08-10 21:41:15  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 21:41:16  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 21:41:16  ✅ 文檔已添加到 course_contents: RkP45Mu59pFPlYIqqZUu
2025-08-10 21:41:16  ✅ 課程內容記錄已儲存: RkP45Mu59pFPlYIqqZUu
2025-08-10 21:41:16  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 21:41:16  📊 任務執行結果: {
2025-08-10 21:41:16    success: true,
2025-08-10 21:41:16    code: 'RECORD_CONTENT_OK',
2025-08-10 21:41:16    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 21:41:16    data: {
2025-08-10 21:41:16      recordId: 'RkP45Mu59pFPlYIqqZUu',
2025-08-10 21:41:16      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 21:41:16      targetDate: '2025-08-10'
2025-08-10 21:41:16    }
2025-08-10 21:41:16  }
2025-08-10 21:41:16  {"ts":"2025-08-10T21:41:16.285Z","lvl":"info","stage":"task","traceId":"line_1754862074289_wr77zh","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":298}
2025-08-10 21:41:16  🔍 檢查 replyToken: test-reply-token-1754862074135
2025-08-10 21:41:16  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:41:16  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:41:16  📚 課程：小明 - 數學課
2025-08-10 21:41:16  📅 日期：2025-08-10
2025-08-10 21:41:16  💬 內容：分數加減法
2025-08-10 21:41:16  {"ts":"2025-08-10T21:41:16.568Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862074289_wr77zh","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 21:41:29  📨 收到 1 個事件
2025-08-10 21:41:29  📋 事件類型: message
2025-08-10 21:41:29  🔍 完整事件 JSON: {
2025-08-10 21:41:29    "type": "message",
2025-08-10 21:41:29    "message": {
2025-08-10 21:41:29      "type": "text",
2025-08-10 21:41:29      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 21:41:29    },
2025-08-10 21:41:29    "source": {
2025-08-10 21:41:29      "userId": "U_test_user_qa",
2025-08-10 21:41:29      "type": "user"
2025-08-10 21:41:29    },
2025-08-10 21:41:29    "replyToken": "test-reply-token-1754862089233",
2025-08-10 21:41:29    "timestamp": 1754862089233
2025-08-10 21:41:29  }
2025-08-10 21:41:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:41:29  {"ts":"2025-08-10T21:41:29.385Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862089385_5xlxyh","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 21:41:29  🔍 用戶ID類型: string
2025-08-10 21:41:29  🔍 是否測試用戶: true
2025-08-10 21:41:29  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:41:29  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 21:41:29  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:41:29  {"ts":"2025-08-10T21:41:29.526Z","lvl":"info","stage":"nlp","traceId":"line_1754862089385_5xlxyh","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:41:29  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:41:29  📊 規則提取置信度: 0.33
2025-08-10 21:41:29  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 21:41:30  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 21:41:30  {"ts":"2025-08-10T21:41:30.942Z","lvl":"info","stage":"slots","traceId":"line_1754862089385_5xlxyh","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 21:41:30  🎯 執行任務: record_content
2025-08-10 21:41:30  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 21:41:31  ✅ 文檔已添加到 course_contents: s2wrWekdXpLEHlCI8DHD
2025-08-10 21:41:31  ✅ 課程內容記錄已儲存: s2wrWekdXpLEHlCI8DHD
2025-08-10 21:41:31  📊 任務執行結果: {
2025-08-10 21:41:31    success: true,
2025-08-10 21:41:31    code: 'RECORD_CONTENT_OK',
2025-08-10 21:41:31    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 21:41:31    data: {
2025-08-10 21:41:31      recordId: 's2wrWekdXpLEHlCI8DHD',
2025-08-10 21:41:31      courseId: null,
2025-08-10 21:41:31      targetDate: '2025-08-09'
2025-08-10 21:41:31    }
2025-08-10 21:41:31  }
2025-08-10 21:41:31  {"ts":"2025-08-10T21:41:31.026Z","lvl":"info","stage":"task","traceId":"line_1754862089385_5xlxyh","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":83}
2025-08-10 21:41:31  🔍 檢查 replyToken: test-reply-token-1754862089233
2025-08-10 21:41:31  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:41:31  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:41:31  📝 記錄為獨立內容
2025-08-10 21:41:31  📚 課程：鋼琴課
2025-08-10 21:41:31  📅 日期：2025-08-09
2025-08-10 21:41:31  💬 內容：練習了小星星
2025-08-10 21:41:31  {"ts":"2025-08-10T21:41:31.311Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862089385_5xlxyh","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 21:41:44  📨 收到 1 個事件
2025-08-10 21:41:44  📋 事件類型: message
2025-08-10 21:41:44  🔍 完整事件 JSON: {
2025-08-10 21:41:44    "type": "message",
2025-08-10 21:41:44    "message": {
2025-08-10 21:41:44      "type": "text",
2025-08-10 21:41:44      "text": "小明昨天數學課學了什麼？"
2025-08-10 21:41:44    },
2025-08-10 21:41:44    "source": {
2025-08-10 21:41:44      "userId": "U_test_user_qa",
2025-08-10 21:41:44      "type": "user"
2025-08-10 21:41:44    },
2025-08-10 21:41:44  📨 收到 1 個事件
2025-08-10 21:41:44  📋 事件類型: message
2025-08-10 21:41:44  🔍 完整事件 JSON: {
2025-08-10 21:41:44    "type": "message",
2025-08-10 21:41:44    "message": {
2025-08-10 21:41:44      "type": "text",
2025-08-10 21:41:44      "text": "小明昨天數學課學了什麼？"
2025-08-10 21:41:44    },
2025-08-10 21:41:44    "source": {
2025-08-10 21:41:44      "userId": "U_test_user_qa",
2025-08-10 21:41:44      "type": "user"
2025-08-10 21:41:44    },
2025-08-10 21:41:44    "replyToken": "test-reply-token-1754862104035",
2025-08-10 21:41:44    "timestamp": 1754862104035
2025-08-10 21:41:44  }
2025-08-10 21:41:44  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:41:44  {"ts":"2025-08-10T21:41:44.196Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862104196_ozkf90","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 21:41:44  🔍 用戶ID類型: string
2025-08-10 21:41:44  🔍 是否測試用戶: true
2025-08-10 21:41:44  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:41:44  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 21:41:44  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:41:44  {"ts":"2025-08-10T21:41:44.337Z","lvl":"info","stage":"nlp","traceId":"line_1754862104196_ozkf90","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:41:44  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:41:44  📊 規則提取置信度: 0.67
2025-08-10 21:41:44  🤖 啟用 AI 輔助提取...
2025-08-10 21:41:45  ✅ 最終 slots: {
2025-08-10 21:41:45    studentName: '小明',
2025-08-10 21:41:45    courseName: '數學課',
2025-08-10 21:41:45    timeReference: 'yesterday',
2025-08-10 21:41:45    content: '什麼？'
2025-08-10 21:41:45  }
2025-08-10 21:41:45  {"ts":"2025-08-10T21:41:45.872Z","lvl":"info","stage":"slots","traceId":"line_1754862104196_ozkf90","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:41:45  🎯 執行任務: record_content
2025-08-10 21:41:45  📝 開始處理記錄課程內容任務: {
2025-08-10 21:41:45    studentName: '小明',
2025-08-10 21:41:45    courseName: '數學課',
2025-08-10 21:41:45    timeReference: 'yesterday',
2025-08-10 21:41:45    content: '什麼？'
2025-08-10 21:41:45  }
2025-08-10 21:41:45  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 21:41:46  ❓ 未找到完全匹配的課程
2025-08-10 21:41:46  ✅ 文檔已添加到 course_contents: 8FVVI7lgn2F17phHjEJi
2025-08-10 21:41:46  ✅ 課程內容記錄已儲存: 8FVVI7lgn2F17phHjEJi
2025-08-10 21:41:46  📊 任務執行結果: {
2025-08-10 21:41:46    success: true,
2025-08-10 21:41:46    code: 'RECORD_CONTENT_OK',
2025-08-10 21:41:46    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 21:41:46    data: {
2025-08-10 21:41:46      recordId: '8FVVI7lgn2F17phHjEJi',
2025-08-10 21:41:46      courseId: null,
2025-08-10 21:41:46      targetDate: '2025-08-09'
2025-08-10 21:41:46    }
2025-08-10 21:41:46  }
2025-08-10 21:41:46  {"ts":"2025-08-10T21:41:46.112Z","lvl":"info","stage":"task","traceId":"line_1754862104196_ozkf90","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":240}
2025-08-10 21:41:46  🔍 檢查 replyToken: test-reply-token-1754862104035
2025-08-10 21:41:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:41:46  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:41:46  📝 記錄為獨立內容
2025-08-10 21:41:46  👨‍🎓 學生：小明
2025-08-10 21:41:46  📚 課程：數學課
2025-08-10 21:41:46  📅 日期：2025-08-09
2025-08-10 21:41:46  💬 內容：什麼？
2025-08-10 21:41:46  {"ts":"2025-08-10T21:41:46.395Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862104196_ozkf90","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 21:41:53  📨 收到 1 個事件
2025-08-10 21:41:53  📋 事件類型: message
2025-08-10 21:41:53  🔍 完整事件 JSON: {
2025-08-10 21:41:53    "type": "message",
2025-08-10 21:41:53    "message": {
2025-08-10 21:41:53      "type": "text",
2025-08-10 21:41:53      "text": "記錄小明今天化學課的內容"
2025-08-10 21:41:53    },
2025-08-10 21:41:53    "source": {
2025-08-10 21:41:53      "userId": "U_test_user_qa",
2025-08-10 21:41:53      "type": "user"
2025-08-10 21:41:53    },
2025-08-10 21:41:53    "replyToken": "test-reply-token-1754862113431",
2025-08-10 21:41:53    "timestamp": 1754862113431
2025-08-10 21:41:53  }
2025-08-10 21:41:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:41:53  {"ts":"2025-08-10T21:41:53.600Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862113600_v39ok1","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 21:41:53  🔍 用戶ID類型: string
2025-08-10 21:41:53  🔍 是否測試用戶: true
2025-08-10 21:41:53  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:41:53  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 21:41:53  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:41:53  {"ts":"2025-08-10T21:41:53.741Z","lvl":"info","stage":"nlp","traceId":"line_1754862113600_v39ok1","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:41:53  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:41:54  📊 規則提取置信度: 0.67
2025-08-10 21:41:54  🤖 啟用 AI 輔助提取...
2025-08-10 21:41:55  ✅ 最終 slots: {
2025-08-10 21:41:55    studentName: '小明',
2025-08-10 21:41:55    courseName: '化學課',
2025-08-10 21:41:55    timeReference: 'today',
2025-08-10 21:41:55    content: '小明今天化學課的內容'
2025-08-10 21:41:55  }
2025-08-10 21:41:55  {"ts":"2025-08-10T21:41:55.684Z","lvl":"info","stage":"slots","traceId":"line_1754862113600_v39ok1","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:41:55  🎯 執行任務: record_content
2025-08-10 21:41:55  📝 開始處理記錄課程內容任務: {
2025-08-10 21:41:55    studentName: '小明',
2025-08-10 21:41:55  ✅ 最終 slots: {
2025-08-10 21:41:55    studentName: '小明',
2025-08-10 21:41:55    courseName: '化學課',
2025-08-10 21:41:55    timeReference: 'today',
2025-08-10 21:41:55    content: '小明今天化學課的內容'
2025-08-10 21:41:55  }
2025-08-10 21:41:55  {"ts":"2025-08-10T21:41:55.684Z","lvl":"info","stage":"slots","traceId":"line_1754862113600_v39ok1","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:41:55  🎯 執行任務: record_content
2025-08-10 21:41:55  📝 開始處理記錄課程內容任務: {
2025-08-10 21:41:55    studentName: '小明',
2025-08-10 21:41:55    courseName: '化學課',
2025-08-10 21:41:55    timeReference: 'today',
2025-08-10 21:41:55    content: '小明今天化學課的內容'
2025-08-10 21:41:55  }
2025-08-10 21:41:55  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 21:41:55  ❓ 未找到完全匹配的課程
2025-08-10 21:41:55  ✅ 文檔已添加到 course_contents: r518WtBPPQlWZupX4EtN
2025-08-10 21:41:55  ✅ 課程內容記錄已儲存: r518WtBPPQlWZupX4EtN
2025-08-10 21:41:55  📊 任務執行結果: {
2025-08-10 21:41:55    success: true,
2025-08-10 21:41:55    code: 'RECORD_CONTENT_OK',
2025-08-10 21:41:55    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 21:41:55      '📝 記錄為獨立內容\n' +
2025-08-10 21:41:55      '👨‍🎓 學生：小明\n' +
2025-08-10 21:41:55      '📚 課程：化學課\n' +
2025-08-10 21:41:55      '📅 日期：2025-08-10\n' +
2025-08-10 21:41:55      '💬 內容：小明今天化學課的內容',
2025-08-10 21:41:55    data: {
2025-08-10 21:41:55      recordId: 'r518WtBPPQlWZupX4EtN',
2025-08-10 21:41:55      courseId: null,
2025-08-10 21:41:55      targetDate: '2025-08-10'
2025-08-10 21:41:55    }
2025-08-10 21:41:55  }
2025-08-10 21:41:55  {"ts":"2025-08-10T21:41:55.926Z","lvl":"info","stage":"task","traceId":"line_1754862113600_v39ok1","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":242}
2025-08-10 21:41:56  🔍 檢查 replyToken: test-reply-token-1754862113431
2025-08-10 21:41:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:41:56  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:41:56  📝 記錄為獨立內容
2025-08-10 21:41:56  👨‍🎓 學生：小明
2025-08-10 21:41:56  📚 課程：化學課
2025-08-10 21:41:56  📅 日期：2025-08-10
2025-08-10 21:41:56  💬 內容：小明今天化學課的內容
2025-08-10 21:41:56  {"ts":"2025-08-10T21:41:56.209Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862113600_v39ok1","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 21:42:08  📨 收到 1 個事件
2025-08-10 21:42:08  📋 事件類型: message
2025-08-10 21:42:08  🔍 完整事件 JSON: {
2025-08-10 21:42:08    "type": "message",
2025-08-10 21:42:08    "message": {
2025-08-10 21:42:08      "type": "text",
2025-08-10 21:42:08      "text": "提醒我小明的數學課"
2025-08-10 21:42:08    },
2025-08-10 21:42:08    "source": {
2025-08-10 21:42:08      "userId": "U_test_user_qa",
2025-08-10 21:42:08      "type": "user"
2025-08-10 21:42:08    },
2025-08-10 21:42:08    "replyToken": "test-reply-token-1754862128752",
2025-08-10 21:42:08    "timestamp": 1754862128752
2025-08-10 21:42:08  }
2025-08-10 21:42:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:42:08  {"ts":"2025-08-10T21:42:08.906Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862128906_mri76g","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 21:42:08  🔍 用戶ID類型: string
2025-08-10 21:42:08  🔍 是否測試用戶: true
2025-08-10 21:42:08  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:42:08  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 21:42:09  ✅ 規則匹配成功: set_reminder
2025-08-10 21:42:09  {"ts":"2025-08-10T21:42:09.047Z","lvl":"info","stage":"nlp","traceId":"line_1754862128906_mri76g","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 21:42:09  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 21:42:09  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:42:09  📊 規則提取置信度: 0.67
2025-08-10 21:42:09  🤖 啟用 AI 輔助提取...
2025-08-10 21:42:10  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 21:42:10  {"ts":"2025-08-10T21:42:10.291Z","lvl":"info","stage":"slots","traceId":"line_1754862128906_mri76g","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 21:42:10  🎯 執行任務: set_reminder
2025-08-10 21:42:10  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 21:42:10  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 21:42:10  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 21:42:10  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 21:42:10  ✅ 提醒記錄已創建: J5CCScnoR3v7Ydadxgfi
2025-08-10 21:42:10  ✅ 提醒設定成功: J5CCScnoR3v7Ydadxgfi
2025-08-10 21:42:10  📊 任務執行結果: {
2025-08-10 21:42:10    success: true,
2025-08-10 21:42:10    code: 'REMINDER_SET_OK',
2025-08-10 21:42:10    message: '✅ 提醒設定完成！\n' +
2025-08-10 21:42:10      '📚 課程：小明 的 數學課\n' +
2025-08-10 21:42:10      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 21:42:10      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 21:42:10  }
2025-08-10 21:42:10  {"ts":"2025-08-10T21:42:10.576Z","lvl":"info","stage":"task","traceId":"line_1754862128906_mri76g","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":285}
2025-08-10 21:42:10  🔍 檢查 replyToken: test-reply-token-1754862128752
2025-08-10 21:42:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:42:10  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 21:42:10  📚 課程：小明 的 數學課
2025-08-10 21:42:10  📅 上課時間：8/11 下午02:00
2025-08-10 21:42:10  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 21:42:10  {"ts":"2025-08-10T21:42:10.860Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862128906_mri76g","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 21:42:23  📨 收到 1 個事件
2025-08-10 21:42:23  📋 事件類型: message
2025-08-10 21:42:23  🔍 完整事件 JSON: {
2025-08-10 21:42:23    "type": "message",
2025-08-10 21:42:23    "message": {
2025-08-10 21:42:23  📨 收到 1 個事件
2025-08-10 21:42:23  📋 事件類型: message
2025-08-10 21:42:23  🔍 完整事件 JSON: {
2025-08-10 21:42:23    "type": "message",
2025-08-10 21:42:23    "message": {
2025-08-10 21:42:23      "type": "text",
2025-08-10 21:42:23      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 21:42:23    },
2025-08-10 21:42:23    "source": {
2025-08-10 21:42:23      "userId": "U_test_user_qa",
2025-08-10 21:42:23      "type": "user"
2025-08-10 21:42:23    },
2025-08-10 21:42:23    "replyToken": "test-reply-token-1754862143366",
2025-08-10 21:42:23    "timestamp": 1754862143366
2025-08-10 21:42:23  }
2025-08-10 21:42:23  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:42:23  {"ts":"2025-08-10T21:42:23.528Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862143528_cu3g50","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 21:42:23  🔍 用戶ID類型: string
2025-08-10 21:42:23  🔍 是否測試用戶: true
2025-08-10 21:42:23  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:42:23  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 21:42:23  ✅ 規則匹配成功: set_reminder
2025-08-10 21:42:23  {"ts":"2025-08-10T21:42:23.670Z","lvl":"info","stage":"nlp","traceId":"line_1754862143528_cu3g50","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 21:42:23  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 21:42:23  📊 規則提取置信度: 0.67
2025-08-10 21:42:23  🤖 啟用 AI 輔助提取...
2025-08-10 21:42:25  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 21:42:25  {"ts":"2025-08-10T21:42:25.634Z","lvl":"info","stage":"slots","traceId":"line_1754862143528_cu3g50","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 21:42:25  🎯 執行任務: set_reminder
2025-08-10 21:42:25  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 21:42:25  📊 任務執行結果: {
2025-08-10 21:42:25    success: false,
2025-08-10 21:42:25    code: 'MISSING_STUDENT',
2025-08-10 21:42:25    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 21:42:25  }
2025-08-10 21:42:25  {"ts":"2025-08-10T21:42:25.634Z","lvl":"info","stage":"task","traceId":"line_1754862143528_cu3g50","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 21:42:25  🔍 檢查 replyToken: test-reply-token-1754862143366
2025-08-10 21:42:25  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:42:25  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 21:42:25  {"ts":"2025-08-10T21:42:25.918Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862143528_cu3g50","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 21:42:38  📨 收到 1 個事件
2025-08-10 21:42:38  📋 事件類型: message
2025-08-10 21:42:38  🔍 完整事件 JSON: {
2025-08-10 21:42:38    "type": "message",
2025-08-10 21:42:38    "message": {
2025-08-10 21:42:38      "type": "text",
2025-08-10 21:42:38      "text": "提醒我小明的物理課"
2025-08-10 21:42:38    },
2025-08-10 21:42:38    "source": {
2025-08-10 21:42:38      "userId": "U_test_user_qa",
2025-08-10 21:42:38      "type": "user"
2025-08-10 21:42:38    },
2025-08-10 21:42:38    "replyToken": "test-reply-token-1754862158539",
2025-08-10 21:42:38    "timestamp": 1754862158539
2025-08-10 21:42:38  }
2025-08-10 21:42:38  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:42:38  {"ts":"2025-08-10T21:42:38.696Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862158696_4vdel2","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 21:42:38  🔍 用戶ID類型: string
2025-08-10 21:42:38  🔍 是否測試用戶: true
2025-08-10 21:42:38  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:42:38  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 21:42:38  ✅ 規則匹配成功: set_reminder
2025-08-10 21:42:38  {"ts":"2025-08-10T21:42:38.837Z","lvl":"info","stage":"nlp","traceId":"line_1754862158696_4vdel2","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 21:42:38  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 21:42:39  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:42:39  📊 規則提取置信度: 0.67
2025-08-10 21:42:39  🤖 啟用 AI 輔助提取...
2025-08-10 21:42:40  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 21:42:40  {"ts":"2025-08-10T21:42:40.571Z","lvl":"info","stage":"slots","traceId":"line_1754862158696_4vdel2","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 21:42:40  🎯 執行任務: set_reminder
2025-08-10 21:42:40  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 21:42:40  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 21:42:40  📊 任務執行結果: {
2025-08-10 21:42:40    success: false,
2025-08-10 21:42:40    code: 'NOT_FOUND',
2025-08-10 21:42:40    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 21:42:40  }
2025-08-10 21:42:40  {"ts":"2025-08-10T21:42:40.641Z","lvl":"info","stage":"task","traceId":"line_1754862158696_4vdel2","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":70}
2025-08-10 21:42:40  🔍 檢查 replyToken: test-reply-token-1754862158539
2025-08-10 21:42:40  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:42:40  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 21:42:40  {"ts":"2025-08-10T21:42:40.927Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862158696_4vdel2","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 21:42:53  📨 收到 1 個事件
2025-08-10 21:42:53  📋 事件類型: message
2025-08-10 21:42:53  🔍 完整事件 JSON: {
2025-08-10 21:42:53    "type": "message",
2025-08-10 21:42:53    "message": {
2025-08-10 21:42:53      "type": "text",
2025-08-10 21:42:53      "text": "小明的數學課改到下午4點"
2025-08-10 21:42:53    },
2025-08-10 21:42:53    "source": {
2025-08-10 21:42:53      "userId": "U_test_user_qa",
2025-08-10 21:42:53      "type": "user"
2025-08-10 21:42:53    },
2025-08-10 21:42:53    "replyToken": "test-reply-token-1754862173636",
2025-08-10 21:42:53    "timestamp": 1754862173636
2025-08-10 21:42:53  }
2025-08-10 21:42:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:42:53  {"ts":"2025-08-10T21:42:53.797Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862173797_00pid7","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 21:42:53  🔍 用戶ID類型: string
2025-08-10 21:42:53  📨 收到 1 個事件
2025-08-10 21:42:53  📋 事件類型: message
2025-08-10 21:42:53  🔍 完整事件 JSON: {
2025-08-10 21:42:53    "type": "message",
2025-08-10 21:42:53    "message": {
2025-08-10 21:42:53      "type": "text",
2025-08-10 21:42:53      "text": "小明的數學課改到下午4點"
2025-08-10 21:42:53    },
2025-08-10 21:42:53    "source": {
2025-08-10 21:42:53      "userId": "U_test_user_qa",
2025-08-10 21:42:53      "type": "user"
2025-08-10 21:42:53    },
2025-08-10 21:42:53    "replyToken": "test-reply-token-1754862173636",
2025-08-10 21:42:53    "timestamp": 1754862173636
2025-08-10 21:42:53  }
2025-08-10 21:42:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:42:53  {"ts":"2025-08-10T21:42:53.797Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862173797_00pid7","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 21:42:53  🔍 用戶ID類型: string
2025-08-10 21:42:53  🔍 是否測試用戶: true
2025-08-10 21:42:53  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:42:53  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 21:42:53  ✅ 規則匹配成功: modify_course
2025-08-10 21:42:53  {"ts":"2025-08-10T21:42:53.939Z","lvl":"info","stage":"nlp","traceId":"line_1754862173797_00pid7","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 21:42:54  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 21:42:54  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 21:42:54  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:42:54  📊 規則提取置信度: 0.00
2025-08-10 21:42:54  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 21:42:55  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 21:42:55  {"ts":"2025-08-10T21:42:55.446Z","lvl":"info","stage":"slots","traceId":"line_1754862173797_00pid7","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 21:42:55  🎯 執行任務: modify_course
2025-08-10 21:42:55  ✏️ 執行修改操作任務: {
2025-08-10 21:42:55    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 21:42:55    userId: 'U_test_user_qa'
2025-08-10 21:42:55  }
2025-08-10 21:42:55  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 21:42:55  {"ts":"2025-08-10T21:42:55.517Z","lvl":"info","stage":"task","traceId":"line_1754862173797_00pid7","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 21:42:55  🔍 檢查 replyToken: test-reply-token-1754862173636
2025-08-10 21:42:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:42:55  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 21:42:55  {"ts":"2025-08-10T21:42:55.802Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754862173797_00pid7","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 21:43:08  📨 收到 1 個事件
2025-08-10 21:43:08  📋 事件類型: message
2025-08-10 21:43:08  🔍 完整事件 JSON: {
2025-08-10 21:43:08    "type": "message",
2025-08-10 21:43:08    "message": {
2025-08-10 21:43:08      "type": "text",
2025-08-10 21:43:08      "text": "小明每天的晨練課改到早上7點"
2025-08-10 21:43:08    },
2025-08-10 21:43:08    "source": {
2025-08-10 21:43:08      "userId": "U_test_user_qa",
2025-08-10 21:43:08      "type": "user"
2025-08-10 21:43:08    },
2025-08-10 21:43:08    "replyToken": "test-reply-token-1754862188164",
2025-08-10 21:43:08    "timestamp": 1754862188164
2025-08-10 21:43:08  }
2025-08-10 21:43:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:43:08  {"ts":"2025-08-10T21:43:08.412Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 21:43:08  🔍 用戶ID類型: string
2025-08-10 21:43:08  🔍 是否測試用戶: true
2025-08-10 21:43:08  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:43:08  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 21:43:08  ✅ 規則匹配成功: create_recurring_course
2025-08-10 21:43:08  {"ts":"2025-08-10T21:43:08.554Z","lvl":"info","stage":"nlp","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 21:43:08  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 21:43:08  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 21:43:08  ✅ 時間解析成功: {
2025-08-10 21:43:08    input: '小明每天的晨練課改到早上7點',
2025-08-10 21:43:08    output: '07:00',
2025-08-10 21:43:08    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 21:43:08  }
2025-08-10 21:43:08  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:43:08  📊 規則提取置信度: 0.67
2025-08-10 21:43:08  🤖 啟用 AI 輔助提取...
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:43:10    config: {
2025-08-10 21:43:10      url: URL {
2025-08-10 21:43:10        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        origin: 'https://www.googleapis.com',
2025-08-10 21:43:10        protocol: 'https:',
2025-08-10 21:43:10        username: '',
2025-08-10 21:43:10        password: '',
2025-08-10 21:43:10        host: 'www.googleapis.com',
2025-08-10 21:43:10        hostname: 'www.googleapis.com',
2025-08-10 21:43:10        port: '',
2025-08-10 21:43:10        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 21:43:10        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        searchParams: URLSearchParams {
2025-08-10 21:43:10          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10          'singleEvents' => 'true',
2025-08-10 21:43:10          'orderBy' => 'startTime' },
2025-08-10 21:43:10        hash: ''
2025-08-10 21:43:10      },
2025-08-10 21:43:10      method: 'GET',
2025-08-10 21:43:10      apiVersion: '',
2025-08-10 21:43:10      userAgentDirectives: [ [Object] ],
2025-08-10 21:43:10      paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10      headers: Headers {
2025-08-10 21:43:10        'accept-encoding': 'gzip',
2025-08-10 21:43:10        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      params: {
2025-08-10 21:43:10        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10        singleEvents: true,
2025-08-10 21:43:10        orderBy: 'startTime'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      validateStatus: [Function (anonymous)],
2025-08-10 21:43:10      retry: true,
2025-08-10 21:43:10      responseType: 'unknown',
2025-08-10 21:43:10      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:43:10      retryConfig: {
2025-08-10 21:43:10        currentRetryAttempt: 0,
2025-08-10 21:43:10        retry: 3,
2025-08-10 21:43:10        httpMethodsToRetry: [Array],
2025-08-10 21:43:10        noResponseRetries: 2,
2025-08-10 21:43:10        retryDelayMultiplier: 2,
2025-08-10 21:43:10        timeOfFirstRequest: 1754862190715,
2025-08-10 21:43:10        totalTimeout: 9007199254740991,
2025-08-10 21:43:10        maxRetryDelay: 9007199254740991,
2025-08-10 21:43:10        statusCodesToRetry: [Array]
2025-08-10 21:43:10      }
2025-08-10 21:43:10    },
2025-08-10 21:43:10    response: Response {
2025-08-10 21:43:10      size: 0,
2025-08-10 21:43:10      data: { error: [Object] },
2025-08-10 21:43:10      config: {
2025-08-10 21:43:10        url: URL {},
2025-08-10 21:43:10        method: 'GET',
2025-08-10 21:43:10        apiVersion: '',
2025-08-10 21:43:10        userAgentDirectives: [Array],
2025-08-10 21:43:10        paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10        headers: Headers {
2025-08-10 21:43:10          'accept-encoding': 'gzip',
2025-08-10 21:43:10          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10        },
2025-08-10 21:43:10        params: [Object],
2025-08-10 21:43:10        validateStatus: [Function (anonymous)],
2025-08-10 21:43:10        retry: true,
2025-08-10 21:43:10        responseType: 'unknown',
2025-08-10 21:43:10        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:43:10      },
2025-08-10 21:43:10      Symbol(Body internals): {
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:43:10    config: {
2025-08-10 21:43:10      url: URL {
2025-08-10 21:43:10        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        origin: 'https://www.googleapis.com',
2025-08-10 21:43:10        protocol: 'https:',
2025-08-10 21:43:10        username: '',
2025-08-10 21:43:10        password: '',
2025-08-10 21:43:10        host: 'www.googleapis.com',
2025-08-10 21:43:10        hostname: 'www.googleapis.com',
2025-08-10 21:43:10        port: '',
2025-08-10 21:43:10        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 21:43:10        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        searchParams: URLSearchParams {
2025-08-10 21:43:10          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10          'singleEvents' => 'true',
2025-08-10 21:43:10          'orderBy' => 'startTime' },
2025-08-10 21:43:10        hash: ''
2025-08-10 21:43:10      },
2025-08-10 21:43:10      method: 'GET',
2025-08-10 21:43:10      apiVersion: '',
2025-08-10 21:43:10      userAgentDirectives: [ [Object] ],
2025-08-10 21:43:10      paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10      headers: Headers {
2025-08-10 21:43:10        'accept-encoding': 'gzip',
2025-08-10 21:43:10        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      params: {
2025-08-10 21:43:10        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10        singleEvents: true,
2025-08-10 21:43:10        orderBy: 'startTime'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      validateStatus: [Function (anonymous)],
2025-08-10 21:43:10      retry: true,
2025-08-10 21:43:10      responseType: 'unknown',
2025-08-10 21:43:10      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:43:10      retryConfig: {
2025-08-10 21:43:10        currentRetryAttempt: 0,
2025-08-10 21:43:10        retry: 3,
2025-08-10 21:43:10        httpMethodsToRetry: [Array],
2025-08-10 21:43:10        noResponseRetries: 2,
2025-08-10 21:43:10        retryDelayMultiplier: 2,
2025-08-10 21:43:10        timeOfFirstRequest: 1754862190715,
2025-08-10 21:43:10        totalTimeout: 9007199254740991,
2025-08-10 21:43:10        maxRetryDelay: 9007199254740991,
2025-08-10 21:43:10        statusCodesToRetry: [Array]
2025-08-10 21:43:10      }
2025-08-10 21:43:10    },
2025-08-10 21:43:10    response: Response {
2025-08-10 21:43:10      size: 0,
2025-08-10 21:43:10      data: { error: [Object] },
2025-08-10 21:43:10      config: {
2025-08-10 21:43:10        url: URL {},
2025-08-10 21:43:10        method: 'GET',
2025-08-10 21:43:10        apiVersion: '',
2025-08-10 21:43:10        userAgentDirectives: [Array],
2025-08-10 21:43:10        paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10        headers: Headers {
2025-08-10 21:43:10          'accept-encoding': 'gzip',
2025-08-10 21:43:10          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10        },
2025-08-10 21:43:10        params: [Object],
2025-08-10 21:43:10        validateStatus: [Function (anonymous)],
2025-08-10 21:43:10        retry: true,
2025-08-10 21:43:10        responseType: 'unknown',
2025-08-10 21:43:10        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:43:10      },
2025-08-10 21:43:10      Symbol(Body internals): {
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:43:10    config: {
2025-08-10 21:43:10      url: URL {
2025-08-10 21:43:10        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        origin: 'https://www.googleapis.com',
2025-08-10 21:43:10        protocol: 'https:',
2025-08-10 21:43:10        username: '',
2025-08-10 21:43:10        password: '',
2025-08-10 21:43:10        host: 'www.googleapis.com',
2025-08-10 21:43:10        hostname: 'www.googleapis.com',
2025-08-10 21:43:10        port: '',
2025-08-10 21:43:10        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 21:43:10        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        searchParams: URLSearchParams {
2025-08-10 21:43:10          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10          'singleEvents' => 'true',
2025-08-10 21:43:10          'orderBy' => 'startTime' },
2025-08-10 21:43:10        hash: ''
2025-08-10 21:43:10      },
2025-08-10 21:43:10      method: 'GET',
2025-08-10 21:43:10      apiVersion: '',
2025-08-10 21:43:10      userAgentDirectives: [ [Object] ],
2025-08-10 21:43:10      paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10      headers: Headers {
2025-08-10 21:43:10        'accept-encoding': 'gzip',
2025-08-10 21:43:10        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      params: {
2025-08-10 21:43:10        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10        singleEvents: true,
2025-08-10 21:43:10        orderBy: 'startTime'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      validateStatus: [Function (anonymous)],
2025-08-10 21:43:10      retry: true,
2025-08-10 21:43:10      responseType: 'unknown',
2025-08-10 21:43:10      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:43:10      retryConfig: {
2025-08-10 21:43:10        currentRetryAttempt: 0,
2025-08-10 21:43:10        retry: 3,
2025-08-10 21:43:10        httpMethodsToRetry: [Array],
2025-08-10 21:43:10        noResponseRetries: 2,
2025-08-10 21:43:10        retryDelayMultiplier: 2,
2025-08-10 21:43:10        timeOfFirstRequest: 1754862190715,
2025-08-10 21:43:10        totalTimeout: 9007199254740991,
2025-08-10 21:43:10        maxRetryDelay: 9007199254740991,
2025-08-10 21:43:10        statusCodesToRetry: [Array]
2025-08-10 21:43:10      }
2025-08-10 21:43:10    },
2025-08-10 21:43:10    response: Response {
2025-08-10 21:43:10      size: 0,
2025-08-10 21:43:10      data: { error: [Object] },
2025-08-10 21:43:10      config: {
2025-08-10 21:43:10        url: URL {},
2025-08-10 21:43:10        method: 'GET',
2025-08-10 21:43:10        apiVersion: '',
2025-08-10 21:43:10        userAgentDirectives: [Array],
2025-08-10 21:43:10        paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10        headers: Headers {
2025-08-10 21:43:10          'accept-encoding': 'gzip',
2025-08-10 21:43:10          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10        },
2025-08-10 21:43:10        params: [Object],
2025-08-10 21:43:10        validateStatus: [Function (anonymous)],
2025-08-10 21:43:10        retry: true,
2025-08-10 21:43:10        responseType: 'unknown',
2025-08-10 21:43:10        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:43:10      },
2025-08-10 21:43:10      Symbol(Body internals): {
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:43:10    config: {
2025-08-10 21:43:10      url: URL {
2025-08-10 21:43:10        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        origin: 'https://www.googleapis.com',
2025-08-10 21:43:10        protocol: 'https:',
2025-08-10 21:43:10        username: '',
2025-08-10 21:43:10        password: '',
2025-08-10 21:43:10        host: 'www.googleapis.com',
2025-08-10 21:43:10        hostname: 'www.googleapis.com',
2025-08-10 21:43:10        port: '',
2025-08-10 21:43:10        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 21:43:10        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        searchParams: URLSearchParams {
2025-08-10 21:43:10          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10          'singleEvents' => 'true',
2025-08-10 21:43:10          'orderBy' => 'startTime' },
2025-08-10 21:43:10        hash: ''
2025-08-10 21:43:10      },
2025-08-10 21:43:10      method: 'GET',
2025-08-10 21:43:10      apiVersion: '',
2025-08-10 21:43:10      userAgentDirectives: [ [Object] ],
2025-08-10 21:43:10      paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10      headers: Headers {
2025-08-10 21:43:10        'accept-encoding': 'gzip',
2025-08-10 21:43:10        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      params: {
2025-08-10 21:43:10        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10        singleEvents: true,
2025-08-10 21:43:10        orderBy: 'startTime'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      validateStatus: [Function (anonymous)],
2025-08-10 21:43:10      retry: true,
2025-08-10 21:43:10      responseType: 'unknown',
2025-08-10 21:43:10      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:43:10      retryConfig: {
2025-08-10 21:43:10        currentRetryAttempt: 0,
2025-08-10 21:43:10        retry: 3,
2025-08-10 21:43:10        httpMethodsToRetry: [Array],
2025-08-10 21:43:10        noResponseRetries: 2,
2025-08-10 21:43:10        retryDelayMultiplier: 2,
2025-08-10 21:43:10        timeOfFirstRequest: 1754862190715,
2025-08-10 21:43:10        totalTimeout: 9007199254740991,
2025-08-10 21:43:10        maxRetryDelay: 9007199254740991,
2025-08-10 21:43:10        statusCodesToRetry: [Array]
2025-08-10 21:43:10      }
2025-08-10 21:43:10    },
2025-08-10 21:43:10    response: Response {
2025-08-10 21:43:10      size: 0,
2025-08-10 21:43:10      data: { error: [Object] },
2025-08-10 21:43:10      config: {
2025-08-10 21:43:10        url: URL {},
2025-08-10 21:43:10        method: 'GET',
2025-08-10 21:43:10        apiVersion: '',
2025-08-10 21:43:10        userAgentDirectives: [Array],
2025-08-10 21:43:10        paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10        headers: Headers {
2025-08-10 21:43:10          'accept-encoding': 'gzip',
2025-08-10 21:43:10          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10        },
2025-08-10 21:43:10        params: [Object],
2025-08-10 21:43:10        validateStatus: [Function (anonymous)],
2025-08-10 21:43:10        retry: true,
2025-08-10 21:43:10        responseType: 'unknown',
2025-08-10 21:43:10        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:43:10      },
2025-08-10 21:43:10      Symbol(Body internals): {
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:43:10    config: {
2025-08-10 21:43:10      url: URL {
2025-08-10 21:43:10        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        origin: 'https://www.googleapis.com',
2025-08-10 21:43:10        protocol: 'https:',
2025-08-10 21:43:10        username: '',
2025-08-10 21:43:10        password: '',
2025-08-10 21:43:10        host: 'www.googleapis.com',
2025-08-10 21:43:10        hostname: 'www.googleapis.com',
2025-08-10 21:43:10        port: '',
2025-08-10 21:43:10        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 21:43:10        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        searchParams: URLSearchParams {
2025-08-10 21:43:10          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10          'singleEvents' => 'true',
2025-08-10 21:43:10          'orderBy' => 'startTime' },
2025-08-10 21:43:10        hash: ''
2025-08-10 21:43:10      },
2025-08-10 21:43:10      method: 'GET',
2025-08-10 21:43:10      apiVersion: '',
2025-08-10 21:43:10      userAgentDirectives: [ [Object] ],
2025-08-10 21:43:10      paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10      headers: Headers {
2025-08-10 21:43:10        'accept-encoding': 'gzip',
2025-08-10 21:43:10        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      params: {
2025-08-10 21:43:10        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10        singleEvents: true,
2025-08-10 21:43:10        orderBy: 'startTime'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      validateStatus: [Function (anonymous)],
2025-08-10 21:43:10      retry: true,
2025-08-10 21:43:10      responseType: 'unknown',
2025-08-10 21:43:10      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:43:10      retryConfig: {
2025-08-10 21:43:10        currentRetryAttempt: 0,
2025-08-10 21:43:10        retry: 3,
2025-08-10 21:43:10        httpMethodsToRetry: [Array],
2025-08-10 21:43:10        noResponseRetries: 2,
2025-08-10 21:43:10        retryDelayMultiplier: 2,
2025-08-10 21:43:10        timeOfFirstRequest: 1754862190715,
2025-08-10 21:43:10        totalTimeout: 9007199254740991,
2025-08-10 21:43:10        maxRetryDelay: 9007199254740991,
2025-08-10 21:43:10        statusCodesToRetry: [Array]
2025-08-10 21:43:10      }
2025-08-10 21:43:10    },
2025-08-10 21:43:10    response: Response {
2025-08-10 21:43:10      size: 0,
2025-08-10 21:43:10      data: { error: [Object] },
2025-08-10 21:43:10      config: {
2025-08-10 21:43:10        url: URL {},
2025-08-10 21:43:10        method: 'GET',
2025-08-10 21:43:10        apiVersion: '',
2025-08-10 21:43:10        userAgentDirectives: [Array],
2025-08-10 21:43:10        paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10        headers: Headers {
2025-08-10 21:43:10          'accept-encoding': 'gzip',
2025-08-10 21:43:10          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10        },
2025-08-10 21:43:10        params: [Object],
2025-08-10 21:43:10        validateStatus: [Function (anonymous)],
2025-08-10 21:43:10        retry: true,
2025-08-10 21:43:10        responseType: 'unknown',
2025-08-10 21:43:10        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:43:10      },
2025-08-10 21:43:10      Symbol(Body internals): {
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:43:10    config: {
2025-08-10 21:43:10      url: URL {
2025-08-10 21:43:10        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        origin: 'https://www.googleapis.com',
2025-08-10 21:43:10        protocol: 'https:',
2025-08-10 21:43:10        username: '',
2025-08-10 21:43:10        password: '',
2025-08-10 21:43:10        host: 'www.googleapis.com',
2025-08-10 21:43:10        hostname: 'www.googleapis.com',
2025-08-10 21:43:10        port: '',
2025-08-10 21:43:10        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 21:43:10        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        searchParams: URLSearchParams {
2025-08-10 21:43:10          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10          'singleEvents' => 'true',
2025-08-10 21:43:10          'orderBy' => 'startTime' },
2025-08-10 21:43:10        hash: ''
2025-08-10 21:43:10      },
2025-08-10 21:43:10      method: 'GET',
2025-08-10 21:43:10      apiVersion: '',
2025-08-10 21:43:10      userAgentDirectives: [ [Object] ],
2025-08-10 21:43:10      paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10      headers: Headers {
2025-08-10 21:43:10        'accept-encoding': 'gzip',
2025-08-10 21:43:10        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      params: {
2025-08-10 21:43:10        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10        singleEvents: true,
2025-08-10 21:43:10        orderBy: 'startTime'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      validateStatus: [Function (anonymous)],
2025-08-10 21:43:10      retry: true,
2025-08-10 21:43:10      responseType: 'unknown',
2025-08-10 21:43:10      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:43:10      retryConfig: {
2025-08-10 21:43:10        currentRetryAttempt: 0,
2025-08-10 21:43:10        retry: 3,
2025-08-10 21:43:10        httpMethodsToRetry: [Array],
2025-08-10 21:43:10        noResponseRetries: 2,
2025-08-10 21:43:10        retryDelayMultiplier: 2,
2025-08-10 21:43:10        timeOfFirstRequest: 1754862190715,
2025-08-10 21:43:10        totalTimeout: 9007199254740991,
2025-08-10 21:43:10        maxRetryDelay: 9007199254740991,
2025-08-10 21:43:10        statusCodesToRetry: [Array]
2025-08-10 21:43:10      }
2025-08-10 21:43:10    },
2025-08-10 21:43:10    response: Response {
2025-08-10 21:43:10      size: 0,
2025-08-10 21:43:10      data: { error: [Object] },
2025-08-10 21:43:10      config: {
2025-08-10 21:43:10        url: URL {},
2025-08-10 21:43:10        method: 'GET',
2025-08-10 21:43:10        apiVersion: '',
2025-08-10 21:43:10        userAgentDirectives: [Array],
2025-08-10 21:43:10        paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10        headers: Headers {
2025-08-10 21:43:10          'accept-encoding': 'gzip',
2025-08-10 21:43:10          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10        },
2025-08-10 21:43:10        params: [Object],
2025-08-10 21:43:10        validateStatus: [Function (anonymous)],
2025-08-10 21:43:10        retry: true,
2025-08-10 21:43:10        responseType: 'unknown',
2025-08-10 21:43:10        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:43:10      },
2025-08-10 21:43:10      Symbol(Body internals): {
2025-08-10 21:43:10  ✅ 最終 slots: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  {"ts":"2025-08-10T21:43:10.208Z","lvl":"info","stage":"slots","traceId":"line_1754862188412_1zcqyi","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:43:10  🎯 執行任務: create_recurring_course
2025-08-10 21:43:10  🎯 開始處理新增課程任務
2025-08-10 21:43:10  📋 接收參數: {
2025-08-10 21:43:10    studentName: '小明',
2025-08-10 21:43:10    courseName: '晨練課',
2025-08-10 21:43:10    scheduleTime: '07:00',
2025-08-10 21:43:10    recurring: true
2025-08-10 21:43:10  }
2025-08-10 21:43:10  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 21:43:10  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:43:10      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:43:10      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:43:10      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:43:10      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:43:10      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:43:10      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:43:10      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:43:10      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:43:10      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:43:10      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:43:10    config: {
2025-08-10 21:43:10      url: URL {
2025-08-10 21:43:10        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        origin: 'https://www.googleapis.com',
2025-08-10 21:43:10        protocol: 'https:',
2025-08-10 21:43:10        username: '',
2025-08-10 21:43:10        password: '',
2025-08-10 21:43:10        host: 'www.googleapis.com',
2025-08-10 21:43:10        hostname: 'www.googleapis.com',
2025-08-10 21:43:10        port: '',
2025-08-10 21:43:10        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 21:43:10        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:43:10        searchParams: URLSearchParams {
2025-08-10 21:43:10          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10          'singleEvents' => 'true',
2025-08-10 21:43:10          'orderBy' => 'startTime' },
2025-08-10 21:43:10        hash: ''
2025-08-10 21:43:10      },
2025-08-10 21:43:10      method: 'GET',
2025-08-10 21:43:10      apiVersion: '',
2025-08-10 21:43:10      userAgentDirectives: [ [Object] ],
2025-08-10 21:43:10      paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10      headers: Headers {
2025-08-10 21:43:10        'accept-encoding': 'gzip',
2025-08-10 21:43:10        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      params: {
2025-08-10 21:43:10        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:43:10        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:43:10        singleEvents: true,
2025-08-10 21:43:10        orderBy: 'startTime'
2025-08-10 21:43:10      },
2025-08-10 21:43:10      validateStatus: [Function (anonymous)],
2025-08-10 21:43:10      retry: true,
2025-08-10 21:43:10      responseType: 'unknown',
2025-08-10 21:43:10      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:43:10      retryConfig: {
2025-08-10 21:43:10        currentRetryAttempt: 0,
2025-08-10 21:43:10        retry: 3,
2025-08-10 21:43:10        httpMethodsToRetry: [Array],
2025-08-10 21:43:10        noResponseRetries: 2,
2025-08-10 21:43:10        retryDelayMultiplier: 2,
2025-08-10 21:43:10        timeOfFirstRequest: 1754862190715,
2025-08-10 21:43:10        totalTimeout: 9007199254740991,
2025-08-10 21:43:10        maxRetryDelay: 9007199254740991,
2025-08-10 21:43:10        statusCodesToRetry: [Array]
2025-08-10 21:43:10      }
2025-08-10 21:43:10    },
2025-08-10 21:43:10    response: Response {
2025-08-10 21:43:10      size: 0,
2025-08-10 21:43:10      data: { error: [Object] },
2025-08-10 21:43:10      config: {
2025-08-10 21:43:10        url: URL {},
2025-08-10 21:43:10        method: 'GET',
2025-08-10 21:43:10        apiVersion: '',
2025-08-10 21:43:10        userAgentDirectives: [Array],
2025-08-10 21:43:10        paramsSerializer: [Function (anonymous)],
2025-08-10 21:43:10        headers: Headers {
2025-08-10 21:43:10          'accept-encoding': 'gzip',
2025-08-10 21:43:10          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:43:10          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:43:10          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:43:10        },
2025-08-10 21:43:10        params: [Object],
2025-08-10 21:43:10        validateStatus: [Function (anonymous)],
2025-08-10 21:43:10        retry: true,
2025-08-10 21:43:10        responseType: 'unknown',
2025-08-10 21:43:10        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:43:10      },
2025-08-10 21:43:10      Symbol(Body internals): {
