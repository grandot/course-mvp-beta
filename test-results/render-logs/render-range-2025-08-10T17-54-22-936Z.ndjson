2025-08-10 17:39:26  📨 收到 1 個事件
2025-08-10 17:39:26  📋 事件類型: message
2025-08-10 17:39:26  🔍 完整事件 JSON: {
2025-08-10 17:39:26    "type": "message",
2025-08-10 17:39:26    "message": {
2025-08-10 17:39:26      "type": "text",
2025-08-10 17:39:26      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 17:39:26    },
2025-08-10 17:39:26    "source": {
2025-08-10 17:39:26      "userId": "U_test_user_qa",
2025-08-10 17:39:26      "type": "user"
2025-08-10 17:39:26    },
2025-08-10 17:39:26    "replyToken": "test-reply-token-1754847566614",
2025-08-10 17:39:26    "timestamp": 1754847566614
2025-08-10 17:39:26  }
2025-08-10 17:39:26  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:39:26  {"ts":"2025-08-10T17:39:26.785Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847566785_4gv12e","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 17:39:26  🔍 用戶ID類型: string
2025-08-10 17:39:26  🔍 是否測試用戶: true
2025-08-10 17:39:26  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:39:26  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 17:39:26  📝 內容記錄優先規則命中 → record_content
2025-08-10 17:39:26  {"ts":"2025-08-10T17:39:26.930Z","lvl":"info","stage":"nlp","traceId":"line_1754847566785_4gv12e","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 17:39:27  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 17:39:27  📊 規則提取置信度: 0.33
2025-08-10 17:39:27  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 17:39:28  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 17:39:28  {"ts":"2025-08-10T17:39:28.430Z","lvl":"info","stage":"slots","traceId":"line_1754847566785_4gv12e","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 17:39:28  🎯 執行任務: record_content
2025-08-10 17:39:28  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 17:39:28  ✅ 文檔已添加到 course_contents: TCwWXU7mSKWI3QhokjXE
2025-08-10 17:39:28  ✅ 課程內容記錄已儲存: TCwWXU7mSKWI3QhokjXE
2025-08-10 17:39:28  📊 任務執行結果: {
2025-08-10 17:39:28    success: true,
2025-08-10 17:39:28    code: 'RECORD_CONTENT_OK',
2025-08-10 17:39:28    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 17:39:28    data: {
2025-08-10 17:39:28      recordId: 'TCwWXU7mSKWI3QhokjXE',
2025-08-10 17:39:28      courseId: null,
2025-08-10 17:39:28      targetDate: '2025-08-09'
2025-08-10 17:39:28    }
2025-08-10 17:39:28  }
2025-08-10 17:39:28  {"ts":"2025-08-10T17:39:28.522Z","lvl":"info","stage":"task","traceId":"line_1754847566785_4gv12e","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":92}
2025-08-10 17:39:28  🔍 檢查 replyToken: test-reply-token-1754847566614
2025-08-10 17:39:28  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:39:28  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 17:39:28  📝 記錄為獨立內容
2025-08-10 17:39:28  📚 課程：鋼琴課
2025-08-10 17:39:28  📅 日期：2025-08-09
2025-08-10 17:39:28  💬 內容：練習了小星星
2025-08-10 17:39:28  {"ts":"2025-08-10T17:39:28.814Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847566785_4gv12e","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 17:39:41  📨 收到 1 個事件
2025-08-10 17:39:41  📋 事件類型: message
2025-08-10 17:39:41  🔍 完整事件 JSON: {
2025-08-10 17:39:41    "type": "message",
2025-08-10 17:39:41    "message": {
2025-08-10 17:39:41      "type": "text",
2025-08-10 17:39:41      "text": "小明昨天數學課學了什麼？"
2025-08-10 17:39:41    },
2025-08-10 17:39:41    "source": {
2025-08-10 17:39:41      "userId": "U_test_user_qa",
2025-08-10 17:39:41      "type": "user"
2025-08-10 17:39:41    },
2025-08-10 17:39:41    "replyToken": "test-reply-token-1754847581415",
2025-08-10 17:39:41    "timestamp": 1754847581415
2025-08-10 17:39:41  }
2025-08-10 17:39:41  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:39:41  {"ts":"2025-08-10T17:39:41.693Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847581693_boztvd","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 17:39:41  🔍 用戶ID類型: string
2025-08-10 17:39:41  🔍 是否測試用戶: true
2025-08-10 17:39:41  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:39:41  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 17:39:41  📝 內容記錄優先規則命中 → record_content
2025-08-10 17:39:41  {"ts":"2025-08-10T17:39:41.838Z","lvl":"info","stage":"nlp","traceId":"line_1754847581693_boztvd","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 17:39:41  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 17:39:42  📊 規則提取置信度: 0.67
2025-08-10 17:39:42  🤖 啟用 AI 輔助提取...
2025-08-10 17:39:43  ✅ 最終 slots: {
2025-08-10 17:39:43    studentName: '小明',
2025-08-10 17:39:43    courseName: '數學課',
2025-08-10 17:39:43    timeReference: 'yesterday',
2025-08-10 17:39:43    content: '什麼？'
2025-08-10 17:39:43  }
2025-08-10 17:39:43  {"ts":"2025-08-10T17:39:43.195Z","lvl":"info","stage":"slots","traceId":"line_1754847581693_boztvd","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 17:39:43  🎯 執行任務: record_content
2025-08-10 17:39:43  📝 開始處理記錄課程內容任務: {
2025-08-10 17:39:43    studentName: '小明',
2025-08-10 17:39:43    courseName: '數學課',
2025-08-10 17:39:43    timeReference: 'yesterday',
2025-08-10 17:39:43    content: '什麼？'
2025-08-10 17:39:43  }
2025-08-10 17:39:43  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 17:39:43  ❓ 未找到完全匹配的課程
2025-08-10 17:39:43  ✅ 文檔已添加到 course_contents: 9FRJxB3y3nRZAr7M4jsQ
2025-08-10 17:39:43  ✅ 課程內容記錄已儲存: 9FRJxB3y3nRZAr7M4jsQ
2025-08-10 17:39:43  📊 任務執行結果: {
2025-08-10 17:39:43    success: true,
2025-08-10 17:39:43    code: 'RECORD_CONTENT_OK',
2025-08-10 17:39:43    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 17:39:43    data: {
2025-08-10 17:39:43  ✅ 最終 slots: {
2025-08-10 17:39:43    studentName: '小明',
2025-08-10 17:39:43    courseName: '數學課',
2025-08-10 17:39:43    timeReference: 'yesterday',
2025-08-10 17:39:43    content: '什麼？'
2025-08-10 17:39:43  }
2025-08-10 17:39:43  {"ts":"2025-08-10T17:39:43.195Z","lvl":"info","stage":"slots","traceId":"line_1754847581693_boztvd","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 17:39:43  🎯 執行任務: record_content
2025-08-10 17:39:43  📝 開始處理記錄課程內容任務: {
2025-08-10 17:39:43    studentName: '小明',
2025-08-10 17:39:43    courseName: '數學課',
2025-08-10 17:39:43    timeReference: 'yesterday',
2025-08-10 17:39:43    content: '什麼？'
2025-08-10 17:39:43  }
2025-08-10 17:39:43  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 17:39:43  ❓ 未找到完全匹配的課程
2025-08-10 17:39:43  ✅ 文檔已添加到 course_contents: 9FRJxB3y3nRZAr7M4jsQ
2025-08-10 17:39:43  ✅ 課程內容記錄已儲存: 9FRJxB3y3nRZAr7M4jsQ
2025-08-10 17:39:43  📊 任務執行結果: {
2025-08-10 17:39:43    success: true,
2025-08-10 17:39:43    code: 'RECORD_CONTENT_OK',
2025-08-10 17:39:43    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 17:39:43    data: {
2025-08-10 17:39:43      recordId: '9FRJxB3y3nRZAr7M4jsQ',
2025-08-10 17:39:43      courseId: null,
2025-08-10 17:39:43      targetDate: '2025-08-09'
2025-08-10 17:39:43    }
2025-08-10 17:39:43  }
2025-08-10 17:39:43  {"ts":"2025-08-10T17:39:43.556Z","lvl":"info","stage":"task","traceId":"line_1754847581693_boztvd","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":361}
2025-08-10 17:39:43  🔍 檢查 replyToken: test-reply-token-1754847581415
2025-08-10 17:39:43  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:39:43  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 17:39:43  📝 記錄為獨立內容
2025-08-10 17:39:43  👨‍🎓 學生：小明
2025-08-10 17:39:43  📚 課程：數學課
2025-08-10 17:39:43  📅 日期：2025-08-09
2025-08-10 17:39:43  💬 內容：什麼？
2025-08-10 17:39:43  {"ts":"2025-08-10T17:39:43.846Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847581693_boztvd","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 17:39:51  📨 收到 1 個事件
2025-08-10 17:39:51  📋 事件類型: message
2025-08-10 17:39:51  🔍 完整事件 JSON: {
2025-08-10 17:39:51    "type": "message",
2025-08-10 17:39:51    "message": {
2025-08-10 17:39:51      "type": "text",
2025-08-10 17:39:51      "text": "記錄小明今天化學課的內容"
2025-08-10 17:39:51    },
2025-08-10 17:39:51    "source": {
2025-08-10 17:39:51      "userId": "U_test_user_qa",
2025-08-10 17:39:51      "type": "user"
2025-08-10 17:39:51    },
2025-08-10 17:39:51    "replyToken": "test-reply-token-1754847590824",
2025-08-10 17:39:51    "timestamp": 1754847590824
2025-08-10 17:39:51  }
2025-08-10 17:39:51  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:39:51  {"ts":"2025-08-10T17:39:51.096Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847591096_olklkt","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 17:39:51  🔍 用戶ID類型: string
2025-08-10 17:39:51  🔍 是否測試用戶: true
2025-08-10 17:39:51  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:39:51  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 17:39:51  📝 內容記錄優先規則命中 → record_content
2025-08-10 17:39:51  {"ts":"2025-08-10T17:39:51.241Z","lvl":"info","stage":"nlp","traceId":"line_1754847591096_olklkt","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 17:39:51  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 17:39:51  📊 規則提取置信度: 0.67
2025-08-10 17:39:51  🤖 啟用 AI 輔助提取...
2025-08-10 17:39:52  ✅ 最終 slots: {
2025-08-10 17:39:52    studentName: '小明',
2025-08-10 17:39:52    courseName: '化學課',
2025-08-10 17:39:52    timeReference: 'today',
2025-08-10 17:39:52    content: '小明今天化學課的內容'
2025-08-10 17:39:52  }
2025-08-10 17:39:52  {"ts":"2025-08-10T17:39:52.520Z","lvl":"info","stage":"slots","traceId":"line_1754847591096_olklkt","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 17:39:52  🎯 執行任務: record_content
2025-08-10 17:39:52  📝 開始處理記錄課程內容任務: {
2025-08-10 17:39:52    studentName: '小明',
2025-08-10 17:39:52    courseName: '化學課',
2025-08-10 17:39:52    timeReference: 'today',
2025-08-10 17:39:52    content: '小明今天化學課的內容'
2025-08-10 17:39:52  }
2025-08-10 17:39:52  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 17:39:52  ❓ 未找到完全匹配的課程
2025-08-10 17:39:52  ✅ 文檔已添加到 course_contents: GcsQaPowZXOQ8MKwsnvg
2025-08-10 17:39:52  ✅ 課程內容記錄已儲存: GcsQaPowZXOQ8MKwsnvg
2025-08-10 17:39:52  📊 任務執行結果: {
2025-08-10 17:39:52    success: true,
2025-08-10 17:39:52    code: 'RECORD_CONTENT_OK',
2025-08-10 17:39:52    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 17:39:52      '📝 記錄為獨立內容\n' +
2025-08-10 17:39:52      '👨‍🎓 學生：小明\n' +
2025-08-10 17:39:52      '📚 課程：化學課\n' +
2025-08-10 17:39:52      '📅 日期：2025-08-10\n' +
2025-08-10 17:39:52      '💬 內容：小明今天化學課的內容',
2025-08-10 17:39:52    data: {
2025-08-10 17:39:52      recordId: 'GcsQaPowZXOQ8MKwsnvg',
2025-08-10 17:39:52      courseId: null,
2025-08-10 17:39:52      targetDate: '2025-08-10'
2025-08-10 17:39:52    }
2025-08-10 17:39:52  }
2025-08-10 17:39:52  {"ts":"2025-08-10T17:39:52.743Z","lvl":"info","stage":"task","traceId":"line_1754847591096_olklkt","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":223}
2025-08-10 17:39:53  🔍 檢查 replyToken: test-reply-token-1754847590824
2025-08-10 17:39:53  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:39:53  🔍 檢查 replyToken: test-reply-token-1754847590824
2025-08-10 17:39:53  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:39:53  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 17:39:53  📝 記錄為獨立內容
2025-08-10 17:39:53  👨‍🎓 學生：小明
2025-08-10 17:39:53  📚 課程：化學課
2025-08-10 17:39:53  📅 日期：2025-08-10
2025-08-10 17:39:53  💬 內容：小明今天化學課的內容
2025-08-10 17:39:53  {"ts":"2025-08-10T17:39:53.033Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847591096_olklkt","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 17:40:05  📨 收到 1 個事件
2025-08-10 17:40:05  📋 事件類型: message
2025-08-10 17:40:05  🔍 完整事件 JSON: {
2025-08-10 17:40:05    "type": "message",
2025-08-10 17:40:05    "message": {
2025-08-10 17:40:05      "type": "text",
2025-08-10 17:40:05      "text": "提醒我小明的數學課"
2025-08-10 17:40:05    },
2025-08-10 17:40:05    "source": {
2025-08-10 17:40:05      "userId": "U_test_user_qa",
2025-08-10 17:40:05      "type": "user"
2025-08-10 17:40:05    },
2025-08-10 17:40:05    "replyToken": "test-reply-token-1754847605772",
2025-08-10 17:40:05    "timestamp": 1754847605772
2025-08-10 17:40:05  }
2025-08-10 17:40:05  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:40:05  {"ts":"2025-08-10T17:40:05.949Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847605949_bm1t73","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 17:40:05  🔍 用戶ID類型: string
2025-08-10 17:40:05  🔍 是否測試用戶: true
2025-08-10 17:40:05  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:40:05  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 17:40:06  ✅ 規則匹配成功: set_reminder
2025-08-10 17:40:06  {"ts":"2025-08-10T17:40:06.094Z","lvl":"info","stage":"nlp","traceId":"line_1754847605949_bm1t73","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:40:06  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:40:06  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:40:06  📊 規則提取置信度: 0.67
2025-08-10 17:40:06  🤖 啟用 AI 輔助提取...
2025-08-10 17:40:07  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:40:07  {"ts":"2025-08-10T17:40:07.503Z","lvl":"info","stage":"slots","traceId":"line_1754847605949_bm1t73","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:40:07  🎯 執行任務: set_reminder
2025-08-10 17:40:07  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 17:40:07  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 17:40:07  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 17:40:07  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 17:40:07  ✅ 提醒記錄已創建: XM5afGzvSJP1YpvaV7Fv
2025-08-10 17:40:07  ✅ 提醒設定成功: XM5afGzvSJP1YpvaV7Fv
2025-08-10 17:40:07  📊 任務執行結果: {
2025-08-10 17:40:07    success: true,
2025-08-10 17:40:07    code: 'REMINDER_SET_OK',
2025-08-10 17:40:07    message: '✅ 提醒設定完成！\n' +
2025-08-10 17:40:07      '📚 課程：小明 的 數學課\n' +
2025-08-10 17:40:07      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 17:40:07      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 17:40:07  }
2025-08-10 17:40:07  {"ts":"2025-08-10T17:40:07.796Z","lvl":"info","stage":"task","traceId":"line_1754847605949_bm1t73","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":293}
2025-08-10 17:40:08  🔍 檢查 replyToken: test-reply-token-1754847605772
2025-08-10 17:40:08  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:40:08  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 17:40:08  📚 課程：小明 的 數學課
2025-08-10 17:40:08  📅 上課時間：8/11 下午02:00
2025-08-10 17:40:08  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 17:40:08  {"ts":"2025-08-10T17:40:08.087Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847605949_bm1t73","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 17:40:20  📨 收到 1 個事件
2025-08-10 17:40:20  📋 事件類型: message
2025-08-10 17:40:20  🔍 完整事件 JSON: {
2025-08-10 17:40:20    "type": "message",
2025-08-10 17:40:20    "message": {
2025-08-10 17:40:20      "type": "text",
2025-08-10 17:40:20      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 17:40:20    },
2025-08-10 17:40:20    "source": {
2025-08-10 17:40:20      "userId": "U_test_user_qa",
2025-08-10 17:40:20      "type": "user"
2025-08-10 17:40:20    },
2025-08-10 17:40:20    "replyToken": "test-reply-token-1754847620830",
2025-08-10 17:40:20    "timestamp": 1754847620830
2025-08-10 17:40:20  }
2025-08-10 17:40:20  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:40:21  {"ts":"2025-08-10T17:40:21.006Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847621006_mrnd42","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 17:40:21  🔍 用戶ID類型: string
2025-08-10 17:40:21  🔍 是否測試用戶: true
2025-08-10 17:40:21  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:40:21  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 17:40:21  ✅ 規則匹配成功: set_reminder
2025-08-10 17:40:21  {"ts":"2025-08-10T17:40:21.151Z","lvl":"info","stage":"nlp","traceId":"line_1754847621006_mrnd42","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:40:21  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:40:21  📊 規則提取置信度: 0.67
2025-08-10 17:40:21  🤖 啟用 AI 輔助提取...
2025-08-10 17:40:22  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 17:40:22  {"ts":"2025-08-10T17:40:22.816Z","lvl":"info","stage":"slots","traceId":"line_1754847621006_mrnd42","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 17:40:22  🎯 執行任務: set_reminder
2025-08-10 17:40:22  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 17:40:22  📊 任務執行結果: {
2025-08-10 17:40:22    success: false,
2025-08-10 17:40:22    code: 'MISSING_STUDENT',
2025-08-10 17:40:22    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 17:40:22  }
2025-08-10 17:40:22  {"ts":"2025-08-10T17:40:22.816Z","lvl":"info","stage":"task","traceId":"line_1754847621006_mrnd42","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 17:40:23  🔍 檢查 replyToken: test-reply-token-1754847620830
2025-08-10 17:40:23  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:40:23  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 17:40:23  🔍 檢查 replyToken: test-reply-token-1754847620830
2025-08-10 17:40:23  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:40:23  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 17:40:23  {"ts":"2025-08-10T17:40:23.108Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847621006_mrnd42","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 17:40:36  📨 收到 1 個事件
2025-08-10 17:40:36  📋 事件類型: message
2025-08-10 17:40:36  🔍 完整事件 JSON: {
2025-08-10 17:40:36    "type": "message",
2025-08-10 17:40:36    "message": {
2025-08-10 17:40:36      "type": "text",
2025-08-10 17:40:36      "text": "提醒我小明的物理課"
2025-08-10 17:40:36    },
2025-08-10 17:40:36    "source": {
2025-08-10 17:40:36      "userId": "U_test_user_qa",
2025-08-10 17:40:36      "type": "user"
2025-08-10 17:40:36    },
2025-08-10 17:40:36    "replyToken": "test-reply-token-1754847636199",
2025-08-10 17:40:36    "timestamp": 1754847636199
2025-08-10 17:40:36  }
2025-08-10 17:40:36  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:40:36  {"ts":"2025-08-10T17:40:36.371Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847636371_drytls","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 17:40:36  🔍 用戶ID類型: string
2025-08-10 17:40:36  🔍 是否測試用戶: true
2025-08-10 17:40:36  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:40:36  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 17:40:36  ✅ 規則匹配成功: set_reminder
2025-08-10 17:40:36  {"ts":"2025-08-10T17:40:36.515Z","lvl":"info","stage":"nlp","traceId":"line_1754847636371_drytls","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 17:40:36  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 17:40:36  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:40:36  📊 規則提取置信度: 0.67
2025-08-10 17:40:36  🤖 啟用 AI 輔助提取...
2025-08-10 17:40:37  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:40:37  {"ts":"2025-08-10T17:40:37.883Z","lvl":"info","stage":"slots","traceId":"line_1754847636371_drytls","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 17:40:37  🎯 執行任務: set_reminder
2025-08-10 17:40:37  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 17:40:37  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 17:40:37  📊 任務執行結果: {
2025-08-10 17:40:37    success: false,
2025-08-10 17:40:37    code: 'NOT_FOUND',
2025-08-10 17:40:37    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 17:40:37  }
2025-08-10 17:40:37  {"ts":"2025-08-10T17:40:37.974Z","lvl":"info","stage":"task","traceId":"line_1754847636371_drytls","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":91}
2025-08-10 17:40:38  🔍 檢查 replyToken: test-reply-token-1754847636199
2025-08-10 17:40:38  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:40:38  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 17:40:38  {"ts":"2025-08-10T17:40:38.266Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847636371_drytls","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 17:40:50  📨 收到 1 個事件
2025-08-10 17:40:50  📋 事件類型: message
2025-08-10 17:40:50  🔍 完整事件 JSON: {
2025-08-10 17:40:50    "type": "message",
2025-08-10 17:40:50    "message": {
2025-08-10 17:40:50      "type": "text",
2025-08-10 17:40:50      "text": "小明的數學課改到下午4點"
2025-08-10 17:40:50    },
2025-08-10 17:40:50    "source": {
2025-08-10 17:40:50      "userId": "U_test_user_qa",
2025-08-10 17:40:50      "type": "user"
2025-08-10 17:40:50    },
2025-08-10 17:40:50    "replyToken": "test-reply-token-1754847650872",
2025-08-10 17:40:50    "timestamp": 1754847650872
2025-08-10 17:40:50  }
2025-08-10 17:40:50  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:40:51  {"ts":"2025-08-10T17:40:51.113Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847651113_piert5","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 17:40:51  🔍 用戶ID類型: string
2025-08-10 17:40:51  🔍 是否測試用戶: true
2025-08-10 17:40:51  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:40:51  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 17:40:51  ✅ 規則匹配成功: modify_course
2025-08-10 17:40:51  {"ts":"2025-08-10T17:40:51.257Z","lvl":"info","stage":"nlp","traceId":"line_1754847651113_piert5","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 17:40:51  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 17:40:51  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 17:40:51  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:40:51  📊 規則提取置信度: 0.00
2025-08-10 17:40:51  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 17:40:53  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 17:40:53  {"ts":"2025-08-10T17:40:53.122Z","lvl":"info","stage":"slots","traceId":"line_1754847651113_piert5","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 17:40:53  🎯 執行任務: modify_course
2025-08-10 17:40:53  ✏️ 執行修改操作任務: {
2025-08-10 17:40:53    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 17:40:53    userId: 'U_test_user_qa'
2025-08-10 17:40:53  }
2025-08-10 17:40:53  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 17:40:53  {"ts":"2025-08-10T17:40:53.194Z","lvl":"info","stage":"task","traceId":"line_1754847651113_piert5","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":72}
2025-08-10 17:40:53  🔍 檢查 replyToken: test-reply-token-1754847650872
2025-08-10 17:40:53  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 17:40:53  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 17:40:53  {"ts":"2025-08-10T17:40:53.484Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754847651113_piert5","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 17:41:06  📨 收到 1 個事件
2025-08-10 17:41:06  📋 事件類型: message
2025-08-10 17:41:06  🔍 完整事件 JSON: {
2025-08-10 17:41:06    "type": "message",
2025-08-10 17:41:06    "message": {
2025-08-10 17:41:06      "type": "text",
2025-08-10 17:41:06      "text": "小明每天的晨練課改到早上7點"
2025-08-10 17:41:06    },
2025-08-10 17:41:06    "source": {
2025-08-10 17:41:06      "userId": "U_test_user_qa",
2025-08-10 17:41:06      "type": "user"
2025-08-10 17:41:06    },
2025-08-10 17:41:06    "replyToken": "test-reply-token-1754847665944",
2025-08-10 17:41:06  📨 收到 1 個事件
2025-08-10 17:41:06  📋 事件類型: message
2025-08-10 17:41:06  🔍 完整事件 JSON: {
2025-08-10 17:41:06    "type": "message",
2025-08-10 17:41:06    "message": {
2025-08-10 17:41:06      "type": "text",
2025-08-10 17:41:06      "text": "小明每天的晨練課改到早上7點"
2025-08-10 17:41:06    },
2025-08-10 17:41:06    "source": {
2025-08-10 17:41:06      "userId": "U_test_user_qa",
2025-08-10 17:41:06      "type": "user"
2025-08-10 17:41:06    },
2025-08-10 17:41:06    "replyToken": "test-reply-token-1754847665944",
2025-08-10 17:41:06    "timestamp": 1754847665944
2025-08-10 17:41:06  }
2025-08-10 17:41:06  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 17:41:06  {"ts":"2025-08-10T17:41:06.117Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 17:41:06  🔍 用戶ID類型: string
2025-08-10 17:41:06  🔍 是否測試用戶: true
2025-08-10 17:41:06  🚀 生產用戶，使用真實 LINE Service
2025-08-10 17:41:06  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 17:41:06  ✅ 規則匹配成功: create_recurring_course
2025-08-10 17:41:06  {"ts":"2025-08-10T17:41:06.262Z","lvl":"info","stage":"nlp","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 17:41:06  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 17:41:06  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 17:41:06  ✅ 時間解析成功: {
2025-08-10 17:41:06    input: '小明每天的晨練課改到早上7點',
2025-08-10 17:41:06    output: '07:00',
2025-08-10 17:41:06    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 17:41:06  }
2025-08-10 17:41:06  🧠 使用對話上下文增強 slots 提取
2025-08-10 17:41:06  📊 規則提取置信度: 0.67
2025-08-10 17:41:06  🤖 啟用 AI 輔助提取...
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
2025-08-10 17:41:08  ✅ 最終 slots: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  {"ts":"2025-08-10T17:41:08.160Z","lvl":"info","stage":"slots","traceId":"line_1754847666117_804d8r","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 17:41:08  🎯 執行任務: create_recurring_course
2025-08-10 17:41:08  🎯 開始處理新增課程任務
2025-08-10 17:41:08  📋 接收參數: {
2025-08-10 17:41:08    studentName: '小明',
2025-08-10 17:41:08    courseName: '晨練課',
2025-08-10 17:41:08    scheduleTime: '07:00',
2025-08-10 17:41:08    recurring: true
2025-08-10 17:41:08  }
2025-08-10 17:41:08  👤 學生日曆: b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481@group.calendar.google.com
2025-08-10 17:41:08  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 17:41:08      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 17:41:08      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 17:41:08      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 17:41:08      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 17:41:08      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 17:41:08      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 17:41:08      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 17:41:08      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 17:41:08      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 17:41:08      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 17:41:08    config: {
2025-08-10 17:41:08      url: URL {
2025-08-10 17:41:08        href: 'https://www.googleapis.com/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        origin: 'https://www.googleapis.com',
2025-08-10 17:41:08        protocol: 'https:',
2025-08-10 17:41:08        username: '',
2025-08-10 17:41:08        password: '',
2025-08-10 17:41:08        host: 'www.googleapis.com',
2025-08-10 17:41:08        hostname: 'www.googleapis.com',
2025-08-10 17:41:08        port: '',
2025-08-10 17:41:08        pathname: '/calendar/v3/calendars/b9bf786ee6f0002a0cbe843b8e27184082718a0ab1875873280de3be93e4a481%40group.calendar.google.com/events',
2025-08-10 17:41:08        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 17:41:08        searchParams: URLSearchParams {
2025-08-10 17:41:08          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08          'singleEvents' => 'true',
2025-08-10 17:41:08          'orderBy' => 'startTime' },
2025-08-10 17:41:08        hash: ''
2025-08-10 17:41:08      },
2025-08-10 17:41:08      method: 'GET',
2025-08-10 17:41:08      apiVersion: '',
2025-08-10 17:41:08      userAgentDirectives: [ [Object] ],
2025-08-10 17:41:08      paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08      headers: Headers {
2025-08-10 17:41:08        'accept-encoding': 'gzip',
2025-08-10 17:41:08        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      params: {
2025-08-10 17:41:08        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 17:41:08        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 17:41:08        singleEvents: true,
2025-08-10 17:41:08        orderBy: 'startTime'
2025-08-10 17:41:08      },
2025-08-10 17:41:08      validateStatus: [Function (anonymous)],
2025-08-10 17:41:08      retry: true,
2025-08-10 17:41:08      responseType: 'unknown',
2025-08-10 17:41:08      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 17:41:08      retryConfig: {
2025-08-10 17:41:08        currentRetryAttempt: 0,
2025-08-10 17:41:08        retry: 3,
2025-08-10 17:41:08        httpMethodsToRetry: [Array],
2025-08-10 17:41:08        noResponseRetries: 2,
2025-08-10 17:41:08        retryDelayMultiplier: 2,
2025-08-10 17:41:08        timeOfFirstRequest: 1754847668642,
2025-08-10 17:41:08        totalTimeout: 9007199254740991,
2025-08-10 17:41:08        maxRetryDelay: 9007199254740991,
2025-08-10 17:41:08        statusCodesToRetry: [Array]
2025-08-10 17:41:08      }
2025-08-10 17:41:08    },
2025-08-10 17:41:08    response: Response {
2025-08-10 17:41:08      size: 0,
2025-08-10 17:41:08      data: { error: [Object] },
2025-08-10 17:41:08      config: {
2025-08-10 17:41:08        url: URL {},
2025-08-10 17:41:08        method: 'GET',
2025-08-10 17:41:08        apiVersion: '',
2025-08-10 17:41:08        userAgentDirectives: [Array],
2025-08-10 17:41:08        paramsSerializer: [Function (anonymous)],
2025-08-10 17:41:08        headers: Headers {
2025-08-10 17:41:08          'accept-encoding': 'gzip',
2025-08-10 17:41:08          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 17:41:08          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 17:41:08          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 17:41:08        },
2025-08-10 17:41:08        params: [Object],
2025-08-10 17:41:08        validateStatus: [Function (anonymous)],
2025-08-10 17:41:08        retry: true,
2025-08-10 17:41:08        responseType: 'unknown',
2025-08-10 17:41:08        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 17:41:08      },
2025-08-10 17:41:08      Symbol(Body internals): {
