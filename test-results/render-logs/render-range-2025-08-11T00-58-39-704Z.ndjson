2025-08-11 00:43:41  📨 收到 1 個事件
2025-08-11 00:43:41  📋 事件類型: message
2025-08-11 00:43:41  🔍 完整事件 JSON: {
2025-08-11 00:43:41    "type": "message",
2025-08-11 00:43:41    "message": {
2025-08-11 00:43:41      "type": "text",
2025-08-11 00:43:41      "text": "小明的晨練課每天幾點？"
2025-08-11 00:43:41    },
2025-08-11 00:43:41    "source": {
2025-08-11 00:43:41      "userId": "U_test_user_qa",
2025-08-11 00:43:41      "type": "user"
2025-08-11 00:43:41    },
2025-08-11 00:43:41    "replyToken": "test-reply-token-1754873021769",
2025-08-11 00:43:41    "timestamp": 1754873021769
2025-08-11 00:43:41  }
2025-08-11 00:43:41  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:43:42  {"ts":"2025-08-11T00:43:42.009Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873022009_a4fnag","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-11 00:43:42  🔍 用戶ID類型: string
2025-08-11 00:43:42  🔍 是否測試用戶: true
2025-08-11 00:43:42  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:43:42  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-11 00:43:42  🤖 啟用 AI 備援識別...
2025-08-11 00:43:43  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-11 00:43:43  {"ts":"2025-08-11T00:43:43.242Z","lvl":"info","stage":"nlp","traceId":"line_1754873022009_a4fnag","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-11 00:43:43  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-11 00:43:43  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:43:43  📊 規則提取置信度: 0.50
2025-08-11 00:43:43  🤖 啟用 AI 輔助提取...
2025-08-11 00:43:45  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-11 00:43:45  {"ts":"2025-08-11T00:43:45.109Z","lvl":"info","stage":"slots","traceId":"line_1754873022009_a4fnag","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-11 00:43:45  🎯 執行任務: query_schedule
2025-08-11 00:43:45  🎯 開始處理查詢課表任務
2025-08-11 00:43:45  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-11 00:43:45  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-11 00:43:45  📚 查詢到 366 筆課程資料
2025-08-11 00:43:45  📚 查詢到 14 筆課程
2025-08-11 00:43:45  📊 任務執行結果: {
2025-08-11 00:43:45    success: true,
2025-08-11 00:43:45    code: 'QUERY_OK',
2025-08-11 00:43:45    message: '📅 小明本週的課程安排\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/9 (週六)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/10 (週日)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/11 (週一)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/12 (週二)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/13 (週三)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/14 (週四)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/15 (週五)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄',
2025-08-11 00:43:45    data: {
2025-08-11 00:43:45      courses: [
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object]
2025-08-11 00:43:45      ],
2025-08-11 00:43:45      courseCount: 14,
2025-08-11 00:43:45      dateRange: {
2025-08-11 00:43:45        startDate: '2025-08-10',
2025-08-11 00:43:45        endDate: '2025-08-16',
2025-08-11 00:43:45        description: '本週'
2025-08-11 00:43:45      }
2025-08-11 00:43:45    }
2025-08-11 00:43:45  }
2025-08-11 00:43:45  {"ts":"2025-08-11T00:43:45.478Z","lvl":"info","stage":"task","traceId":"line_1754873022009_a4fnag","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":369}
2025-08-11 00:43:45  🔍 檢查 replyToken: test-reply-token-1754873021769
2025-08-11 00:43:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:43:45  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/9 (週六)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/10 (週日)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/11 (週一)
2025-08-11 00:43:45  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-11 00:43:45  {"ts":"2025-08-11T00:43:45.109Z","lvl":"info","stage":"slots","traceId":"line_1754873022009_a4fnag","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-11 00:43:45  🎯 執行任務: query_schedule
2025-08-11 00:43:45  🎯 開始處理查詢課表任務
2025-08-11 00:43:45  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-11 00:43:45  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-11 00:43:45  📚 查詢到 366 筆課程資料
2025-08-11 00:43:45  📚 查詢到 14 筆課程
2025-08-11 00:43:45  📊 任務執行結果: {
2025-08-11 00:43:45    success: true,
2025-08-11 00:43:45    code: 'QUERY_OK',
2025-08-11 00:43:45    message: '📅 小明本週的課程安排\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/9 (週六)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/10 (週日)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/11 (週一)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/12 (週二)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/13 (週三)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/14 (週四)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '\n' +
2025-08-11 00:43:45      '📆 8/15 (週五)\n' +
2025-08-11 00:43:45      '  上午7:00 - 晨練課 🔄\n' +
2025-08-11 00:43:45      '  上午8:00 - 晨練課 🔄',
2025-08-11 00:43:45    data: {
2025-08-11 00:43:45      courses: [
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object],
2025-08-11 00:43:45        [Object], [Object]
2025-08-11 00:43:45      ],
2025-08-11 00:43:45      courseCount: 14,
2025-08-11 00:43:45      dateRange: {
2025-08-11 00:43:45        startDate: '2025-08-10',
2025-08-11 00:43:45        endDate: '2025-08-16',
2025-08-11 00:43:45        description: '本週'
2025-08-11 00:43:45      }
2025-08-11 00:43:45    }
2025-08-11 00:43:45  }
2025-08-11 00:43:45  {"ts":"2025-08-11T00:43:45.478Z","lvl":"info","stage":"task","traceId":"line_1754873022009_a4fnag","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":369}
2025-08-11 00:43:45  🔍 檢查 replyToken: test-reply-token-1754873021769
2025-08-11 00:43:45  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:43:45  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/9 (週六)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/10 (週日)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/11 (週一)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/12 (週二)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/13 (週三)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/14 (週四)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  
2025-08-11 00:43:45  📆 8/15 (週五)
2025-08-11 00:43:45    上午7:00 - 晨練課 🔄
2025-08-11 00:43:45    上午8:00 - 晨練課 🔄
2025-08-11 00:43:45  {"ts":"2025-08-11T00:43:45.768Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873022009_a4fnag","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-11 00:43:58  📨 收到 1 個事件
2025-08-11 00:43:58  📋 事件類型: message
2025-08-11 00:43:58  🔍 完整事件 JSON: {
2025-08-11 00:43:58    "type": "message",
2025-08-11 00:43:58    "message": {
2025-08-11 00:43:58      "type": "text",
2025-08-11 00:43:58      "text": "查詢Lumi的重複課程"
2025-08-11 00:43:58    },
2025-08-11 00:43:58    "source": {
2025-08-11 00:43:58  📨 收到 1 個事件
2025-08-11 00:43:58  📋 事件類型: message
2025-08-11 00:43:58  🔍 完整事件 JSON: {
2025-08-11 00:43:58    "type": "message",
2025-08-11 00:43:58    "message": {
2025-08-11 00:43:58      "type": "text",
2025-08-11 00:43:58      "text": "查詢Lumi的重複課程"
2025-08-11 00:43:58    },
2025-08-11 00:43:58    "source": {
2025-08-11 00:43:58      "userId": "U_test_user_qa",
2025-08-11 00:43:58      "type": "user"
2025-08-11 00:43:58    },
2025-08-11 00:43:58    "replyToken": "test-reply-token-1754873038069",
2025-08-11 00:43:58    "timestamp": 1754873038069
2025-08-11 00:43:58  }
2025-08-11 00:43:58  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:43:58  {"ts":"2025-08-11T00:43:58.303Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873038303_r37tit","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-11 00:43:58  🔍 用戶ID類型: string
2025-08-11 00:43:58  🔍 是否測試用戶: true
2025-08-11 00:43:58  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:43:58  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-11 00:43:58  ✅ 規則匹配成功: query_schedule
2025-08-11 00:43:58  {"ts":"2025-08-11T00:43:58.447Z","lvl":"info","stage":"nlp","traceId":"line_1754873038303_r37tit","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-11 00:43:58  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-11 00:43:58  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:43:58  📊 規則提取置信度: 0.50
2025-08-11 00:43:58  🤖 啟用 AI 輔助提取...
2025-08-11 00:44:00  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-11 00:44:00  {"ts":"2025-08-11T00:44:00.034Z","lvl":"info","stage":"slots","traceId":"line_1754873038303_r37tit","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-11 00:44:00  🎯 執行任務: query_schedule
2025-08-11 00:44:00  🎯 開始處理查詢課表任務
2025-08-11 00:44:00  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-11 00:44:00  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-11 00:44:00  📚 查詢到 355 筆課程資料
2025-08-11 00:44:00  📚 查詢到 0 筆課程
2025-08-11 00:44:00  📊 任務執行結果: {
2025-08-11 00:44:00    success: true,
2025-08-11 00:44:00    code: 'QUERY_OK_EMPTY',
2025-08-11 00:44:00    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-11 00:44:00      '\n' +
2025-08-11 00:44:00      '💡 您可以：\n' +
2025-08-11 00:44:00      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-11 00:44:00      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-11 00:44:00      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-11 00:44:00    data: {
2025-08-11 00:44:00      courseCount: 0,
2025-08-11 00:44:00      dateRange: {
2025-08-11 00:44:00        startDate: '2025-08-10',
2025-08-11 00:44:00        endDate: '2025-08-16',
2025-08-11 00:44:00        description: '本週'
2025-08-11 00:44:00      }
2025-08-11 00:44:00    }
2025-08-11 00:44:00  }
2025-08-11 00:44:00  {"ts":"2025-08-11T00:44:00.633Z","lvl":"info","stage":"task","traceId":"line_1754873038303_r37tit","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":599}
2025-08-11 00:44:00  🔍 檢查 replyToken: test-reply-token-1754873038069
2025-08-11 00:44:00  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:44:00  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-11 00:44:00  
2025-08-11 00:44:00  💡 您可以：
2025-08-11 00:44:00  • 新增課程：「小明明天上午10點英文課」
2025-08-11 00:44:00  • 查詢其他時間：「小明下週的課表」
2025-08-11 00:44:00  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-11 00:44:00  {"ts":"2025-08-11T00:44:00.921Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873038303_r37tit","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-11 00:44:13  📨 收到 1 個事件
2025-08-11 00:44:13  📋 事件類型: message
2025-08-11 00:44:13  🔍 完整事件 JSON: {
2025-08-11 00:44:13    "type": "message",
2025-08-11 00:44:13    "message": {
2025-08-11 00:44:13      "type": "text",
2025-08-11 00:44:13      "text": "今天小明的數學課學了分數加減法"
2025-08-11 00:44:13    },
2025-08-11 00:44:13    "source": {
2025-08-11 00:44:13      "userId": "U_test_user_qa",
2025-08-11 00:44:13      "type": "user"
2025-08-11 00:44:13    },
2025-08-11 00:44:13    "replyToken": "test-reply-token-1754873053288",
2025-08-11 00:44:13    "timestamp": 1754873053288
2025-08-11 00:44:13  }
2025-08-11 00:44:13  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:44:13  {"ts":"2025-08-11T00:44:13.530Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873053530_0fx82d","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-11 00:44:13  🔍 用戶ID類型: string
2025-08-11 00:44:13  🔍 是否測試用戶: true
2025-08-11 00:44:13  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:44:13  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-11 00:44:13  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:44:13  {"ts":"2025-08-11T00:44:13.674Z","lvl":"info","stage":"nlp","traceId":"line_1754873053530_0fx82d","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:44:13  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:44:13  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:44:13  📊 規則提取置信度: 1.00
2025-08-11 00:44:13  🤖 啟用 AI 輔助提取...
2025-08-11 00:44:14  ✅ 最終 slots: {
2025-08-11 00:44:14    studentName: '小明',
2025-08-11 00:44:14    courseName: '數學課',
2025-08-11 00:44:14    timeReference: 'today',
2025-08-11 00:44:14    content: '分數加減法'
2025-08-11 00:44:14  }
2025-08-11 00:44:14  {"ts":"2025-08-11T00:44:14.973Z","lvl":"info","stage":"slots","traceId":"line_1754873053530_0fx82d","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:44:14  🎯 執行任務: record_content
2025-08-11 00:44:14  📝 開始處理記錄課程內容任務: {
2025-08-11 00:44:14    studentName: '小明',
2025-08-11 00:44:14  ✅ 最終 slots: {
2025-08-11 00:44:14    studentName: '小明',
2025-08-11 00:44:14    courseName: '數學課',
2025-08-11 00:44:14    timeReference: 'today',
2025-08-11 00:44:14    content: '分數加減法'
2025-08-11 00:44:14  }
2025-08-11 00:44:14  {"ts":"2025-08-11T00:44:14.973Z","lvl":"info","stage":"slots","traceId":"line_1754873053530_0fx82d","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:44:14  🎯 執行任務: record_content
2025-08-11 00:44:14  📝 開始處理記錄課程內容任務: {
2025-08-11 00:44:14    studentName: '小明',
2025-08-11 00:44:14    courseName: '數學課',
2025-08-11 00:44:14    timeReference: 'today',
2025-08-11 00:44:14    content: '分數加減法'
2025-08-11 00:44:14  }
2025-08-11 00:44:14  🔍 查找課程: 小明 - 數學課 - 2025-08-11
2025-08-11 00:44:15  ✅ 找到匹配的單次課程: 0Gk6c0CUqgnYuYkJddgR
2025-08-11 00:44:15  ✅ 文檔已添加到 course_contents: J49XKLd4E0adnYEWSavo
2025-08-11 00:44:15  ✅ 課程內容記錄已儲存: J49XKLd4E0adnYEWSavo
2025-08-11 00:44:15  ✅ 文檔已更新 (courses/0Gk6c0CUqgnYuYkJddgR)
2025-08-11 00:44:15  📊 任務執行結果: {
2025-08-11 00:44:15    success: true,
2025-08-11 00:44:15    code: 'RECORD_CONTENT_OK',
2025-08-11 00:44:15    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-11\n💬 內容：分數加減法',
2025-08-11 00:44:15    data: {
2025-08-11 00:44:15      recordId: 'J49XKLd4E0adnYEWSavo',
2025-08-11 00:44:15      courseId: '0Gk6c0CUqgnYuYkJddgR',
2025-08-11 00:44:15      targetDate: '2025-08-11'
2025-08-11 00:44:15    }
2025-08-11 00:44:15  }
2025-08-11 00:44:15  {"ts":"2025-08-11T00:44:15.298Z","lvl":"info","stage":"task","traceId":"line_1754873053530_0fx82d","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":325}
2025-08-11 00:44:15  🔍 檢查 replyToken: test-reply-token-1754873053288
2025-08-11 00:44:15  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:44:15  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:44:15  📚 課程：小明 - 數學課
2025-08-11 00:44:15  📅 日期：2025-08-11
2025-08-11 00:44:15  💬 內容：分數加減法
2025-08-11 00:44:15  {"ts":"2025-08-11T00:44:15.587Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873053530_0fx82d","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-11\n💬 內容：分數加減法","quickReply":true}
2025-08-11 00:44:28  📨 收到 1 個事件
2025-08-11 00:44:28  📋 事件類型: message
2025-08-11 00:44:28  🔍 完整事件 JSON: {
2025-08-11 00:44:28    "type": "message",
2025-08-11 00:44:28    "message": {
2025-08-11 00:44:28      "type": "text",
2025-08-11 00:44:28      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-11 00:44:28    },
2025-08-11 00:44:28    "source": {
2025-08-11 00:44:28      "userId": "U_test_user_qa",
2025-08-11 00:44:28      "type": "user"
2025-08-11 00:44:28    },
2025-08-11 00:44:28    "replyToken": "test-reply-token-1754873068132",
2025-08-11 00:44:28    "timestamp": 1754873068132
2025-08-11 00:44:28  }
2025-08-11 00:44:28  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:44:28  {"ts":"2025-08-11T00:44:28.369Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873068369_bczind","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-11 00:44:28  🔍 用戶ID類型: string
2025-08-11 00:44:28  🔍 是否測試用戶: true
2025-08-11 00:44:28  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:44:28  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-11 00:44:28  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:44:28  {"ts":"2025-08-11T00:44:28.514Z","lvl":"info","stage":"nlp","traceId":"line_1754873068369_bczind","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:44:28  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:44:28  📊 規則提取置信度: 0.33
2025-08-11 00:44:28  🔄 規則提取信心度低，AI 輔助增強...
2025-08-11 00:44:30  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:44:30  {"ts":"2025-08-11T00:44:30.008Z","lvl":"info","stage":"slots","traceId":"line_1754873068369_bczind","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-11 00:44:30  🎯 執行任務: record_content
2025-08-11 00:44:30  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-11 00:44:30  ✅ 文檔已添加到 course_contents: I6I2rrBbLUYyuCPQsWom
2025-08-11 00:44:30  ✅ 課程內容記錄已儲存: I6I2rrBbLUYyuCPQsWom
2025-08-11 00:44:30  📊 任務執行結果: {
2025-08-11 00:44:30    success: true,
2025-08-11 00:44:30    code: 'RECORD_CONTENT_OK',
2025-08-11 00:44:30    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-10\n💬 內容：練習了小星星',
2025-08-11 00:44:30    data: {
2025-08-11 00:44:30      recordId: 'I6I2rrBbLUYyuCPQsWom',
2025-08-11 00:44:30      courseId: null,
2025-08-11 00:44:30      targetDate: '2025-08-10'
2025-08-11 00:44:30    }
2025-08-11 00:44:30  }
2025-08-11 00:44:30  {"ts":"2025-08-11T00:44:30.097Z","lvl":"info","stage":"task","traceId":"line_1754873068369_bczind","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":89}
2025-08-11 00:44:30  🔍 檢查 replyToken: test-reply-token-1754873068132
2025-08-11 00:44:30  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:44:30  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:44:30  📝 記錄為獨立內容
2025-08-11 00:44:30  📚 課程：鋼琴課
2025-08-11 00:44:30  📅 日期：2025-08-10
2025-08-11 00:44:30  💬 內容：練習了小星星
2025-08-11 00:44:30  {"ts":"2025-08-11T00:44:30.385Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873068369_bczind","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-10\n💬 內容：練習了小星星","quickReply":true}
2025-08-11 00:44:43  📨 收到 1 個事件
2025-08-11 00:44:43  📋 事件類型: message
2025-08-11 00:44:43  🔍 完整事件 JSON: {
2025-08-11 00:44:43    "type": "message",
2025-08-11 00:44:43    "message": {
2025-08-11 00:44:43      "type": "text",
2025-08-11 00:44:43      "text": "小明昨天數學課學了什麼？"
2025-08-11 00:44:43    },
2025-08-11 00:44:43    "source": {
2025-08-11 00:44:43      "userId": "U_test_user_qa",
2025-08-11 00:44:43      "type": "user"
2025-08-11 00:44:43    },
2025-08-11 00:44:43  📨 收到 1 個事件
2025-08-11 00:44:43  📋 事件類型: message
2025-08-11 00:44:43  🔍 完整事件 JSON: {
2025-08-11 00:44:43    "type": "message",
2025-08-11 00:44:43    "message": {
2025-08-11 00:44:43      "type": "text",
2025-08-11 00:44:43      "text": "小明昨天數學課學了什麼？"
2025-08-11 00:44:43    },
2025-08-11 00:44:43    "source": {
2025-08-11 00:44:43      "userId": "U_test_user_qa",
2025-08-11 00:44:43      "type": "user"
2025-08-11 00:44:43    },
2025-08-11 00:44:43    "replyToken": "test-reply-token-1754873082958",
2025-08-11 00:44:43    "timestamp": 1754873082958
2025-08-11 00:44:43  }
2025-08-11 00:44:43  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:44:43  {"ts":"2025-08-11T00:44:43.198Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873083198_hnxyj4","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-11 00:44:43  🔍 用戶ID類型: string
2025-08-11 00:44:43  🔍 是否測試用戶: true
2025-08-11 00:44:43  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:44:43  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-11 00:44:43  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:44:43  {"ts":"2025-08-11T00:44:43.342Z","lvl":"info","stage":"nlp","traceId":"line_1754873083198_hnxyj4","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:44:43  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:44:43  📊 規則提取置信度: 0.67
2025-08-11 00:44:43  🤖 啟用 AI 輔助提取...
2025-08-11 00:44:45  ✅ 最終 slots: {
2025-08-11 00:44:45    studentName: '小明',
2025-08-11 00:44:45    courseName: '數學課',
2025-08-11 00:44:45    timeReference: 'yesterday',
2025-08-11 00:44:45    content: '什麼？'
2025-08-11 00:44:45  }
2025-08-11 00:44:45  {"ts":"2025-08-11T00:44:45.304Z","lvl":"info","stage":"slots","traceId":"line_1754873083198_hnxyj4","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:44:45  🎯 執行任務: record_content
2025-08-11 00:44:45  📝 開始處理記錄課程內容任務: {
2025-08-11 00:44:45    studentName: '小明',
2025-08-11 00:44:45    courseName: '數學課',
2025-08-11 00:44:45    timeReference: 'yesterday',
2025-08-11 00:44:45    content: '什麼？'
2025-08-11 00:44:45  }
2025-08-11 00:44:45  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-11 00:44:45  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-11 00:44:45  ✅ 文檔已添加到 course_contents: NX9MVhnIwaOrkjjgHfN0
2025-08-11 00:44:45  ✅ 課程內容記錄已儲存: NX9MVhnIwaOrkjjgHfN0
2025-08-11 00:44:45  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-11 00:44:45  📊 任務執行結果: {
2025-08-11 00:44:45    success: true,
2025-08-11 00:44:45    code: 'RECORD_CONTENT_OK',
2025-08-11 00:44:45    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：什麼？',
2025-08-11 00:44:45    data: {
2025-08-11 00:44:45      recordId: 'NX9MVhnIwaOrkjjgHfN0',
2025-08-11 00:44:45      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-11 00:44:45      targetDate: '2025-08-10'
2025-08-11 00:44:45    }
2025-08-11 00:44:45  }
2025-08-11 00:44:45  {"ts":"2025-08-11T00:44:45.732Z","lvl":"info","stage":"task","traceId":"line_1754873083198_hnxyj4","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":428}
2025-08-11 00:44:46  🔍 檢查 replyToken: test-reply-token-1754873082958
2025-08-11 00:44:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:44:46  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:44:46  📚 課程：小明 - 數學課
2025-08-11 00:44:46  📅 日期：2025-08-10
2025-08-11 00:44:46  💬 內容：什麼？
2025-08-11 00:44:46  {"ts":"2025-08-11T00:44:46.021Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873083198_hnxyj4","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：什麼？","quickReply":true}
2025-08-11 00:44:53  📨 收到 1 個事件
2025-08-11 00:44:53  📋 事件類型: message
2025-08-11 00:44:53  🔍 完整事件 JSON: {
2025-08-11 00:44:53    "type": "message",
2025-08-11 00:44:53    "message": {
2025-08-11 00:44:53      "type": "text",
2025-08-11 00:44:53      "text": "記錄小明今天化學課的內容"
2025-08-11 00:44:53    },
2025-08-11 00:44:53    "source": {
2025-08-11 00:44:53      "userId": "U_test_user_qa",
2025-08-11 00:44:53      "type": "user"
2025-08-11 00:44:53    },
2025-08-11 00:44:53    "replyToken": "test-reply-token-1754873092923",
2025-08-11 00:44:53    "timestamp": 1754873092923
2025-08-11 00:44:53  }
2025-08-11 00:44:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:44:53  {"ts":"2025-08-11T00:44:53.222Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873093222_w6fj7z","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-11 00:44:53  🔍 用戶ID類型: string
2025-08-11 00:44:53  🔍 是否測試用戶: true
2025-08-11 00:44:53  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:44:53  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-11 00:44:53  📝 內容記錄優先規則命中 → record_content
2025-08-11 00:44:53  {"ts":"2025-08-11T00:44:53.368Z","lvl":"info","stage":"nlp","traceId":"line_1754873093222_w6fj7z","userId":"U_test_user_qa","intent":"record_content"}
2025-08-11 00:44:53  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-11 00:44:53  📊 規則提取置信度: 0.67
2025-08-11 00:44:53  🤖 啟用 AI 輔助提取...
2025-08-11 00:44:55  ✅ 最終 slots: {
2025-08-11 00:44:55    studentName: '小明',
2025-08-11 00:44:55    courseName: '化學課',
2025-08-11 00:44:55    timeReference: 'today',
2025-08-11 00:44:55    content: '小明今天化學課的內容'
2025-08-11 00:44:55  }
2025-08-11 00:44:55  {"ts":"2025-08-11T00:44:55.073Z","lvl":"info","stage":"slots","traceId":"line_1754873093222_w6fj7z","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:44:55  🎯 執行任務: record_content
2025-08-11 00:44:55  📝 開始處理記錄課程內容任務: {
2025-08-11 00:44:55    studentName: '小明',
2025-08-11 00:44:55    courseName: '化學課',
2025-08-11 00:44:55  ✅ 最終 slots: {
2025-08-11 00:44:55    studentName: '小明',
2025-08-11 00:44:55    courseName: '化學課',
2025-08-11 00:44:55    timeReference: 'today',
2025-08-11 00:44:55    content: '小明今天化學課的內容'
2025-08-11 00:44:55  }
2025-08-11 00:44:55  {"ts":"2025-08-11T00:44:55.073Z","lvl":"info","stage":"slots","traceId":"line_1754873093222_w6fj7z","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-11 00:44:55  🎯 執行任務: record_content
2025-08-11 00:44:55  📝 開始處理記錄課程內容任務: {
2025-08-11 00:44:55    studentName: '小明',
2025-08-11 00:44:55    courseName: '化學課',
2025-08-11 00:44:55    timeReference: 'today',
2025-08-11 00:44:55    content: '小明今天化學課的內容'
2025-08-11 00:44:55  }
2025-08-11 00:44:55  🔍 查找課程: 小明 - 化學課 - 2025-08-11
2025-08-11 00:44:55  ❓ 未找到完全匹配的課程
2025-08-11 00:44:55  ✅ 文檔已添加到 course_contents: OXHoRspXcGfoO7AYwmER
2025-08-11 00:44:55  ✅ 課程內容記錄已儲存: OXHoRspXcGfoO7AYwmER
2025-08-11 00:44:55  📊 任務執行結果: {
2025-08-11 00:44:55    success: true,
2025-08-11 00:44:55    code: 'RECORD_CONTENT_OK',
2025-08-11 00:44:55    message: '✅ 課程內容已成功記錄！\n' +
2025-08-11 00:44:55      '📝 記錄為獨立內容\n' +
2025-08-11 00:44:55      '👨‍🎓 學生：小明\n' +
2025-08-11 00:44:55      '📚 課程：化學課\n' +
2025-08-11 00:44:55      '📅 日期：2025-08-11\n' +
2025-08-11 00:44:55      '💬 內容：小明今天化學課的內容',
2025-08-11 00:44:55    data: {
2025-08-11 00:44:55      recordId: 'OXHoRspXcGfoO7AYwmER',
2025-08-11 00:44:55      courseId: null,
2025-08-11 00:44:55      targetDate: '2025-08-11'
2025-08-11 00:44:55    }
2025-08-11 00:44:55  }
2025-08-11 00:44:55  {"ts":"2025-08-11T00:44:55.341Z","lvl":"info","stage":"task","traceId":"line_1754873093222_w6fj7z","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":268}
2025-08-11 00:44:55  🔍 檢查 replyToken: test-reply-token-1754873092923
2025-08-11 00:44:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:44:55  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-11 00:44:55  📝 記錄為獨立內容
2025-08-11 00:44:55  👨‍🎓 學生：小明
2025-08-11 00:44:55  📚 課程：化學課
2025-08-11 00:44:55  📅 日期：2025-08-11
2025-08-11 00:44:55  💬 內容：小明今天化學課的內容
2025-08-11 00:44:55  {"ts":"2025-08-11T00:44:55.630Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873093222_w6fj7z","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-11\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-11 00:45:08  📨 收到 1 個事件
2025-08-11 00:45:08  📋 事件類型: message
2025-08-11 00:45:08  🔍 完整事件 JSON: {
2025-08-11 00:45:08    "type": "message",
2025-08-11 00:45:08    "message": {
2025-08-11 00:45:08      "type": "text",
2025-08-11 00:45:08      "text": "提醒我小明的數學課"
2025-08-11 00:45:08    },
2025-08-11 00:45:08    "source": {
2025-08-11 00:45:08      "userId": "U_test_user_qa",
2025-08-11 00:45:08      "type": "user"
2025-08-11 00:45:08    },
2025-08-11 00:45:08    "replyToken": "test-reply-token-1754873108436",
2025-08-11 00:45:08    "timestamp": 1754873108436
2025-08-11 00:45:08  }
2025-08-11 00:45:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:45:08  {"ts":"2025-08-11T00:45:08.675Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873108675_nmaljw","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-11 00:45:08  🔍 用戶ID類型: string
2025-08-11 00:45:08  🔍 是否測試用戶: true
2025-08-11 00:45:08  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:45:08  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-11 00:45:08  ✅ 規則匹配成功: set_reminder
2025-08-11 00:45:08  {"ts":"2025-08-11T00:45:08.820Z","lvl":"info","stage":"nlp","traceId":"line_1754873108675_nmaljw","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:45:08  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:45:09  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:45:09  📊 規則提取置信度: 0.67
2025-08-11 00:45:09  🤖 啟用 AI 輔助提取...
2025-08-11 00:45:10  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:45:10  {"ts":"2025-08-11T00:45:10.084Z","lvl":"info","stage":"slots","traceId":"line_1754873108675_nmaljw","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:45:10  🎯 執行任務: set_reminder
2025-08-11 00:45:10  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-11 00:45:10  📚 找到課程: 小明 的 數學課 (2025-08-12 14:00)
2025-08-11 00:45:10  📅 課程時間: 2025/8/12 下午2:00:00
2025-08-11 00:45:10  ⏰ 提醒時間: 2025/8/12 下午1:30:00
2025-08-11 00:45:10  ✅ 提醒記錄已創建: osil7UStxgy9JBg9Kwcf
2025-08-11 00:45:10  ✅ 提醒設定成功: osil7UStxgy9JBg9Kwcf
2025-08-11 00:45:10  📊 任務執行結果: {
2025-08-11 00:45:10    success: true,
2025-08-11 00:45:10    code: 'REMINDER_SET_OK',
2025-08-11 00:45:10    message: '✅ 提醒設定完成！\n' +
2025-08-11 00:45:10      '📚 課程：小明 的 數學課\n' +
2025-08-11 00:45:10      '📅 上課時間：8/12 下午02:00\n' +
2025-08-11 00:45:10      '⏰ 提醒時間：8/12 下午01:30 (提前 30 分鐘)'
2025-08-11 00:45:10  }
2025-08-11 00:45:10  {"ts":"2025-08-11T00:45:10.353Z","lvl":"info","stage":"task","traceId":"line_1754873108675_nmaljw","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":269}
2025-08-11 00:45:10  🔍 檢查 replyToken: test-reply-token-1754873108436
2025-08-11 00:45:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:45:10  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-11 00:45:10  📚 課程：小明 的 數學課
2025-08-11 00:45:10  📅 上課時間：8/12 下午02:00
2025-08-11 00:45:10  ⏰ 提醒時間：8/12 下午01:30 (提前 30 分鐘)
2025-08-11 00:45:10  {"ts":"2025-08-11T00:45:10.642Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873108675_nmaljw","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/12 下午02:00\n⏰ 提醒時間：8/12 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-11 00:45:23  📨 收到 1 個事件
2025-08-11 00:45:23  📋 事件類型: message
2025-08-11 00:45:23  🔍 完整事件 JSON: {
2025-08-11 00:45:23    "type": "message",
2025-08-11 00:45:23    "message": {
2025-08-11 00:45:23  📨 收到 1 個事件
2025-08-11 00:45:23  📋 事件類型: message
2025-08-11 00:45:23  🔍 完整事件 JSON: {
2025-08-11 00:45:23    "type": "message",
2025-08-11 00:45:23    "message": {
2025-08-11 00:45:23      "type": "text",
2025-08-11 00:45:23      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-11 00:45:23    },
2025-08-11 00:45:23    "source": {
2025-08-11 00:45:23      "userId": "U_test_user_qa",
2025-08-11 00:45:23      "type": "user"
2025-08-11 00:45:23    },
2025-08-11 00:45:23    "replyToken": "test-reply-token-1754873122973",
2025-08-11 00:45:23    "timestamp": 1754873122973
2025-08-11 00:45:23  }
2025-08-11 00:45:23  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:45:23  {"ts":"2025-08-11T00:45:23.217Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873123217_p07dbt","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-11 00:45:23  🔍 用戶ID類型: string
2025-08-11 00:45:23  🔍 是否測試用戶: true
2025-08-11 00:45:23  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:45:23  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-11 00:45:23  ✅ 規則匹配成功: set_reminder
2025-08-11 00:45:23  {"ts":"2025-08-11T00:45:23.359Z","lvl":"info","stage":"nlp","traceId":"line_1754873123217_p07dbt","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:45:23  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:45:23  📊 規則提取置信度: 0.67
2025-08-11 00:45:23  🤖 啟用 AI 輔助提取...
2025-08-11 00:45:24  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-11 00:45:24  {"ts":"2025-08-11T00:45:24.575Z","lvl":"info","stage":"slots","traceId":"line_1754873123217_p07dbt","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-11 00:45:24  🎯 執行任務: set_reminder
2025-08-11 00:45:24  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-11 00:45:24  📊 任務執行結果: {
2025-08-11 00:45:24    success: false,
2025-08-11 00:45:24    code: 'MISSING_STUDENT',
2025-08-11 00:45:24    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-11 00:45:24  }
2025-08-11 00:45:24  {"ts":"2025-08-11T00:45:24.576Z","lvl":"info","stage":"task","traceId":"line_1754873123217_p07dbt","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-11 00:45:24  🔍 檢查 replyToken: test-reply-token-1754873122973
2025-08-11 00:45:24  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:45:24  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-11 00:45:24  {"ts":"2025-08-11T00:45:24.859Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873123217_p07dbt","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-11 00:45:37  📨 收到 1 個事件
2025-08-11 00:45:37  📋 事件類型: message
2025-08-11 00:45:37  🔍 完整事件 JSON: {
2025-08-11 00:45:37    "type": "message",
2025-08-11 00:45:37    "message": {
2025-08-11 00:45:37      "type": "text",
2025-08-11 00:45:37      "text": "提醒我小明的物理課"
2025-08-11 00:45:37    },
2025-08-11 00:45:37    "source": {
2025-08-11 00:45:37      "userId": "U_test_user_qa",
2025-08-11 00:45:37      "type": "user"
2025-08-11 00:45:37    },
2025-08-11 00:45:37    "replyToken": "test-reply-token-1754873137479",
2025-08-11 00:45:37    "timestamp": 1754873137479
2025-08-11 00:45:37  }
2025-08-11 00:45:37  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:45:37  {"ts":"2025-08-11T00:45:37.828Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873137828_2qyt2p","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-11 00:45:37  🔍 用戶ID類型: string
2025-08-11 00:45:37  🔍 是否測試用戶: true
2025-08-11 00:45:37  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:45:37  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-11 00:45:37  ✅ 規則匹配成功: set_reminder
2025-08-11 00:45:37  {"ts":"2025-08-11T00:45:37.970Z","lvl":"info","stage":"nlp","traceId":"line_1754873137828_2qyt2p","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-11 00:45:38  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-11 00:45:38  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:45:38  📊 規則提取置信度: 0.67
2025-08-11 00:45:38  🤖 啟用 AI 輔助提取...
2025-08-11 00:45:39  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:45:39  {"ts":"2025-08-11T00:45:39.873Z","lvl":"info","stage":"slots","traceId":"line_1754873137828_2qyt2p","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-11 00:45:39  🎯 執行任務: set_reminder
2025-08-11 00:45:39  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-11 00:45:39  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-11 00:45:39  📊 任務執行結果: {
2025-08-11 00:45:39    success: false,
2025-08-11 00:45:39    code: 'NOT_FOUND',
2025-08-11 00:45:39    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-11 00:45:39  }
2025-08-11 00:45:39  {"ts":"2025-08-11T00:45:39.947Z","lvl":"info","stage":"task","traceId":"line_1754873137828_2qyt2p","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":74}
2025-08-11 00:45:40  🔍 檢查 replyToken: test-reply-token-1754873137479
2025-08-11 00:45:40  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:45:40  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-11 00:45:40  {"ts":"2025-08-11T00:45:40.230Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873137828_2qyt2p","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-11 00:45:53  📨 收到 1 個事件
2025-08-11 00:45:53  📋 事件類型: message
2025-08-11 00:45:53  🔍 完整事件 JSON: {
2025-08-11 00:45:53    "type": "message",
2025-08-11 00:45:53    "message": {
2025-08-11 00:45:53      "type": "text",
2025-08-11 00:45:53      "text": "小明的數學課改到下午4點"
2025-08-11 00:45:53    },
2025-08-11 00:45:53    "source": {
2025-08-11 00:45:53      "userId": "U_test_user_qa",
2025-08-11 00:45:53      "type": "user"
2025-08-11 00:45:53    },
2025-08-11 00:45:53    "replyToken": "test-reply-token-1754873153060",
2025-08-11 00:45:53    "timestamp": 1754873153060
2025-08-11 00:45:53  }
2025-08-11 00:45:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:45:53  {"ts":"2025-08-11T00:45:53.294Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873153294_t5op1h","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-11 00:45:53  🔍 用戶ID類型: string
2025-08-11 00:45:53  📨 收到 1 個事件
2025-08-11 00:45:53  📋 事件類型: message
2025-08-11 00:45:53  🔍 完整事件 JSON: {
2025-08-11 00:45:53    "type": "message",
2025-08-11 00:45:53    "message": {
2025-08-11 00:45:53      "type": "text",
2025-08-11 00:45:53      "text": "小明的數學課改到下午4點"
2025-08-11 00:45:53    },
2025-08-11 00:45:53    "source": {
2025-08-11 00:45:53      "userId": "U_test_user_qa",
2025-08-11 00:45:53      "type": "user"
2025-08-11 00:45:53    },
2025-08-11 00:45:53    "replyToken": "test-reply-token-1754873153060",
2025-08-11 00:45:53    "timestamp": 1754873153060
2025-08-11 00:45:53  }
2025-08-11 00:45:53  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:45:53  {"ts":"2025-08-11T00:45:53.294Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873153294_t5op1h","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-11 00:45:53  🔍 用戶ID類型: string
2025-08-11 00:45:53  🔍 是否測試用戶: true
2025-08-11 00:45:53  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:45:53  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-11 00:45:53  ✅ 規則匹配成功: modify_course
2025-08-11 00:45:53  {"ts":"2025-08-11T00:45:53.435Z","lvl":"info","stage":"nlp","traceId":"line_1754873153294_t5op1h","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-11 00:45:53  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-11 00:45:53  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-11 00:45:53  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:45:53  📊 規則提取置信度: 0.00
2025-08-11 00:45:53  🔄 規則提取信心度低，AI 輔助增強...
2025-08-11 00:45:55  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-11 00:45:55  {"ts":"2025-08-11T00:45:55.275Z","lvl":"info","stage":"slots","traceId":"line_1754873153294_t5op1h","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-11 00:45:55  🎯 執行任務: modify_course
2025-08-11 00:45:55  ✏️ 執行修改操作任務: {
2025-08-11 00:45:55    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-11 00:45:55    userId: 'U_test_user_qa'
2025-08-11 00:45:55  }
2025-08-11 00:45:55  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-11 00:45:55  {"ts":"2025-08-11T00:45:55.346Z","lvl":"info","stage":"task","traceId":"line_1754873153294_t5op1h","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-11 00:45:55  🔍 檢查 replyToken: test-reply-token-1754873153060
2025-08-11 00:45:55  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:45:55  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-11 00:45:55  {"ts":"2025-08-11T00:45:55.630Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873153294_t5op1h","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-11 00:46:08  📨 收到 1 個事件
2025-08-11 00:46:08  📋 事件類型: message
2025-08-11 00:46:08  🔍 完整事件 JSON: {
2025-08-11 00:46:08    "type": "message",
2025-08-11 00:46:08    "message": {
2025-08-11 00:46:08      "type": "text",
2025-08-11 00:46:08      "text": "小明每天的晨練課改到早上7點"
2025-08-11 00:46:08    },
2025-08-11 00:46:08    "source": {
2025-08-11 00:46:08      "userId": "U_test_user_qa",
2025-08-11 00:46:08      "type": "user"
2025-08-11 00:46:08    },
2025-08-11 00:46:08    "replyToken": "test-reply-token-1754873167990",
2025-08-11 00:46:08    "timestamp": 1754873167990
2025-08-11 00:46:08  }
2025-08-11 00:46:08  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:46:08  {"ts":"2025-08-11T00:46:08.426Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873168426_gtvbcr","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-11 00:46:08  🔍 用戶ID類型: string
2025-08-11 00:46:08  🔍 是否測試用戶: true
2025-08-11 00:46:08  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:46:08  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-11 00:46:08  ✅ 規則匹配成功: create_recurring_course
2025-08-11 00:46:08  {"ts":"2025-08-11T00:46:08.567Z","lvl":"info","stage":"nlp","traceId":"line_1754873168426_gtvbcr","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-11 00:46:08  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-11 00:46:08  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-11 00:46:08  ✅ 時間解析成功: {
2025-08-11 00:46:08    input: '小明每天的晨練課改到早上7點',
2025-08-11 00:46:08    output: '07:00',
2025-08-11 00:46:08    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-11 00:46:08  }
2025-08-11 00:46:08  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:46:08  📊 規則提取置信度: 0.67
2025-08-11 00:46:08  🤖 啟用 AI 輔助提取...
2025-08-11 00:46:10  ✅ 最終 slots: {
2025-08-11 00:46:10    studentName: '小明',
2025-08-11 00:46:10    courseName: '晨練課',
2025-08-11 00:46:10    scheduleTime: '07:00',
2025-08-11 00:46:10    recurring: false
2025-08-11 00:46:10  }
2025-08-11 00:46:10  {"ts":"2025-08-11T00:46:10.563Z","lvl":"info","stage":"slots","traceId":"line_1754873168426_gtvbcr","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:10  🎯 執行任務: create_recurring_course
2025-08-11 00:46:10  🎯 開始處理新增課程任務
2025-08-11 00:46:10  📋 接收參數: {
2025-08-11 00:46:10    studentName: '小明',
2025-08-11 00:46:10    courseName: '晨練課',
2025-08-11 00:46:10    scheduleTime: '07:00',
2025-08-11 00:46:10    recurring: false
2025-08-11 00:46:10  }
2025-08-11 00:46:10  📊 任務執行結果: {
2025-08-11 00:46:10    success: false,
2025-08-11 00:46:10    code: 'MISSING_FIELDS',
2025-08-11 00:46:10    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-11 00:46:10    expectingInput: true,
2025-08-11 00:46:10    missingFields: [ '課程日期' ]
2025-08-11 00:46:10  }
2025-08-11 00:46:10  {"ts":"2025-08-11T00:46:10.704Z","lvl":"info","stage":"task","traceId":"line_1754873168426_gtvbcr","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":141}
2025-08-11 00:46:10  🔍 檢查 replyToken: test-reply-token-1754873167990
2025-08-11 00:46:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:46:10  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-11 00:46:10  ✅ 最終 slots: {
2025-08-11 00:46:10    studentName: '小明',
2025-08-11 00:46:10    courseName: '晨練課',
2025-08-11 00:46:10    scheduleTime: '07:00',
2025-08-11 00:46:10    recurring: false
2025-08-11 00:46:10  }
2025-08-11 00:46:10  {"ts":"2025-08-11T00:46:10.563Z","lvl":"info","stage":"slots","traceId":"line_1754873168426_gtvbcr","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:10  🎯 執行任務: create_recurring_course
2025-08-11 00:46:10  🎯 開始處理新增課程任務
2025-08-11 00:46:10  📋 接收參數: {
2025-08-11 00:46:10    studentName: '小明',
2025-08-11 00:46:10    courseName: '晨練課',
2025-08-11 00:46:10    scheduleTime: '07:00',
2025-08-11 00:46:10    recurring: false
2025-08-11 00:46:10  }
2025-08-11 00:46:10  📊 任務執行結果: {
2025-08-11 00:46:10    success: false,
2025-08-11 00:46:10    code: 'MISSING_FIELDS',
2025-08-11 00:46:10    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-11 00:46:10    expectingInput: true,
2025-08-11 00:46:10    missingFields: [ '課程日期' ]
2025-08-11 00:46:10  }
2025-08-11 00:46:10  {"ts":"2025-08-11T00:46:10.704Z","lvl":"info","stage":"task","traceId":"line_1754873168426_gtvbcr","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":141}
2025-08-11 00:46:10  🔍 檢查 replyToken: test-reply-token-1754873167990
2025-08-11 00:46:10  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-11 00:46:10  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-11 00:46:10  
2025-08-11 00:46:10  範例：「小明每週三下午3點數學課」
2025-08-11 00:46:10  {"ts":"2025-08-11T00:46:10.987Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754873168426_gtvbcr","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-11 00:46:23  📨 收到 1 個事件
2025-08-11 00:46:23  📋 事件類型: message
2025-08-11 00:46:23  🔍 完整事件 JSON: {
2025-08-11 00:46:23    "type": "message",
2025-08-11 00:46:23    "message": {
2025-08-11 00:46:23      "type": "text",
2025-08-11 00:46:23      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-11 00:46:23    },
2025-08-11 00:46:23    "source": {
2025-08-11 00:46:23      "userId": "U_test_user_qa",
2025-08-11 00:46:23      "type": "user"
2025-08-11 00:46:23    },
2025-08-11 00:46:23    "replyToken": "test-reply-token-1754873183326",
2025-08-11 00:46:23    "timestamp": 1754873183326
2025-08-11 00:46:23  }
2025-08-11 00:46:23  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-11 00:46:23  {"ts":"2025-08-11T00:46:23.568Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-11 00:46:23  🔍 用戶ID類型: string
2025-08-11 00:46:23  🔍 是否測試用戶: true
2025-08-11 00:46:23  🚀 生產用戶，使用真實 LINE Service
2025-08-11 00:46:23  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-11 00:46:23  ✅ 規則匹配成功: create_recurring_course
2025-08-11 00:46:23  {"ts":"2025-08-11T00:46:23.710Z","lvl":"info","stage":"nlp","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-11 00:46:23  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-11 00:46:23  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-11 00:46:23  ✅ 時間解析成功: {
2025-08-11 00:46:23    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-11 00:46:23    output: '15:00',
2025-08-11 00:46:23    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-11 00:46:23  }
2025-08-11 00:46:23  🧠 使用對話上下文增強 slots 提取
2025-08-11 00:46:23  📊 規則提取置信度: 0.67
2025-08-11 00:46:23  🤖 啟用 AI 輔助提取...
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
2025-08-11 00:46:25  ✅ 最終 slots: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  {"ts":"2025-08-11T00:46:25.496Z","lvl":"info","stage":"slots","traceId":"line_1754873183568_vg9ooc","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-11 00:46:25  🎯 執行任務: create_recurring_course
2025-08-11 00:46:25  🎯 開始處理新增課程任務
2025-08-11 00:46:25  📋 接收參數: {
2025-08-11 00:46:25    studentName: 'Lumi',
2025-08-11 00:46:25    courseName: '鋼琴課',
2025-08-11 00:46:25    scheduleTime: '15:00',
2025-08-11 00:46:25    recurring: true
2025-08-11 00:46:25  }
2025-08-11 00:46:25  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-11 00:46:25  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-11 00:46:25      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-11 00:46:25      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-11 00:46:25      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-11 00:46:25      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-11 00:46:25      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-11 00:46:25      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-11 00:46:25      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-11 00:46:25      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-11 00:46:25      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-11 00:46:25      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-11 00:46:25    config: {
2025-08-11 00:46:25      url: URL {
2025-08-11 00:46:25        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        origin: 'https://www.googleapis.com',
2025-08-11 00:46:25        protocol: 'https:',
2025-08-11 00:46:25        username: '',
2025-08-11 00:46:25        password: '',
2025-08-11 00:46:25        host: 'www.googleapis.com',
2025-08-11 00:46:25        hostname: 'www.googleapis.com',
2025-08-11 00:46:25        port: '',
2025-08-11 00:46:25        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-11 00:46:25        search: '?timeMin=2025-08-12T00%3A00%3A00%2B08%3A00&timeMax=2025-08-12T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-11 00:46:25        searchParams: URLSearchParams {
2025-08-11 00:46:25          'timeMin' => '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25          'timeMax' => '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25          'singleEvents' => 'true',
2025-08-11 00:46:25          'orderBy' => 'startTime' },
2025-08-11 00:46:25        hash: ''
2025-08-11 00:46:25      },
2025-08-11 00:46:25      method: 'GET',
2025-08-11 00:46:25      apiVersion: '',
2025-08-11 00:46:25      userAgentDirectives: [ [Object] ],
2025-08-11 00:46:25      paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25      headers: Headers {
2025-08-11 00:46:25        'accept-encoding': 'gzip',
2025-08-11 00:46:25        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      params: {
2025-08-11 00:46:25        timeMin: '2025-08-12T00:00:00+08:00',
2025-08-11 00:46:25        timeMax: '2025-08-12T23:59:59+08:00',
2025-08-11 00:46:25        singleEvents: true,
2025-08-11 00:46:25        orderBy: 'startTime'
2025-08-11 00:46:25      },
2025-08-11 00:46:25      validateStatus: [Function (anonymous)],
2025-08-11 00:46:25      retry: true,
2025-08-11 00:46:25      responseType: 'unknown',
2025-08-11 00:46:25      errorRedactor: [Function: defaultErrorRedactor],
2025-08-11 00:46:25      retryConfig: {
2025-08-11 00:46:25        currentRetryAttempt: 0,
2025-08-11 00:46:25        retry: 3,
2025-08-11 00:46:25        httpMethodsToRetry: [Array],
2025-08-11 00:46:25        noResponseRetries: 2,
2025-08-11 00:46:25        retryDelayMultiplier: 2,
2025-08-11 00:46:25        timeOfFirstRequest: 1754873185982,
2025-08-11 00:46:25        totalTimeout: 9007199254740991,
2025-08-11 00:46:25        maxRetryDelay: 9007199254740991,
2025-08-11 00:46:25        statusCodesToRetry: [Array]
2025-08-11 00:46:25      }
2025-08-11 00:46:25    },
2025-08-11 00:46:25    response: Response {
2025-08-11 00:46:25      size: 0,
2025-08-11 00:46:25      data: { error: [Object] },
2025-08-11 00:46:25      config: {
2025-08-11 00:46:25        url: URL {},
2025-08-11 00:46:25        method: 'GET',
2025-08-11 00:46:25        apiVersion: '',
2025-08-11 00:46:25        userAgentDirectives: [Array],
2025-08-11 00:46:25        paramsSerializer: [Function (anonymous)],
2025-08-11 00:46:25        headers: Headers {
2025-08-11 00:46:25          'accept-encoding': 'gzip',
2025-08-11 00:46:25          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-11 00:46:25          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-11 00:46:25          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-11 00:46:25        },
2025-08-11 00:46:25        params: [Object],
2025-08-11 00:46:25        validateStatus: [Function (anonymous)],
2025-08-11 00:46:25        retry: true,
2025-08-11 00:46:25        responseType: 'unknown',
2025-08-11 00:46:25        errorRedactor: [Function: defaultErrorRedactor]
2025-08-11 00:46:25      },
2025-08-11 00:46:25      Symbol(Body internals): {
