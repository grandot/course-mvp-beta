2025-08-10 21:19:29  📨 收到 1 個事件
2025-08-10 21:19:29  📋 事件類型: message
2025-08-10 21:19:29  🔍 完整事件 JSON: {
2025-08-10 21:19:29    "type": "message",
2025-08-10 21:19:29    "message": {
2025-08-10 21:19:29      "type": "text",
2025-08-10 21:19:29      "text": "小明的晨練課每天幾點？"
2025-08-10 21:19:29    },
2025-08-10 21:19:29    "source": {
2025-08-10 21:19:29      "userId": "U_test_user_qa",
2025-08-10 21:19:29      "type": "user"
2025-08-10 21:19:29    },
2025-08-10 21:19:29    "replyToken": "test-reply-token-1754860769333",
2025-08-10 21:19:29    "timestamp": 1754860769333
2025-08-10 21:19:29  }
2025-08-10 21:19:29  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:19:29  {"ts":"2025-08-10T21:19:29.613Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860769612_3dvrhj","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 21:19:29  🔍 用戶ID類型: string
2025-08-10 21:19:29  🔍 是否測試用戶: true
2025-08-10 21:19:29  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:19:29  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 21:19:29  🤖 啟用 AI 備援識別...
2025-08-10 21:19:30  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 21:19:30  {"ts":"2025-08-10T21:19:30.427Z","lvl":"info","stage":"nlp","traceId":"line_1754860769612_3dvrhj","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 21:19:30  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 21:19:30  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:19:30  📊 規則提取置信度: 0.50
2025-08-10 21:19:30  🤖 啟用 AI 輔助提取...
2025-08-10 21:19:31  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 21:19:31  {"ts":"2025-08-10T21:19:31.930Z","lvl":"info","stage":"slots","traceId":"line_1754860769612_3dvrhj","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 21:19:31  🎯 執行任務: query_schedule
2025-08-10 21:19:31  🎯 開始處理查詢課表任務
2025-08-10 21:19:31  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 21:19:31  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 21:19:32  📚 查詢到 343 筆課程資料
2025-08-10 21:19:32  📚 查詢到 14 筆課程
2025-08-10 21:19:32  📊 任務執行結果: {
2025-08-10 21:19:32    success: true,
2025-08-10 21:19:32    code: 'QUERY_OK',
2025-08-10 21:19:32    message: '📅 小明本週的課程安排\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/9 (週六)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/10 (週日)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/11 (週一)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/12 (週二)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/13 (週三)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/14 (週四)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/15 (週五)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄',
2025-08-10 21:19:32    data: {
2025-08-10 21:19:32      courses: [
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object]
2025-08-10 21:19:32      ],
2025-08-10 21:19:32      courseCount: 14,
2025-08-10 21:19:32      dateRange: {
2025-08-10 21:19:32        startDate: '2025-08-10',
2025-08-10 21:19:32        endDate: '2025-08-16',
2025-08-10 21:19:32        description: '本週'
2025-08-10 21:19:32      }
2025-08-10 21:19:32    }
2025-08-10 21:19:32  }
2025-08-10 21:19:32  {"ts":"2025-08-10T21:19:32.262Z","lvl":"info","stage":"task","traceId":"line_1754860769612_3dvrhj","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":332}
2025-08-10 21:19:32  🔍 檢查 replyToken: test-reply-token-1754860769333
2025-08-10 21:19:32  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:19:32  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/9 (週六)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/10 (週日)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/11 (週一)
2025-08-10 21:19:32  📚 查詢到 343 筆課程資料
2025-08-10 21:19:32  📚 查詢到 14 筆課程
2025-08-10 21:19:32  📊 任務執行結果: {
2025-08-10 21:19:32    success: true,
2025-08-10 21:19:32    code: 'QUERY_OK',
2025-08-10 21:19:32    message: '📅 小明本週的課程安排\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/9 (週六)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/10 (週日)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/11 (週一)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/12 (週二)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/13 (週三)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/14 (週四)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '\n' +
2025-08-10 21:19:32      '📆 8/15 (週五)\n' +
2025-08-10 21:19:32      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 21:19:32      '  上午8:00 - 晨練課 🔄',
2025-08-10 21:19:32    data: {
2025-08-10 21:19:32      courses: [
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object],
2025-08-10 21:19:32        [Object], [Object]
2025-08-10 21:19:32      ],
2025-08-10 21:19:32      courseCount: 14,
2025-08-10 21:19:32      dateRange: {
2025-08-10 21:19:32        startDate: '2025-08-10',
2025-08-10 21:19:32        endDate: '2025-08-16',
2025-08-10 21:19:32        description: '本週'
2025-08-10 21:19:32      }
2025-08-10 21:19:32    }
2025-08-10 21:19:32  }
2025-08-10 21:19:32  {"ts":"2025-08-10T21:19:32.262Z","lvl":"info","stage":"task","traceId":"line_1754860769612_3dvrhj","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":332}
2025-08-10 21:19:32  🔍 檢查 replyToken: test-reply-token-1754860769333
2025-08-10 21:19:32  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:19:32  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/9 (週六)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/10 (週日)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/11 (週一)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/12 (週二)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/13 (週三)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/14 (週四)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  
2025-08-10 21:19:32  📆 8/15 (週五)
2025-08-10 21:19:32    上午7:00 - 晨練課 🔄
2025-08-10 21:19:32    上午8:00 - 晨練課 🔄
2025-08-10 21:19:32  {"ts":"2025-08-10T21:19:32.546Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860769612_3dvrhj","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 21:19:45  📨 收到 1 個事件
2025-08-10 21:19:45  📋 事件類型: message
2025-08-10 21:19:45  🔍 完整事件 JSON: {
2025-08-10 21:19:45    "type": "message",
2025-08-10 21:19:45    "message": {
2025-08-10 21:19:45      "type": "text",
2025-08-10 21:19:45      "text": "查詢Lumi的重複課程"
2025-08-10 21:19:45    },
2025-08-10 21:19:45    "source": {
2025-08-10 21:19:45      "userId": "U_test_user_qa",
2025-08-10 21:19:45      "type": "user"
2025-08-10 21:19:45    },
2025-08-10 21:19:45    "replyToken": "test-reply-token-1754860785151",
2025-08-10 21:19:45    "timestamp": 1754860785151
2025-08-10 21:19:45  }
2025-08-10 21:19:45  📨 收到 1 個事件
2025-08-10 21:19:45  📋 事件類型: message
2025-08-10 21:19:45  🔍 完整事件 JSON: {
2025-08-10 21:19:45    "type": "message",
2025-08-10 21:19:45    "message": {
2025-08-10 21:19:45      "type": "text",
2025-08-10 21:19:45      "text": "查詢Lumi的重複課程"
2025-08-10 21:19:45    },
2025-08-10 21:19:45    "source": {
2025-08-10 21:19:45      "userId": "U_test_user_qa",
2025-08-10 21:19:45      "type": "user"
2025-08-10 21:19:45    },
2025-08-10 21:19:45    "replyToken": "test-reply-token-1754860785151",
2025-08-10 21:19:45    "timestamp": 1754860785151
2025-08-10 21:19:45  }
2025-08-10 21:19:45  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:19:45  {"ts":"2025-08-10T21:19:45.427Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860785427_0arkiq","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 21:19:45  🔍 用戶ID類型: string
2025-08-10 21:19:45  🔍 是否測試用戶: true
2025-08-10 21:19:45  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:19:45  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 21:19:45  ✅ 規則匹配成功: query_schedule
2025-08-10 21:19:45  {"ts":"2025-08-10T21:19:45.571Z","lvl":"info","stage":"nlp","traceId":"line_1754860785427_0arkiq","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 21:19:45  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 21:19:45  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:19:45  📊 規則提取置信度: 0.50
2025-08-10 21:19:45  🤖 啟用 AI 輔助提取...
2025-08-10 21:19:46  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 21:19:46  {"ts":"2025-08-10T21:19:46.928Z","lvl":"info","stage":"slots","traceId":"line_1754860785427_0arkiq","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 21:19:46  🎯 執行任務: query_schedule
2025-08-10 21:19:46  🎯 開始處理查詢課表任務
2025-08-10 21:19:46  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 21:19:46  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 21:19:47  📚 查詢到 336 筆課程資料
2025-08-10 21:19:47  📚 查詢到 0 筆課程
2025-08-10 21:19:47  📊 任務執行結果: {
2025-08-10 21:19:47    success: true,
2025-08-10 21:19:47    code: 'QUERY_OK_EMPTY',
2025-08-10 21:19:47    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 21:19:47      '\n' +
2025-08-10 21:19:47      '💡 您可以：\n' +
2025-08-10 21:19:47      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 21:19:47      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 21:19:47      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 21:19:47    data: {
2025-08-10 21:19:47      courseCount: 0,
2025-08-10 21:19:47      dateRange: {
2025-08-10 21:19:47        startDate: '2025-08-10',
2025-08-10 21:19:47        endDate: '2025-08-16',
2025-08-10 21:19:47        description: '本週'
2025-08-10 21:19:47      }
2025-08-10 21:19:47    }
2025-08-10 21:19:47  }
2025-08-10 21:19:47  {"ts":"2025-08-10T21:19:47.461Z","lvl":"info","stage":"task","traceId":"line_1754860785427_0arkiq","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":533}
2025-08-10 21:19:47  🔍 檢查 replyToken: test-reply-token-1754860785151
2025-08-10 21:19:47  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:19:47  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 21:19:47  
2025-08-10 21:19:47  💡 您可以：
2025-08-10 21:19:47  • 新增課程：「小明明天上午10點英文課」
2025-08-10 21:19:47  • 查詢其他時間：「小明下週的課表」
2025-08-10 21:19:47  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 21:19:47  {"ts":"2025-08-10T21:19:47.745Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860785427_0arkiq","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 21:20:00  📨 收到 1 個事件
2025-08-10 21:20:00  📋 事件類型: message
2025-08-10 21:20:00  🔍 完整事件 JSON: {
2025-08-10 21:20:00    "type": "message",
2025-08-10 21:20:00    "message": {
2025-08-10 21:20:00      "type": "text",
2025-08-10 21:20:00      "text": "今天小明的數學課學了分數加減法"
2025-08-10 21:20:00    },
2025-08-10 21:20:00    "source": {
2025-08-10 21:20:00      "userId": "U_test_user_qa",
2025-08-10 21:20:00      "type": "user"
2025-08-10 21:20:00    },
2025-08-10 21:20:00    "replyToken": "test-reply-token-1754860800214",
2025-08-10 21:20:00    "timestamp": 1754860800214
2025-08-10 21:20:00  }
2025-08-10 21:20:00  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:20:00  {"ts":"2025-08-10T21:20:00.387Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860800387_8njcyk","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 21:20:00  🔍 用戶ID類型: string
2025-08-10 21:20:00  🔍 是否測試用戶: true
2025-08-10 21:20:00  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:20:00  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 21:20:00  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:20:00  {"ts":"2025-08-10T21:20:00.530Z","lvl":"info","stage":"nlp","traceId":"line_1754860800387_8njcyk","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:20:00  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:20:00  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:20:00  📊 規則提取置信度: 1.00
2025-08-10 21:20:00  🤖 啟用 AI 輔助提取...
2025-08-10 21:20:02  ✅ 最終 slots: {
2025-08-10 21:20:02    studentName: '小明',
2025-08-10 21:20:02    courseName: '數學課',
2025-08-10 21:20:02    timeReference: 'today',
2025-08-10 21:20:02    content: '分數加減法'
2025-08-10 21:20:02  }
2025-08-10 21:20:02  {"ts":"2025-08-10T21:20:02.190Z","lvl":"info","stage":"slots","traceId":"line_1754860800387_8njcyk","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:20:02  🎯 執行任務: record_content
2025-08-10 21:20:02  📝 開始處理記錄課程內容任務: {
2025-08-10 21:20:02    studentName: '小明',
2025-08-10 21:20:02  ✅ 最終 slots: {
2025-08-10 21:20:02    studentName: '小明',
2025-08-10 21:20:02    courseName: '數學課',
2025-08-10 21:20:02    timeReference: 'today',
2025-08-10 21:20:02    content: '分數加減法'
2025-08-10 21:20:02  }
2025-08-10 21:20:02  {"ts":"2025-08-10T21:20:02.190Z","lvl":"info","stage":"slots","traceId":"line_1754860800387_8njcyk","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:20:02  🎯 執行任務: record_content
2025-08-10 21:20:02  📝 開始處理記錄課程內容任務: {
2025-08-10 21:20:02    studentName: '小明',
2025-08-10 21:20:02    courseName: '數學課',
2025-08-10 21:20:02    timeReference: 'today',
2025-08-10 21:20:02    content: '分數加減法'
2025-08-10 21:20:02  }
2025-08-10 21:20:02  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 21:20:02  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 21:20:02  ✅ 文檔已添加到 course_contents: 29luNyvwqlt3xUDqwqEA
2025-08-10 21:20:02  ✅ 課程內容記錄已儲存: 29luNyvwqlt3xUDqwqEA
2025-08-10 21:20:02  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 21:20:02  📊 任務執行結果: {
2025-08-10 21:20:02    success: true,
2025-08-10 21:20:02    code: 'RECORD_CONTENT_OK',
2025-08-10 21:20:02    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 21:20:02    data: {
2025-08-10 21:20:02      recordId: '29luNyvwqlt3xUDqwqEA',
2025-08-10 21:20:02      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 21:20:02      targetDate: '2025-08-10'
2025-08-10 21:20:02    }
2025-08-10 21:20:02  }
2025-08-10 21:20:02  {"ts":"2025-08-10T21:20:02.703Z","lvl":"info","stage":"task","traceId":"line_1754860800387_8njcyk","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":513}
2025-08-10 21:20:02  🔍 檢查 replyToken: test-reply-token-1754860800214
2025-08-10 21:20:02  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:20:02  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:20:02  📚 課程：小明 - 數學課
2025-08-10 21:20:02  📅 日期：2025-08-10
2025-08-10 21:20:02  💬 內容：分數加減法
2025-08-10 21:20:02  {"ts":"2025-08-10T21:20:02.988Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860800387_8njcyk","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 21:20:15  📨 收到 1 個事件
2025-08-10 21:20:15  📋 事件類型: message
2025-08-10 21:20:15  🔍 完整事件 JSON: {
2025-08-10 21:20:15    "type": "message",
2025-08-10 21:20:15    "message": {
2025-08-10 21:20:15      "type": "text",
2025-08-10 21:20:15      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 21:20:15    },
2025-08-10 21:20:15    "source": {
2025-08-10 21:20:15      "userId": "U_test_user_qa",
2025-08-10 21:20:15      "type": "user"
2025-08-10 21:20:15    },
2025-08-10 21:20:15    "replyToken": "test-reply-token-1754860815585",
2025-08-10 21:20:15    "timestamp": 1754860815585
2025-08-10 21:20:15  }
2025-08-10 21:20:15  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:20:15  {"ts":"2025-08-10T21:20:15.862Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860815862_8ayklb","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 21:20:15  🔍 用戶ID類型: string
2025-08-10 21:20:15  🔍 是否測試用戶: true
2025-08-10 21:20:15  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:20:15  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 21:20:16  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:20:16  {"ts":"2025-08-10T21:20:16.004Z","lvl":"info","stage":"nlp","traceId":"line_1754860815862_8ayklb","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:20:16  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:20:16  📊 規則提取置信度: 0.33
2025-08-10 21:20:16  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 21:20:17  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 21:20:17  {"ts":"2025-08-10T21:20:17.525Z","lvl":"info","stage":"slots","traceId":"line_1754860815862_8ayklb","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 21:20:17  🎯 執行任務: record_content
2025-08-10 21:20:17  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 21:20:17  ✅ 文檔已添加到 course_contents: 9cyQf3UxEijftyCzyydJ
2025-08-10 21:20:17  ✅ 課程內容記錄已儲存: 9cyQf3UxEijftyCzyydJ
2025-08-10 21:20:17  📊 任務執行結果: {
2025-08-10 21:20:17    success: true,
2025-08-10 21:20:17    code: 'RECORD_CONTENT_OK',
2025-08-10 21:20:17    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 21:20:17    data: {
2025-08-10 21:20:17      recordId: '9cyQf3UxEijftyCzyydJ',
2025-08-10 21:20:17      courseId: null,
2025-08-10 21:20:17      targetDate: '2025-08-09'
2025-08-10 21:20:17    }
2025-08-10 21:20:17  }
2025-08-10 21:20:17  {"ts":"2025-08-10T21:20:17.609Z","lvl":"info","stage":"task","traceId":"line_1754860815862_8ayklb","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":84}
2025-08-10 21:20:17  🔍 檢查 replyToken: test-reply-token-1754860815585
2025-08-10 21:20:17  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:20:17  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:20:17  📝 記錄為獨立內容
2025-08-10 21:20:17  📚 課程：鋼琴課
2025-08-10 21:20:17  📅 日期：2025-08-09
2025-08-10 21:20:17  💬 內容：練習了小星星
2025-08-10 21:20:17  {"ts":"2025-08-10T21:20:17.894Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860815862_8ayklb","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 21:20:30  📨 收到 1 個事件
2025-08-10 21:20:30  📋 事件類型: message
2025-08-10 21:20:30  🔍 完整事件 JSON: {
2025-08-10 21:20:30    "type": "message",
2025-08-10 21:20:30    "message": {
2025-08-10 21:20:30      "type": "text",
2025-08-10 21:20:30      "text": "小明昨天數學課學了什麼？"
2025-08-10 21:20:30    },
2025-08-10 21:20:30    "source": {
2025-08-10 21:20:30      "userId": "U_test_user_qa",
2025-08-10 21:20:30      "type": "user"
2025-08-10 21:20:30    },
2025-08-10 21:20:30  📨 收到 1 個事件
2025-08-10 21:20:30  📋 事件類型: message
2025-08-10 21:20:30  🔍 完整事件 JSON: {
2025-08-10 21:20:30    "type": "message",
2025-08-10 21:20:30    "message": {
2025-08-10 21:20:30      "type": "text",
2025-08-10 21:20:30      "text": "小明昨天數學課學了什麼？"
2025-08-10 21:20:30    },
2025-08-10 21:20:30    "source": {
2025-08-10 21:20:30      "userId": "U_test_user_qa",
2025-08-10 21:20:30      "type": "user"
2025-08-10 21:20:30    },
2025-08-10 21:20:30    "replyToken": "test-reply-token-1754860830309",
2025-08-10 21:20:30    "timestamp": 1754860830309
2025-08-10 21:20:30  }
2025-08-10 21:20:30  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:20:30  {"ts":"2025-08-10T21:20:30.489Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860830489_8kh9ft","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 21:20:30  🔍 用戶ID類型: string
2025-08-10 21:20:30  🔍 是否測試用戶: true
2025-08-10 21:20:30  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:20:30  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 21:20:30  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:20:30  {"ts":"2025-08-10T21:20:30.631Z","lvl":"info","stage":"nlp","traceId":"line_1754860830489_8kh9ft","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:20:30  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:20:30  📊 規則提取置信度: 0.67
2025-08-10 21:20:30  🤖 啟用 AI 輔助提取...
2025-08-10 21:20:32  ✅ 最終 slots: {
2025-08-10 21:20:32    studentName: '小明',
2025-08-10 21:20:32    courseName: '數學課',
2025-08-10 21:20:32    timeReference: 'yesterday',
2025-08-10 21:20:32    content: '什麼？'
2025-08-10 21:20:32  }
2025-08-10 21:20:32  {"ts":"2025-08-10T21:20:32.829Z","lvl":"info","stage":"slots","traceId":"line_1754860830489_8kh9ft","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:20:32  🎯 執行任務: record_content
2025-08-10 21:20:32  📝 開始處理記錄課程內容任務: {
2025-08-10 21:20:32    studentName: '小明',
2025-08-10 21:20:32    courseName: '數學課',
2025-08-10 21:20:32    timeReference: 'yesterday',
2025-08-10 21:20:32    content: '什麼？'
2025-08-10 21:20:32  }
2025-08-10 21:20:32  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 21:20:33  ❓ 未找到完全匹配的課程
2025-08-10 21:20:33  ✅ 文檔已添加到 course_contents: zp3CmENcisQC5yqCGvGx
2025-08-10 21:20:33  ✅ 課程內容記錄已儲存: zp3CmENcisQC5yqCGvGx
2025-08-10 21:20:33  📊 任務執行結果: {
2025-08-10 21:20:33    success: true,
2025-08-10 21:20:33    code: 'RECORD_CONTENT_OK',
2025-08-10 21:20:33    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 21:20:33    data: {
2025-08-10 21:20:33      recordId: 'zp3CmENcisQC5yqCGvGx',
2025-08-10 21:20:33      courseId: null,
2025-08-10 21:20:33      targetDate: '2025-08-09'
2025-08-10 21:20:33    }
2025-08-10 21:20:33  }
2025-08-10 21:20:33  {"ts":"2025-08-10T21:20:33.072Z","lvl":"info","stage":"task","traceId":"line_1754860830489_8kh9ft","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":243}
2025-08-10 21:20:33  🔍 檢查 replyToken: test-reply-token-1754860830309
2025-08-10 21:20:33  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:20:33  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:20:33  📝 記錄為獨立內容
2025-08-10 21:20:33  👨‍🎓 學生：小明
2025-08-10 21:20:33  📚 課程：數學課
2025-08-10 21:20:33  📅 日期：2025-08-09
2025-08-10 21:20:33  💬 內容：什麼？
2025-08-10 21:20:33  {"ts":"2025-08-10T21:20:33.356Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860830489_8kh9ft","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 21:20:40  📨 收到 1 個事件
2025-08-10 21:20:40  📋 事件類型: message
2025-08-10 21:20:40  🔍 完整事件 JSON: {
2025-08-10 21:20:40    "type": "message",
2025-08-10 21:20:40    "message": {
2025-08-10 21:20:40      "type": "text",
2025-08-10 21:20:40      "text": "記錄小明今天化學課的內容"
2025-08-10 21:20:40    },
2025-08-10 21:20:40    "source": {
2025-08-10 21:20:40      "userId": "U_test_user_qa",
2025-08-10 21:20:40      "type": "user"
2025-08-10 21:20:40    },
2025-08-10 21:20:40    "replyToken": "test-reply-token-1754860840353",
2025-08-10 21:20:40    "timestamp": 1754860840353
2025-08-10 21:20:40  }
2025-08-10 21:20:40  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:20:40  {"ts":"2025-08-10T21:20:40.516Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860840516_d1ymtu","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 21:20:40  🔍 用戶ID類型: string
2025-08-10 21:20:40  🔍 是否測試用戶: true
2025-08-10 21:20:40  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:20:40  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 21:20:40  📝 內容記錄優先規則命中 → record_content
2025-08-10 21:20:40  {"ts":"2025-08-10T21:20:40.659Z","lvl":"info","stage":"nlp","traceId":"line_1754860840516_d1ymtu","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 21:20:40  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 21:20:40  📊 規則提取置信度: 0.67
2025-08-10 21:20:40  🤖 啟用 AI 輔助提取...
2025-08-10 21:20:41  ✅ 最終 slots: {
2025-08-10 21:20:41    studentName: '小明',
2025-08-10 21:20:41    courseName: '化學課',
2025-08-10 21:20:41    timeReference: 'today',
2025-08-10 21:20:41    content: '小明今天化學課的內容'
2025-08-10 21:20:41  }
2025-08-10 21:20:41  {"ts":"2025-08-10T21:20:41.893Z","lvl":"info","stage":"slots","traceId":"line_1754860840516_d1ymtu","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:20:41  🎯 執行任務: record_content
2025-08-10 21:20:41  📝 開始處理記錄課程內容任務: {
2025-08-10 21:20:41    studentName: '小明',
2025-08-10 21:20:41  ✅ 最終 slots: {
2025-08-10 21:20:41    studentName: '小明',
2025-08-10 21:20:41    courseName: '化學課',
2025-08-10 21:20:41    timeReference: 'today',
2025-08-10 21:20:41    content: '小明今天化學課的內容'
2025-08-10 21:20:41  }
2025-08-10 21:20:41  {"ts":"2025-08-10T21:20:41.893Z","lvl":"info","stage":"slots","traceId":"line_1754860840516_d1ymtu","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 21:20:41  🎯 執行任務: record_content
2025-08-10 21:20:41  📝 開始處理記錄課程內容任務: {
2025-08-10 21:20:41    studentName: '小明',
2025-08-10 21:20:41    courseName: '化學課',
2025-08-10 21:20:41    timeReference: 'today',
2025-08-10 21:20:41    content: '小明今天化學課的內容'
2025-08-10 21:20:41  }
2025-08-10 21:20:41  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 21:20:42  ❓ 未找到完全匹配的課程
2025-08-10 21:20:42  ✅ 文檔已添加到 course_contents: AoLN5d2NjrnXJk1foqav
2025-08-10 21:20:42  ✅ 課程內容記錄已儲存: AoLN5d2NjrnXJk1foqav
2025-08-10 21:20:42  📊 任務執行結果: {
2025-08-10 21:20:42    success: true,
2025-08-10 21:20:42    code: 'RECORD_CONTENT_OK',
2025-08-10 21:20:42    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 21:20:42      '📝 記錄為獨立內容\n' +
2025-08-10 21:20:42      '👨‍🎓 學生：小明\n' +
2025-08-10 21:20:42      '📚 課程：化學課\n' +
2025-08-10 21:20:42      '📅 日期：2025-08-10\n' +
2025-08-10 21:20:42      '💬 內容：小明今天化學課的內容',
2025-08-10 21:20:42    data: {
2025-08-10 21:20:42      recordId: 'AoLN5d2NjrnXJk1foqav',
2025-08-10 21:20:42      courseId: null,
2025-08-10 21:20:42      targetDate: '2025-08-10'
2025-08-10 21:20:42    }
2025-08-10 21:20:42  }
2025-08-10 21:20:42  {"ts":"2025-08-10T21:20:42.107Z","lvl":"info","stage":"task","traceId":"line_1754860840516_d1ymtu","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":214}
2025-08-10 21:20:42  🔍 檢查 replyToken: test-reply-token-1754860840353
2025-08-10 21:20:42  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:20:42  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 21:20:42  📝 記錄為獨立內容
2025-08-10 21:20:42  👨‍🎓 學生：小明
2025-08-10 21:20:42  📚 課程：化學課
2025-08-10 21:20:42  📅 日期：2025-08-10
2025-08-10 21:20:42  💬 內容：小明今天化學課的內容
2025-08-10 21:20:42  {"ts":"2025-08-10T21:20:42.391Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860840516_d1ymtu","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 21:20:54  📨 收到 1 個事件
2025-08-10 21:20:54  📋 事件類型: message
2025-08-10 21:20:54  🔍 完整事件 JSON: {
2025-08-10 21:20:54    "type": "message",
2025-08-10 21:20:54    "message": {
2025-08-10 21:20:54      "type": "text",
2025-08-10 21:20:54      "text": "提醒我小明的數學課"
2025-08-10 21:20:54    },
2025-08-10 21:20:54    "source": {
2025-08-10 21:20:54      "userId": "U_test_user_qa",
2025-08-10 21:20:54      "type": "user"
2025-08-10 21:20:54    },
2025-08-10 21:20:54    "replyToken": "test-reply-token-1754860854718",
2025-08-10 21:20:54    "timestamp": 1754860854718
2025-08-10 21:20:54  }
2025-08-10 21:20:54  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:20:54  {"ts":"2025-08-10T21:20:54.887Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860854887_pkvjgu","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 21:20:54  🔍 用戶ID類型: string
2025-08-10 21:20:54  🔍 是否測試用戶: true
2025-08-10 21:20:54  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:20:54  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 21:20:55  ✅ 規則匹配成功: set_reminder
2025-08-10 21:20:55  {"ts":"2025-08-10T21:20:55.029Z","lvl":"info","stage":"nlp","traceId":"line_1754860854887_pkvjgu","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 21:20:55  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 21:20:55  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:20:55  📊 規則提取置信度: 0.67
2025-08-10 21:20:55  🤖 啟用 AI 輔助提取...
2025-08-10 21:20:56  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 21:20:56  {"ts":"2025-08-10T21:20:56.246Z","lvl":"info","stage":"slots","traceId":"line_1754860854887_pkvjgu","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 21:20:56  🎯 執行任務: set_reminder
2025-08-10 21:20:56  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 21:20:56  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 21:20:56  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 21:20:56  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 21:20:56  ✅ 提醒記錄已創建: 5XVYnDTRvlH4xaEaTHaB
2025-08-10 21:20:56  ✅ 提醒設定成功: 5XVYnDTRvlH4xaEaTHaB
2025-08-10 21:20:56  📊 任務執行結果: {
2025-08-10 21:20:56    success: true,
2025-08-10 21:20:56    code: 'REMINDER_SET_OK',
2025-08-10 21:20:56    message: '✅ 提醒設定完成！\n' +
2025-08-10 21:20:56      '📚 課程：小明 的 數學課\n' +
2025-08-10 21:20:56      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 21:20:56      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 21:20:56  }
2025-08-10 21:20:56  {"ts":"2025-08-10T21:20:56.514Z","lvl":"info","stage":"task","traceId":"line_1754860854887_pkvjgu","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":268}
2025-08-10 21:20:56  🔍 檢查 replyToken: test-reply-token-1754860854718
2025-08-10 21:20:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:20:56  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 21:20:56  📚 課程：小明 的 數學課
2025-08-10 21:20:56  📅 上課時間：8/11 下午02:00
2025-08-10 21:20:56  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 21:20:56  {"ts":"2025-08-10T21:20:56.799Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860854887_pkvjgu","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 21:21:09  📨 收到 1 個事件
2025-08-10 21:21:09  📋 事件類型: message
2025-08-10 21:21:09  🔍 完整事件 JSON: {
2025-08-10 21:21:09    "type": "message",
2025-08-10 21:21:09    "message": {
2025-08-10 21:21:09  📨 收到 1 個事件
2025-08-10 21:21:09  📋 事件類型: message
2025-08-10 21:21:09  🔍 完整事件 JSON: {
2025-08-10 21:21:09    "type": "message",
2025-08-10 21:21:09    "message": {
2025-08-10 21:21:09      "type": "text",
2025-08-10 21:21:09      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 21:21:09    },
2025-08-10 21:21:09    "source": {
2025-08-10 21:21:09      "userId": "U_test_user_qa",
2025-08-10 21:21:09      "type": "user"
2025-08-10 21:21:09    },
2025-08-10 21:21:09    "replyToken": "test-reply-token-1754860869521",
2025-08-10 21:21:09    "timestamp": 1754860869521
2025-08-10 21:21:09  }
2025-08-10 21:21:09  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:21:09  {"ts":"2025-08-10T21:21:09.704Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860869704_xca57f","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 21:21:09  🔍 用戶ID類型: string
2025-08-10 21:21:09  🔍 是否測試用戶: true
2025-08-10 21:21:09  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:21:09  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 21:21:09  ✅ 規則匹配成功: set_reminder
2025-08-10 21:21:09  {"ts":"2025-08-10T21:21:09.846Z","lvl":"info","stage":"nlp","traceId":"line_1754860869704_xca57f","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 21:21:09  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 21:21:10  📊 規則提取置信度: 0.67
2025-08-10 21:21:10  🤖 啟用 AI 輔助提取...
2025-08-10 21:21:11  ✅ 最終 slots: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 21:21:11  {"ts":"2025-08-10T21:21:11.868Z","lvl":"info","stage":"slots","traceId":"line_1754860869704_xca57f","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","reminderTime","reminderNote"]}
2025-08-10 21:21:11  🎯 執行任務: set_reminder
2025-08-10 21:21:11  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 21:21:11  📊 任務執行結果: {
2025-08-10 21:21:11    success: false,
2025-08-10 21:21:11    code: 'MISSING_STUDENT',
2025-08-10 21:21:11    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 21:21:11  }
2025-08-10 21:21:11  {"ts":"2025-08-10T21:21:11.868Z","lvl":"info","stage":"task","traceId":"line_1754860869704_xca57f","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 21:21:12  🔍 檢查 replyToken: test-reply-token-1754860869521
2025-08-10 21:21:12  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:21:12  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 21:21:12  {"ts":"2025-08-10T21:21:12.154Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860869704_xca57f","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 21:21:24  📨 收到 1 個事件
2025-08-10 21:21:24  📋 事件類型: message
2025-08-10 21:21:24  🔍 完整事件 JSON: {
2025-08-10 21:21:24    "type": "message",
2025-08-10 21:21:24    "message": {
2025-08-10 21:21:24      "type": "text",
2025-08-10 21:21:24      "text": "提醒我小明的物理課"
2025-08-10 21:21:24    },
2025-08-10 21:21:24    "source": {
2025-08-10 21:21:24      "userId": "U_test_user_qa",
2025-08-10 21:21:24      "type": "user"
2025-08-10 21:21:24    },
2025-08-10 21:21:24    "replyToken": "test-reply-token-1754860884756",
2025-08-10 21:21:24    "timestamp": 1754860884756
2025-08-10 21:21:24  }
2025-08-10 21:21:24  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:21:24  {"ts":"2025-08-10T21:21:24.926Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860884926_hrtn6u","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 21:21:24  🔍 用戶ID類型: string
2025-08-10 21:21:24  🔍 是否測試用戶: true
2025-08-10 21:21:24  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:21:24  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 21:21:25  ✅ 規則匹配成功: set_reminder
2025-08-10 21:21:25  {"ts":"2025-08-10T21:21:25.067Z","lvl":"info","stage":"nlp","traceId":"line_1754860884926_hrtn6u","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 21:21:25  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 21:21:25  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:21:25  📊 規則提取置信度: 0.67
2025-08-10 21:21:25  🤖 啟用 AI 輔助提取...
2025-08-10 21:21:26  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 21:21:26  {"ts":"2025-08-10T21:21:26.295Z","lvl":"info","stage":"slots","traceId":"line_1754860884926_hrtn6u","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 21:21:26  🎯 執行任務: set_reminder
2025-08-10 21:21:26  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 21:21:26  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 21:21:26  📊 任務執行結果: {
2025-08-10 21:21:26    success: false,
2025-08-10 21:21:26    code: 'NOT_FOUND',
2025-08-10 21:21:26    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 21:21:26  }
2025-08-10 21:21:26  {"ts":"2025-08-10T21:21:26.362Z","lvl":"info","stage":"task","traceId":"line_1754860884926_hrtn6u","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":67}
2025-08-10 21:21:26  🔍 檢查 replyToken: test-reply-token-1754860884756
2025-08-10 21:21:26  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:21:26  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 21:21:26  {"ts":"2025-08-10T21:21:26.646Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860884926_hrtn6u","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 21:21:41  📨 收到 1 個事件
2025-08-10 21:21:41  📋 事件類型: message
2025-08-10 21:21:41  🔍 完整事件 JSON: {
2025-08-10 21:21:41    "type": "message",
2025-08-10 21:21:41    "message": {
2025-08-10 21:21:41      "type": "text",
2025-08-10 21:21:41      "text": "小明的數學課改到下午4點"
2025-08-10 21:21:41    },
2025-08-10 21:21:41    "source": {
2025-08-10 21:21:41      "userId": "U_test_user_qa",
2025-08-10 21:21:41      "type": "user"
2025-08-10 21:21:41    },
2025-08-10 21:21:41    "replyToken": "test-reply-token-1754860901654",
2025-08-10 21:21:41    "timestamp": 1754860901654
2025-08-10 21:21:41  }
2025-08-10 21:21:41  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:21:41  {"ts":"2025-08-10T21:21:41.954Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860901954_z750aj","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 21:21:41  🔍 用戶ID類型: string
2025-08-10 21:21:41  📨 收到 1 個事件
2025-08-10 21:21:41  📋 事件類型: message
2025-08-10 21:21:41  🔍 完整事件 JSON: {
2025-08-10 21:21:41    "type": "message",
2025-08-10 21:21:41    "message": {
2025-08-10 21:21:41      "type": "text",
2025-08-10 21:21:41      "text": "小明的數學課改到下午4點"
2025-08-10 21:21:41    },
2025-08-10 21:21:41    "source": {
2025-08-10 21:21:41      "userId": "U_test_user_qa",
2025-08-10 21:21:41      "type": "user"
2025-08-10 21:21:41    },
2025-08-10 21:21:41    "replyToken": "test-reply-token-1754860901654",
2025-08-10 21:21:41    "timestamp": 1754860901654
2025-08-10 21:21:41  }
2025-08-10 21:21:41  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:21:41  {"ts":"2025-08-10T21:21:41.954Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860901954_z750aj","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 21:21:41  🔍 用戶ID類型: string
2025-08-10 21:21:41  🔍 是否測試用戶: true
2025-08-10 21:21:41  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:21:41  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 21:21:42  ✅ 規則匹配成功: modify_course
2025-08-10 21:21:42  {"ts":"2025-08-10T21:21:42.096Z","lvl":"info","stage":"nlp","traceId":"line_1754860901954_z750aj","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 21:21:42  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 21:21:42  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 21:21:42  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:21:42  📊 規則提取置信度: 0.00
2025-08-10 21:21:42  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 21:21:43  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 21:21:43  {"ts":"2025-08-10T21:21:43.368Z","lvl":"info","stage":"slots","traceId":"line_1754860901954_z750aj","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 21:21:43  🎯 執行任務: modify_course
2025-08-10 21:21:43  ✏️ 執行修改操作任務: {
2025-08-10 21:21:43    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 21:21:43    userId: 'U_test_user_qa'
2025-08-10 21:21:43  }
2025-08-10 21:21:43  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 21:21:43  {"ts":"2025-08-10T21:21:43.439Z","lvl":"info","stage":"task","traceId":"line_1754860901954_z750aj","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 21:21:43  🔍 檢查 replyToken: test-reply-token-1754860901654
2025-08-10 21:21:43  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:21:43  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 21:21:43  {"ts":"2025-08-10T21:21:43.722Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860901954_z750aj","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 21:21:56  📨 收到 1 個事件
2025-08-10 21:21:56  📋 事件類型: message
2025-08-10 21:21:56  🔍 完整事件 JSON: {
2025-08-10 21:21:56    "type": "message",
2025-08-10 21:21:56    "message": {
2025-08-10 21:21:56      "type": "text",
2025-08-10 21:21:56      "text": "小明每天的晨練課改到早上7點"
2025-08-10 21:21:56    },
2025-08-10 21:21:56    "source": {
2025-08-10 21:21:56      "userId": "U_test_user_qa",
2025-08-10 21:21:56      "type": "user"
2025-08-10 21:21:56    },
2025-08-10 21:21:56    "replyToken": "test-reply-token-1754860916269",
2025-08-10 21:21:56    "timestamp": 1754860916269
2025-08-10 21:21:56  }
2025-08-10 21:21:56  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:21:56  {"ts":"2025-08-10T21:21:56.511Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860916511_73mz5b","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 21:21:56  🔍 用戶ID類型: string
2025-08-10 21:21:56  🔍 是否測試用戶: true
2025-08-10 21:21:56  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:21:56  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 21:21:56  ✅ 規則匹配成功: create_recurring_course
2025-08-10 21:21:56  {"ts":"2025-08-10T21:21:56.652Z","lvl":"info","stage":"nlp","traceId":"line_1754860916511_73mz5b","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 21:21:56  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 21:21:56  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 21:21:56  ✅ 時間解析成功: {
2025-08-10 21:21:56    input: '小明每天的晨練課改到早上7點',
2025-08-10 21:21:56    output: '07:00',
2025-08-10 21:21:56    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 21:21:56  }
2025-08-10 21:21:56  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:21:56  📊 規則提取置信度: 0.67
2025-08-10 21:21:56  🤖 啟用 AI 輔助提取...
2025-08-10 21:21:58  ✅ 最終 slots: {
2025-08-10 21:21:58    studentName: '小明',
2025-08-10 21:21:58    courseName: '晨練課',
2025-08-10 21:21:58    scheduleTime: '07:00',
2025-08-10 21:21:58    recurring: false
2025-08-10 21:21:58  }
2025-08-10 21:21:58  {"ts":"2025-08-10T21:21:58.381Z","lvl":"info","stage":"slots","traceId":"line_1754860916511_73mz5b","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:21:58  🎯 執行任務: create_recurring_course
2025-08-10 21:21:58  🎯 開始處理新增課程任務
2025-08-10 21:21:58  📋 接收參數: {
2025-08-10 21:21:58    studentName: '小明',
2025-08-10 21:21:58    courseName: '晨練課',
2025-08-10 21:21:58    scheduleTime: '07:00',
2025-08-10 21:21:58    recurring: false
2025-08-10 21:21:58  }
2025-08-10 21:21:58  📊 任務執行結果: {
2025-08-10 21:21:58    success: false,
2025-08-10 21:21:58    code: 'MISSING_FIELDS',
2025-08-10 21:21:58    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 21:21:58    expectingInput: true,
2025-08-10 21:21:58    missingFields: [ '課程日期' ]
2025-08-10 21:21:58  }
2025-08-10 21:21:58  {"ts":"2025-08-10T21:21:58.523Z","lvl":"info","stage":"task","traceId":"line_1754860916511_73mz5b","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 21:21:58  🔍 檢查 replyToken: test-reply-token-1754860916269
2025-08-10 21:21:58  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:21:58  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 21:21:58  ✅ 最終 slots: {
2025-08-10 21:21:58    studentName: '小明',
2025-08-10 21:21:58    courseName: '晨練課',
2025-08-10 21:21:58    scheduleTime: '07:00',
2025-08-10 21:21:58    recurring: false
2025-08-10 21:21:58  }
2025-08-10 21:21:58  {"ts":"2025-08-10T21:21:58.381Z","lvl":"info","stage":"slots","traceId":"line_1754860916511_73mz5b","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:21:58  🎯 執行任務: create_recurring_course
2025-08-10 21:21:58  🎯 開始處理新增課程任務
2025-08-10 21:21:58  📋 接收參數: {
2025-08-10 21:21:58    studentName: '小明',
2025-08-10 21:21:58    courseName: '晨練課',
2025-08-10 21:21:58    scheduleTime: '07:00',
2025-08-10 21:21:58    recurring: false
2025-08-10 21:21:58  }
2025-08-10 21:21:58  📊 任務執行結果: {
2025-08-10 21:21:58    success: false,
2025-08-10 21:21:58    code: 'MISSING_FIELDS',
2025-08-10 21:21:58    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 21:21:58    expectingInput: true,
2025-08-10 21:21:58    missingFields: [ '課程日期' ]
2025-08-10 21:21:58  }
2025-08-10 21:21:58  {"ts":"2025-08-10T21:21:58.523Z","lvl":"info","stage":"task","traceId":"line_1754860916511_73mz5b","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 21:21:58  🔍 檢查 replyToken: test-reply-token-1754860916269
2025-08-10 21:21:58  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 21:21:58  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 21:21:58  
2025-08-10 21:21:58  範例：「小明每週三下午3點數學課」
2025-08-10 21:21:58  {"ts":"2025-08-10T21:21:58.807Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754860916511_73mz5b","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 21:22:11  📨 收到 1 個事件
2025-08-10 21:22:11  📋 事件類型: message
2025-08-10 21:22:11  🔍 完整事件 JSON: {
2025-08-10 21:22:11    "type": "message",
2025-08-10 21:22:11    "message": {
2025-08-10 21:22:11      "type": "text",
2025-08-10 21:22:11      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 21:22:11    },
2025-08-10 21:22:11    "source": {
2025-08-10 21:22:11      "userId": "U_test_user_qa",
2025-08-10 21:22:11      "type": "user"
2025-08-10 21:22:11    },
2025-08-10 21:22:11    "replyToken": "test-reply-token-1754860931309",
2025-08-10 21:22:11    "timestamp": 1754860931309
2025-08-10 21:22:11  }
2025-08-10 21:22:11  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 21:22:11  {"ts":"2025-08-10T21:22:11.601Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 21:22:11  🔍 用戶ID類型: string
2025-08-10 21:22:11  🔍 是否測試用戶: true
2025-08-10 21:22:11  🚀 生產用戶，使用真實 LINE Service
2025-08-10 21:22:11  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 21:22:11  ✅ 規則匹配成功: create_recurring_course
2025-08-10 21:22:11  {"ts":"2025-08-10T21:22:11.743Z","lvl":"info","stage":"nlp","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 21:22:11  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 21:22:11  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 21:22:11  ✅ 時間解析成功: {
2025-08-10 21:22:11    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 21:22:11    output: '15:00',
2025-08-10 21:22:11    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 21:22:11  }
2025-08-10 21:22:12  🧠 使用對話上下文增強 slots 提取
2025-08-10 21:22:12  📊 規則提取置信度: 0.67
2025-08-10 21:22:12  🤖 啟用 AI 輔助提取...
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
2025-08-10 21:22:14  ✅ 最終 slots: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  {"ts":"2025-08-10T21:22:14.285Z","lvl":"info","stage":"slots","traceId":"line_1754860931601_w33wiw","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 21:22:14  🎯 執行任務: create_recurring_course
2025-08-10 21:22:14  🎯 開始處理新增課程任務
2025-08-10 21:22:14  📋 接收參數: {
2025-08-10 21:22:14    studentName: 'Lumi',
2025-08-10 21:22:14    courseName: '鋼琴課',
2025-08-10 21:22:14    scheduleTime: '15:00',
2025-08-10 21:22:14    recurring: true
2025-08-10 21:22:14  }
2025-08-10 21:22:14  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 21:22:14  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 21:22:14      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 21:22:14      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 21:22:14      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 21:22:14      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 21:22:14      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 21:22:14      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 21:22:14      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 21:22:14      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 21:22:14      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 21:22:14      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 21:22:14    config: {
2025-08-10 21:22:14      url: URL {
2025-08-10 21:22:14        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        origin: 'https://www.googleapis.com',
2025-08-10 21:22:14        protocol: 'https:',
2025-08-10 21:22:14        username: '',
2025-08-10 21:22:14        password: '',
2025-08-10 21:22:14        host: 'www.googleapis.com',
2025-08-10 21:22:14        hostname: 'www.googleapis.com',
2025-08-10 21:22:14        port: '',
2025-08-10 21:22:14        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 21:22:14        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 21:22:14        searchParams: URLSearchParams {
2025-08-10 21:22:14          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14          'singleEvents' => 'true',
2025-08-10 21:22:14          'orderBy' => 'startTime' },
2025-08-10 21:22:14        hash: ''
2025-08-10 21:22:14      },
2025-08-10 21:22:14      method: 'GET',
2025-08-10 21:22:14      apiVersion: '',
2025-08-10 21:22:14      userAgentDirectives: [ [Object] ],
2025-08-10 21:22:14      paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14      headers: Headers {
2025-08-10 21:22:14        'accept-encoding': 'gzip',
2025-08-10 21:22:14        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      params: {
2025-08-10 21:22:14        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 21:22:14        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 21:22:14        singleEvents: true,
2025-08-10 21:22:14        orderBy: 'startTime'
2025-08-10 21:22:14      },
2025-08-10 21:22:14      validateStatus: [Function (anonymous)],
2025-08-10 21:22:14      retry: true,
2025-08-10 21:22:14      responseType: 'unknown',
2025-08-10 21:22:14      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 21:22:14      retryConfig: {
2025-08-10 21:22:14        currentRetryAttempt: 0,
2025-08-10 21:22:14        retry: 3,
2025-08-10 21:22:14        httpMethodsToRetry: [Array],
2025-08-10 21:22:14        noResponseRetries: 2,
2025-08-10 21:22:14        retryDelayMultiplier: 2,
2025-08-10 21:22:14        timeOfFirstRequest: 1754860934692,
2025-08-10 21:22:14        totalTimeout: 9007199254740991,
2025-08-10 21:22:14        maxRetryDelay: 9007199254740991,
2025-08-10 21:22:14        statusCodesToRetry: [Array]
2025-08-10 21:22:14      }
2025-08-10 21:22:14    },
2025-08-10 21:22:14    response: Response {
2025-08-10 21:22:14      size: 0,
2025-08-10 21:22:14      data: { error: [Object] },
2025-08-10 21:22:14      config: {
2025-08-10 21:22:14        url: URL {},
2025-08-10 21:22:14        method: 'GET',
2025-08-10 21:22:14        apiVersion: '',
2025-08-10 21:22:14        userAgentDirectives: [Array],
2025-08-10 21:22:14        paramsSerializer: [Function (anonymous)],
2025-08-10 21:22:14        headers: Headers {
2025-08-10 21:22:14          'accept-encoding': 'gzip',
2025-08-10 21:22:14          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 21:22:14          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 21:22:14          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 21:22:14        },
2025-08-10 21:22:14        params: [Object],
2025-08-10 21:22:14        validateStatus: [Function (anonymous)],
2025-08-10 21:22:14        retry: true,
2025-08-10 21:22:14        responseType: 'unknown',
2025-08-10 21:22:14        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 21:22:14      },
2025-08-10 21:22:14      Symbol(Body internals): {
