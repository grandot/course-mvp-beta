2025-08-10 20:36:28  📨 收到 1 個事件
2025-08-10 20:36:28  📋 事件類型: message
2025-08-10 20:36:28  🔍 完整事件 JSON: {
2025-08-10 20:36:28    "type": "message",
2025-08-10 20:36:28    "message": {
2025-08-10 20:36:28      "type": "text",
2025-08-10 20:36:28      "text": "小明的晨練課每天幾點？"
2025-08-10 20:36:28    },
2025-08-10 20:36:28    "source": {
2025-08-10 20:36:28      "userId": "U_test_user_qa",
2025-08-10 20:36:28      "type": "user"
2025-08-10 20:36:28    },
2025-08-10 20:36:28    "replyToken": "test-reply-token-1754858188524",
2025-08-10 20:36:28    "timestamp": 1754858188524
2025-08-10 20:36:28  }
2025-08-10 20:36:28  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:36:28  {"ts":"2025-08-10T20:36:28.895Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858188895_4inhqa","userId":"U_test_user_qa","textIn":"小明的晨練課每天幾點？"}
2025-08-10 20:36:28  🔍 用戶ID類型: string
2025-08-10 20:36:28  🔍 是否測試用戶: true
2025-08-10 20:36:28  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:36:28  🎯 開始解析意圖: 小明的晨練課每天幾點？ (用戶: U_test_user_qa)
2025-08-10 20:36:29  🤖 啟用 AI 備援識別...
2025-08-10 20:36:29  🤖 AI 識別意圖: query_schedule 信心度: 1
2025-08-10 20:36:29  {"ts":"2025-08-10T20:36:29.745Z","lvl":"info","stage":"nlp","traceId":"line_1754858188895_4inhqa","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 20:36:29  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 20:36:30  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:36:30  📊 規則提取置信度: 0.50
2025-08-10 20:36:30  🤖 啟用 AI 輔助提取...
2025-08-10 20:36:31  ✅ 最終 slots: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:36:31  {"ts":"2025-08-10T20:36:31.000Z","lvl":"info","stage":"slots","traceId":"line_1754858188895_4inhqa","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 20:36:31  🎯 執行任務: query_schedule
2025-08-10 20:36:31  🎯 開始處理查詢課表任務
2025-08-10 20:36:31  📋 接收參數: { studentName: '小明', courseName: '晨練課', scheduleTime: '每天幾點' }
2025-08-10 20:36:31  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:36:31  📚 查詢到 339 筆課程資料
2025-08-10 20:36:31  📚 查詢到 14 筆課程
2025-08-10 20:36:31  📊 任務執行結果: {
2025-08-10 20:36:31    success: true,
2025-08-10 20:36:31    code: 'QUERY_OK',
2025-08-10 20:36:31    message: '📅 小明本週的課程安排\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/9 (週六)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/10 (週日)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/11 (週一)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/12 (週二)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/13 (週三)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/14 (週四)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/15 (週五)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄',
2025-08-10 20:36:31    data: {
2025-08-10 20:36:31      courses: [
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object]
2025-08-10 20:36:31      ],
2025-08-10 20:36:31      courseCount: 14,
2025-08-10 20:36:31      dateRange: {
2025-08-10 20:36:31        startDate: '2025-08-10',
2025-08-10 20:36:31        endDate: '2025-08-16',
2025-08-10 20:36:31        description: '本週'
2025-08-10 20:36:31      }
2025-08-10 20:36:31    }
2025-08-10 20:36:31  }
2025-08-10 20:36:31  {"ts":"2025-08-10T20:36:31.360Z","lvl":"info","stage":"task","traceId":"line_1754858188895_4inhqa","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":360}
2025-08-10 20:36:31  🔍 檢查 replyToken: test-reply-token-1754858188524
2025-08-10 20:36:31  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:36:31  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/9 (週六)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/10 (週日)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/11 (週一)
2025-08-10 20:36:31  📚 查詢到 339 筆課程資料
2025-08-10 20:36:31  📚 查詢到 14 筆課程
2025-08-10 20:36:31  📊 任務執行結果: {
2025-08-10 20:36:31    success: true,
2025-08-10 20:36:31    code: 'QUERY_OK',
2025-08-10 20:36:31    message: '📅 小明本週的課程安排\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/9 (週六)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/10 (週日)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/11 (週一)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/12 (週二)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/13 (週三)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/14 (週四)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '\n' +
2025-08-10 20:36:31      '📆 8/15 (週五)\n' +
2025-08-10 20:36:31      '  上午7:00 - 晨練課 🔄\n' +
2025-08-10 20:36:31      '  上午8:00 - 晨練課 🔄',
2025-08-10 20:36:31    data: {
2025-08-10 20:36:31      courses: [
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object],
2025-08-10 20:36:31        [Object], [Object]
2025-08-10 20:36:31      ],
2025-08-10 20:36:31      courseCount: 14,
2025-08-10 20:36:31      dateRange: {
2025-08-10 20:36:31        startDate: '2025-08-10',
2025-08-10 20:36:31        endDate: '2025-08-16',
2025-08-10 20:36:31        description: '本週'
2025-08-10 20:36:31      }
2025-08-10 20:36:31    }
2025-08-10 20:36:31  }
2025-08-10 20:36:31  {"ts":"2025-08-10T20:36:31.360Z","lvl":"info","stage":"task","traceId":"line_1754858188895_4inhqa","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK","latencyMs":360}
2025-08-10 20:36:31  🔍 檢查 replyToken: test-reply-token-1754858188524
2025-08-10 20:36:31  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:36:31  📤 [測試模式] 實際業務回覆: 📅 小明本週的課程安排
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/9 (週六)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/10 (週日)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/11 (週一)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/12 (週二)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/13 (週三)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/14 (週四)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  
2025-08-10 20:36:31  📆 8/15 (週五)
2025-08-10 20:36:31    上午7:00 - 晨練課 🔄
2025-08-10 20:36:31    上午8:00 - 晨練課 🔄
2025-08-10 20:36:31  {"ts":"2025-08-10T20:36:31.644Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858188895_4inhqa","userId":"U_test_user_qa","textOut":"📅 小明本週的課程安排\n\n📆 8/9 (週六)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/10 (週日)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/11 (週一)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/12 (週二)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/13 (週三)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/14 (週四)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄\n\n📆 8/15 (週五)\n  上午7:00 - 晨練課 🔄\n  上午8:00 - 晨練課 🔄","quickReply":false}
2025-08-10 20:36:44  📨 收到 1 個事件
2025-08-10 20:36:44  📋 事件類型: message
2025-08-10 20:36:44  🔍 完整事件 JSON: {
2025-08-10 20:36:44    "type": "message",
2025-08-10 20:36:44    "message": {
2025-08-10 20:36:44      "type": "text",
2025-08-10 20:36:44      "text": "查詢Lumi的重複課程"
2025-08-10 20:36:44    },
2025-08-10 20:36:44    "source": {
2025-08-10 20:36:44      "userId": "U_test_user_qa",
2025-08-10 20:36:44      "type": "user"
2025-08-10 20:36:44    },
2025-08-10 20:36:44    "replyToken": "test-reply-token-1754858204250",
2025-08-10 20:36:44    "timestamp": 1754858204250
2025-08-10 20:36:44  }
2025-08-10 20:36:44  📨 收到 1 個事件
2025-08-10 20:36:44  📋 事件類型: message
2025-08-10 20:36:44  🔍 完整事件 JSON: {
2025-08-10 20:36:44    "type": "message",
2025-08-10 20:36:44    "message": {
2025-08-10 20:36:44      "type": "text",
2025-08-10 20:36:44      "text": "查詢Lumi的重複課程"
2025-08-10 20:36:44    },
2025-08-10 20:36:44    "source": {
2025-08-10 20:36:44      "userId": "U_test_user_qa",
2025-08-10 20:36:44      "type": "user"
2025-08-10 20:36:44    },
2025-08-10 20:36:44    "replyToken": "test-reply-token-1754858204250",
2025-08-10 20:36:44    "timestamp": 1754858204250
2025-08-10 20:36:44  }
2025-08-10 20:36:44  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:36:44  {"ts":"2025-08-10T20:36:44.439Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858204439_jxy9z8","userId":"U_test_user_qa","textIn":"查詢Lumi的重複課程"}
2025-08-10 20:36:44  🔍 用戶ID類型: string
2025-08-10 20:36:44  🔍 是否測試用戶: true
2025-08-10 20:36:44  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:36:44  🎯 開始解析意圖: 查詢Lumi的重複課程 (用戶: U_test_user_qa)
2025-08-10 20:36:44  ✅ 規則匹配成功: query_schedule
2025-08-10 20:36:44  {"ts":"2025-08-10T20:36:44.580Z","lvl":"info","stage":"nlp","traceId":"line_1754858204439_jxy9z8","userId":"U_test_user_qa","intent":"query_schedule"}
2025-08-10 20:36:44  🔍 開始提取 slots - 意圖: query_schedule (用戶: U_test_user_qa)
2025-08-10 20:36:44  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:36:44  📊 規則提取置信度: 0.50
2025-08-10 20:36:44  🤖 啟用 AI 輔助提取...
2025-08-10 20:36:46  ✅ 最終 slots: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:36:46  {"ts":"2025-08-10T20:36:46.090Z","lvl":"info","stage":"slots","traceId":"line_1754858204439_jxy9z8","userId":"U_test_user_qa","intent":"query_schedule","slotsSummary":["studentName","courseName"]}
2025-08-10 20:36:46  🎯 執行任務: query_schedule
2025-08-10 20:36:46  🎯 開始處理查詢課表任務
2025-08-10 20:36:46  📋 接收參數: { studentName: 'Lumi', courseName: '重複課' }
2025-08-10 20:36:46  📅 查詢時間範圍: { startDate: '2025-08-10', endDate: '2025-08-16', description: '本週' }
2025-08-10 20:36:46  📚 查詢到 332 筆課程資料
2025-08-10 20:36:46  📚 查詢到 0 筆課程
2025-08-10 20:36:46  📊 任務執行結果: {
2025-08-10 20:36:46    success: true,
2025-08-10 20:36:46    code: 'QUERY_OK_EMPTY',
2025-08-10 20:36:46    message: '📅 Lumi本週沒有安排課程\n' +
2025-08-10 20:36:46      '\n' +
2025-08-10 20:36:46      '💡 您可以：\n' +
2025-08-10 20:36:46      '• 新增課程：「小明明天上午10點英文課」\n' +
2025-08-10 20:36:46      '• 查詢其他時間：「小明下週的課表」\n' +
2025-08-10 20:36:46      '• 記錄課程內容：「記錄昨天數學課的內容」',
2025-08-10 20:36:46    data: {
2025-08-10 20:36:46      courseCount: 0,
2025-08-10 20:36:46      dateRange: {
2025-08-10 20:36:46        startDate: '2025-08-10',
2025-08-10 20:36:46        endDate: '2025-08-16',
2025-08-10 20:36:46        description: '本週'
2025-08-10 20:36:46      }
2025-08-10 20:36:46    }
2025-08-10 20:36:46  }
2025-08-10 20:36:46  {"ts":"2025-08-10T20:36:46.495Z","lvl":"info","stage":"task","traceId":"line_1754858204439_jxy9z8","userId":"U_test_user_qa","intent":"query_schedule","success":true,"code":"QUERY_OK_EMPTY","latencyMs":405}
2025-08-10 20:36:46  🔍 檢查 replyToken: test-reply-token-1754858204250
2025-08-10 20:36:46  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:36:46  📤 [測試模式] 實際業務回覆: 📅 Lumi本週沒有安排課程
2025-08-10 20:36:46  
2025-08-10 20:36:46  💡 您可以：
2025-08-10 20:36:46  • 新增課程：「小明明天上午10點英文課」
2025-08-10 20:36:46  • 查詢其他時間：「小明下週的課表」
2025-08-10 20:36:46  • 記錄課程內容：「記錄昨天數學課的內容」
2025-08-10 20:36:46  {"ts":"2025-08-10T20:36:46.779Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858204439_jxy9z8","userId":"U_test_user_qa","textOut":"📅 Lumi本週沒有安排課程\n\n💡 您可以：\n• 新增課程：「小明明天上午10點英文課」\n• 查詢其他時間：「小明下週的課表」\n• 記錄課程內容：「記錄昨天數學課的內容」","quickReply":false}
2025-08-10 20:36:59  📨 收到 1 個事件
2025-08-10 20:36:59  📋 事件類型: message
2025-08-10 20:36:59  🔍 完整事件 JSON: {
2025-08-10 20:36:59    "type": "message",
2025-08-10 20:36:59    "message": {
2025-08-10 20:36:59      "type": "text",
2025-08-10 20:36:59      "text": "今天小明的數學課學了分數加減法"
2025-08-10 20:36:59    },
2025-08-10 20:36:59    "source": {
2025-08-10 20:36:59      "userId": "U_test_user_qa",
2025-08-10 20:36:59      "type": "user"
2025-08-10 20:36:59    },
2025-08-10 20:36:59    "replyToken": "test-reply-token-1754858219412",
2025-08-10 20:36:59    "timestamp": 1754858219412
2025-08-10 20:36:59  }
2025-08-10 20:36:59  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:36:59  {"ts":"2025-08-10T20:36:59.599Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858219599_2dzxmp","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 20:36:59  🔍 用戶ID類型: string
2025-08-10 20:36:59  🔍 是否測試用戶: true
2025-08-10 20:36:59  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:36:59  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 20:36:59  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:36:59  {"ts":"2025-08-10T20:36:59.741Z","lvl":"info","stage":"nlp","traceId":"line_1754858219599_2dzxmp","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:36:59  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:37:00  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:37:00  📊 規則提取置信度: 1.00
2025-08-10 20:37:00  🤖 啟用 AI 輔助提取...
2025-08-10 20:37:00  ✅ 最終 slots: {
2025-08-10 20:37:00    studentName: '小明',
2025-08-10 20:37:00    courseName: '數學課',
2025-08-10 20:37:00    timeReference: 'today',
2025-08-10 20:37:00    content: '分數加減法'
2025-08-10 20:37:00  }
2025-08-10 20:37:00  {"ts":"2025-08-10T20:37:00.995Z","lvl":"info","stage":"slots","traceId":"line_1754858219599_2dzxmp","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:37:00  🎯 執行任務: record_content
2025-08-10 20:37:00  📝 開始處理記錄課程內容任務: {
2025-08-10 20:37:00    studentName: '小明',
2025-08-10 20:37:00  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:37:00  📊 規則提取置信度: 1.00
2025-08-10 20:37:00  🤖 啟用 AI 輔助提取...
2025-08-10 20:37:00  ✅ 最終 slots: {
2025-08-10 20:37:00    studentName: '小明',
2025-08-10 20:37:00    courseName: '數學課',
2025-08-10 20:37:00    timeReference: 'today',
2025-08-10 20:37:00    content: '分數加減法'
2025-08-10 20:37:00  }
2025-08-10 20:37:00  {"ts":"2025-08-10T20:37:00.995Z","lvl":"info","stage":"slots","traceId":"line_1754858219599_2dzxmp","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:37:00  🎯 執行任務: record_content
2025-08-10 20:37:00  📝 開始處理記錄課程內容任務: {
2025-08-10 20:37:00    studentName: '小明',
2025-08-10 20:37:00    courseName: '數學課',
2025-08-10 20:37:00    timeReference: 'today',
2025-08-10 20:37:00    content: '分數加減法'
2025-08-10 20:37:00  }
2025-08-10 20:37:00  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 20:37:01  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 20:37:01  ✅ 文檔已添加到 course_contents: C2Sy0q71rYrYIrFt1es5
2025-08-10 20:37:01  ✅ 課程內容記錄已儲存: C2Sy0q71rYrYIrFt1es5
2025-08-10 20:37:01  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 20:37:01  📊 任務執行結果: {
2025-08-10 20:37:01    success: true,
2025-08-10 20:37:01    code: 'RECORD_CONTENT_OK',
2025-08-10 20:37:01    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 20:37:01    data: {
2025-08-10 20:37:01      recordId: 'C2Sy0q71rYrYIrFt1es5',
2025-08-10 20:37:01      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 20:37:01      targetDate: '2025-08-10'
2025-08-10 20:37:01    }
2025-08-10 20:37:01  }
2025-08-10 20:37:01  {"ts":"2025-08-10T20:37:01.338Z","lvl":"info","stage":"task","traceId":"line_1754858219599_2dzxmp","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":342}
2025-08-10 20:37:01  🔍 檢查 replyToken: test-reply-token-1754858219412
2025-08-10 20:37:01  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:37:01  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:37:01  📚 課程：小明 - 數學課
2025-08-10 20:37:01  📅 日期：2025-08-10
2025-08-10 20:37:01  💬 內容：分數加減法
2025-08-10 20:37:01  {"ts":"2025-08-10T20:37:01.620Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858219599_2dzxmp","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 20:37:15  📨 收到 1 個事件
2025-08-10 20:37:15  📋 事件類型: message
2025-08-10 20:37:15  🔍 完整事件 JSON: {
2025-08-10 20:37:15    "type": "message",
2025-08-10 20:37:15    "message": {
2025-08-10 20:37:15      "type": "text",
2025-08-10 20:37:15      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 20:37:15    },
2025-08-10 20:37:15    "source": {
2025-08-10 20:37:15      "userId": "U_test_user_qa",
2025-08-10 20:37:15      "type": "user"
2025-08-10 20:37:15    },
2025-08-10 20:37:15    "replyToken": "test-reply-token-1754858235052",
2025-08-10 20:37:15    "timestamp": 1754858235052
2025-08-10 20:37:15  }
2025-08-10 20:37:15  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:37:15  {"ts":"2025-08-10T20:37:15.347Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858235347_w8ain8","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 20:37:15  🔍 用戶ID類型: string
2025-08-10 20:37:15  🔍 是否測試用戶: true
2025-08-10 20:37:15  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:37:15  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 20:37:15  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:37:15  {"ts":"2025-08-10T20:37:15.488Z","lvl":"info","stage":"nlp","traceId":"line_1754858235347_w8ain8","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:37:15  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:37:15  📊 規則提取置信度: 0.33
2025-08-10 20:37:15  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 20:37:17  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:37:17  {"ts":"2025-08-10T20:37:17.022Z","lvl":"info","stage":"slots","traceId":"line_1754858235347_w8ain8","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 20:37:17  🎯 執行任務: record_content
2025-08-10 20:37:17  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 20:37:17  ✅ 文檔已添加到 course_contents: rOk6tviwUvVH0gk6VNw3
2025-08-10 20:37:17  ✅ 課程內容記錄已儲存: rOk6tviwUvVH0gk6VNw3
2025-08-10 20:37:17  📊 任務執行結果: {
2025-08-10 20:37:17    success: true,
2025-08-10 20:37:17    code: 'RECORD_CONTENT_OK',
2025-08-10 20:37:17    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 20:37:17    data: {
2025-08-10 20:37:17      recordId: 'rOk6tviwUvVH0gk6VNw3',
2025-08-10 20:37:17      courseId: null,
2025-08-10 20:37:17      targetDate: '2025-08-09'
2025-08-10 20:37:17    }
2025-08-10 20:37:17  }
2025-08-10 20:37:17  {"ts":"2025-08-10T20:37:17.116Z","lvl":"info","stage":"task","traceId":"line_1754858235347_w8ain8","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":94}
2025-08-10 20:37:17  🔍 檢查 replyToken: test-reply-token-1754858235052
2025-08-10 20:37:17  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:37:17  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:37:17  📝 記錄為獨立內容
2025-08-10 20:37:17  📚 課程：鋼琴課
2025-08-10 20:37:17  📅 日期：2025-08-09
2025-08-10 20:37:17  💬 內容：練習了小星星
2025-08-10 20:37:17  {"ts":"2025-08-10T20:37:17.400Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858235347_w8ain8","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 20:37:30  📨 收到 1 個事件
2025-08-10 20:37:30  📋 事件類型: message
2025-08-10 20:37:30  🔍 完整事件 JSON: {
2025-08-10 20:37:30    "type": "message",
2025-08-10 20:37:30    "message": {
2025-08-10 20:37:30      "type": "text",
2025-08-10 20:37:30      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:37:30    },
2025-08-10 20:37:30    "source": {
2025-08-10 20:37:30  📨 收到 1 個事件
2025-08-10 20:37:30  📋 事件類型: message
2025-08-10 20:37:30  🔍 完整事件 JSON: {
2025-08-10 20:37:30    "type": "message",
2025-08-10 20:37:30    "message": {
2025-08-10 20:37:30      "type": "text",
2025-08-10 20:37:30      "text": "小明昨天數學課學了什麼？"
2025-08-10 20:37:30    },
2025-08-10 20:37:30    "source": {
2025-08-10 20:37:30      "userId": "U_test_user_qa",
2025-08-10 20:37:30      "type": "user"
2025-08-10 20:37:30    },
2025-08-10 20:37:30    "replyToken": "test-reply-token-1754858250205",
2025-08-10 20:37:30    "timestamp": 1754858250205
2025-08-10 20:37:30  }
2025-08-10 20:37:30  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:37:30  {"ts":"2025-08-10T20:37:30.501Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858250501_k2oeql","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 20:37:30  🔍 用戶ID類型: string
2025-08-10 20:37:30  🔍 是否測試用戶: true
2025-08-10 20:37:30  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:37:30  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 20:37:30  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:37:30  {"ts":"2025-08-10T20:37:30.643Z","lvl":"info","stage":"nlp","traceId":"line_1754858250501_k2oeql","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:37:30  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:37:30  📊 規則提取置信度: 0.67
2025-08-10 20:37:30  🤖 啟用 AI 輔助提取...
2025-08-10 20:37:31  ✅ 最終 slots: {
2025-08-10 20:37:31    studentName: '小明',
2025-08-10 20:37:31    courseName: '數學課',
2025-08-10 20:37:31    timeReference: 'yesterday',
2025-08-10 20:37:31    content: '什麼？'
2025-08-10 20:37:31  }
2025-08-10 20:37:31  {"ts":"2025-08-10T20:37:31.907Z","lvl":"info","stage":"slots","traceId":"line_1754858250501_k2oeql","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:37:31  🎯 執行任務: record_content
2025-08-10 20:37:31  📝 開始處理記錄課程內容任務: {
2025-08-10 20:37:31    studentName: '小明',
2025-08-10 20:37:31    courseName: '數學課',
2025-08-10 20:37:31    timeReference: 'yesterday',
2025-08-10 20:37:31    content: '什麼？'
2025-08-10 20:37:31  }
2025-08-10 20:37:31  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 20:37:32  ❓ 未找到完全匹配的課程
2025-08-10 20:37:32  ✅ 文檔已添加到 course_contents: cEPKzCTnoAhc38h2Quxx
2025-08-10 20:37:32  ✅ 課程內容記錄已儲存: cEPKzCTnoAhc38h2Quxx
2025-08-10 20:37:32  📊 任務執行結果: {
2025-08-10 20:37:32    success: true,
2025-08-10 20:37:32    code: 'RECORD_CONTENT_OK',
2025-08-10 20:37:32    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 20:37:32    data: {
2025-08-10 20:37:32      recordId: 'cEPKzCTnoAhc38h2Quxx',
2025-08-10 20:37:32      courseId: null,
2025-08-10 20:37:32      targetDate: '2025-08-09'
2025-08-10 20:37:32    }
2025-08-10 20:37:32  }
2025-08-10 20:37:32  {"ts":"2025-08-10T20:37:32.350Z","lvl":"info","stage":"task","traceId":"line_1754858250501_k2oeql","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":443}
2025-08-10 20:37:32  🔍 檢查 replyToken: test-reply-token-1754858250205
2025-08-10 20:37:32  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:37:32  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:37:32  📝 記錄為獨立內容
2025-08-10 20:37:32  👨‍🎓 學生：小明
2025-08-10 20:37:32  📚 課程：數學課
2025-08-10 20:37:32  📅 日期：2025-08-09
2025-08-10 20:37:32  💬 內容：什麼？
2025-08-10 20:37:32  {"ts":"2025-08-10T20:37:32.632Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858250501_k2oeql","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 20:37:39  📨 收到 1 個事件
2025-08-10 20:37:39  📋 事件類型: message
2025-08-10 20:37:39  🔍 完整事件 JSON: {
2025-08-10 20:37:39    "type": "message",
2025-08-10 20:37:39    "message": {
2025-08-10 20:37:39      "type": "text",
2025-08-10 20:37:39      "text": "記錄小明今天化學課的內容"
2025-08-10 20:37:39    },
2025-08-10 20:37:39    "source": {
2025-08-10 20:37:39      "userId": "U_test_user_qa",
2025-08-10 20:37:39      "type": "user"
2025-08-10 20:37:39    },
2025-08-10 20:37:39    "replyToken": "test-reply-token-1754858259643",
2025-08-10 20:37:39    "timestamp": 1754858259643
2025-08-10 20:37:39  }
2025-08-10 20:37:39  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:37:39  {"ts":"2025-08-10T20:37:39.944Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858259944_biw306","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 20:37:39  🔍 用戶ID類型: string
2025-08-10 20:37:39  🔍 是否測試用戶: true
2025-08-10 20:37:39  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:37:39  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 20:37:40  📝 內容記錄優先規則命中 → record_content
2025-08-10 20:37:40  {"ts":"2025-08-10T20:37:40.085Z","lvl":"info","stage":"nlp","traceId":"line_1754858259944_biw306","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 20:37:40  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 20:37:40  📊 規則提取置信度: 0.67
2025-08-10 20:37:40  🤖 啟用 AI 輔助提取...
2025-08-10 20:37:41  ✅ 最終 slots: {
2025-08-10 20:37:41    studentName: '小明',
2025-08-10 20:37:41    courseName: '化學課',
2025-08-10 20:37:41    timeReference: 'today',
2025-08-10 20:37:41    content: '小明今天化學課的內容'
2025-08-10 20:37:41  }
2025-08-10 20:37:41  {"ts":"2025-08-10T20:37:41.452Z","lvl":"info","stage":"slots","traceId":"line_1754858259944_biw306","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:37:41  🎯 執行任務: record_content
2025-08-10 20:37:41  📝 開始處理記錄課程內容任務: {
2025-08-10 20:37:41    studentName: '小明',
2025-08-10 20:37:41  ✅ 最終 slots: {
2025-08-10 20:37:41    studentName: '小明',
2025-08-10 20:37:41    courseName: '化學課',
2025-08-10 20:37:41    timeReference: 'today',
2025-08-10 20:37:41    content: '小明今天化學課的內容'
2025-08-10 20:37:41  }
2025-08-10 20:37:41  {"ts":"2025-08-10T20:37:41.452Z","lvl":"info","stage":"slots","traceId":"line_1754858259944_biw306","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 20:37:41  🎯 執行任務: record_content
2025-08-10 20:37:41  📝 開始處理記錄課程內容任務: {
2025-08-10 20:37:41    studentName: '小明',
2025-08-10 20:37:41    courseName: '化學課',
2025-08-10 20:37:41    timeReference: 'today',
2025-08-10 20:37:41    content: '小明今天化學課的內容'
2025-08-10 20:37:41  }
2025-08-10 20:37:41  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 20:37:41  ❓ 未找到完全匹配的課程
2025-08-10 20:37:41  ✅ 文檔已添加到 course_contents: ZIiBOvuxgxm4PaGoaYvC
2025-08-10 20:37:41  ✅ 課程內容記錄已儲存: ZIiBOvuxgxm4PaGoaYvC
2025-08-10 20:37:41  📊 任務執行結果: {
2025-08-10 20:37:41    success: true,
2025-08-10 20:37:41    code: 'RECORD_CONTENT_OK',
2025-08-10 20:37:41    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 20:37:41      '📝 記錄為獨立內容\n' +
2025-08-10 20:37:41      '👨‍🎓 學生：小明\n' +
2025-08-10 20:37:41      '📚 課程：化學課\n' +
2025-08-10 20:37:41      '📅 日期：2025-08-10\n' +
2025-08-10 20:37:41      '💬 內容：小明今天化學課的內容',
2025-08-10 20:37:41    data: {
2025-08-10 20:37:41      recordId: 'ZIiBOvuxgxm4PaGoaYvC',
2025-08-10 20:37:41      courseId: null,
2025-08-10 20:37:41      targetDate: '2025-08-10'
2025-08-10 20:37:41    }
2025-08-10 20:37:41  }
2025-08-10 20:37:41  {"ts":"2025-08-10T20:37:41.680Z","lvl":"info","stage":"task","traceId":"line_1754858259944_biw306","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":228}
2025-08-10 20:37:41  🔍 檢查 replyToken: test-reply-token-1754858259643
2025-08-10 20:37:41  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:37:41  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 20:37:41  📝 記錄為獨立內容
2025-08-10 20:37:41  👨‍🎓 學生：小明
2025-08-10 20:37:41  📚 課程：化學課
2025-08-10 20:37:41  📅 日期：2025-08-10
2025-08-10 20:37:41  💬 內容：小明今天化學課的內容
2025-08-10 20:37:41  {"ts":"2025-08-10T20:37:41.964Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858259944_biw306","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 20:37:54  📨 收到 1 個事件
2025-08-10 20:37:54  📋 事件類型: message
2025-08-10 20:37:54  🔍 完整事件 JSON: {
2025-08-10 20:37:54    "type": "message",
2025-08-10 20:37:54    "message": {
2025-08-10 20:37:54      "type": "text",
2025-08-10 20:37:54      "text": "提醒我小明的數學課"
2025-08-10 20:37:54    },
2025-08-10 20:37:54    "source": {
2025-08-10 20:37:54      "userId": "U_test_user_qa",
2025-08-10 20:37:54      "type": "user"
2025-08-10 20:37:54    },
2025-08-10 20:37:54    "replyToken": "test-reply-token-1754858274885",
2025-08-10 20:37:54    "timestamp": 1754858274885
2025-08-10 20:37:54  }
2025-08-10 20:37:54  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:37:55  {"ts":"2025-08-10T20:37:55.069Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858275069_agq2bj","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 20:37:55  🔍 用戶ID類型: string
2025-08-10 20:37:55  🔍 是否測試用戶: true
2025-08-10 20:37:55  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:37:55  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 20:37:55  ✅ 規則匹配成功: set_reminder
2025-08-10 20:37:55  {"ts":"2025-08-10T20:37:55.211Z","lvl":"info","stage":"nlp","traceId":"line_1754858275069_agq2bj","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:37:55  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:37:55  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:37:55  📊 規則提取置信度: 0.67
2025-08-10 20:37:55  🤖 啟用 AI 輔助提取...
2025-08-10 20:37:56  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:37:56  {"ts":"2025-08-10T20:37:56.473Z","lvl":"info","stage":"slots","traceId":"line_1754858275069_agq2bj","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:37:56  🎯 執行任務: set_reminder
2025-08-10 20:37:56  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 20:37:56  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 20:37:56  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 20:37:56  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 20:37:56  ✅ 提醒記錄已創建: j26AOXP0iHBC1JZSq1W5
2025-08-10 20:37:56  ✅ 提醒設定成功: j26AOXP0iHBC1JZSq1W5
2025-08-10 20:37:56  📊 任務執行結果: {
2025-08-10 20:37:56    success: true,
2025-08-10 20:37:56    code: 'REMINDER_SET_OK',
2025-08-10 20:37:56    message: '✅ 提醒設定完成！\n' +
2025-08-10 20:37:56      '📚 課程：小明 的 數學課\n' +
2025-08-10 20:37:56      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 20:37:56      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 20:37:56  }
2025-08-10 20:37:56  {"ts":"2025-08-10T20:37:56.822Z","lvl":"info","stage":"task","traceId":"line_1754858275069_agq2bj","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":349}
2025-08-10 20:37:57  🔍 檢查 replyToken: test-reply-token-1754858274885
2025-08-10 20:37:57  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:37:57  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 20:37:57  📚 課程：小明 的 數學課
2025-08-10 20:37:57  📅 上課時間：8/11 下午02:00
2025-08-10 20:37:57  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 20:37:57  {"ts":"2025-08-10T20:37:57.105Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858275069_agq2bj","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 20:38:10  📨 收到 1 個事件
2025-08-10 20:38:10  📋 事件類型: message
2025-08-10 20:38:10  🔍 完整事件 JSON: {
2025-08-10 20:38:10    "type": "message",
2025-08-10 20:38:10    "message": {
2025-08-10 20:38:10  📨 收到 1 個事件
2025-08-10 20:38:10  📋 事件類型: message
2025-08-10 20:38:10  🔍 完整事件 JSON: {
2025-08-10 20:38:10    "type": "message",
2025-08-10 20:38:10    "message": {
2025-08-10 20:38:10      "type": "text",
2025-08-10 20:38:10      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 20:38:10    },
2025-08-10 20:38:10    "source": {
2025-08-10 20:38:10      "userId": "U_test_user_qa",
2025-08-10 20:38:10      "type": "user"
2025-08-10 20:38:10    },
2025-08-10 20:38:10    "replyToken": "test-reply-token-1754858289884",
2025-08-10 20:38:10    "timestamp": 1754858289884
2025-08-10 20:38:10  }
2025-08-10 20:38:10  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:38:10  {"ts":"2025-08-10T20:38:10.193Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858290193_tzaz4v","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 20:38:10  🔍 用戶ID類型: string
2025-08-10 20:38:10  🔍 是否測試用戶: true
2025-08-10 20:38:10  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:38:10  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 20:38:10  ✅ 規則匹配成功: set_reminder
2025-08-10 20:38:10  {"ts":"2025-08-10T20:38:10.334Z","lvl":"info","stage":"nlp","traceId":"line_1754858290193_tzaz4v","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:38:10  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:38:10  📊 規則提取置信度: 0.67
2025-08-10 20:38:10  🤖 啟用 AI 輔助提取...
2025-08-10 20:38:11  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 20:38:11  {"ts":"2025-08-10T20:38:11.506Z","lvl":"info","stage":"slots","traceId":"line_1754858290193_tzaz4v","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","timeReference","reminderTime"]}
2025-08-10 20:38:11  🎯 執行任務: set_reminder
2025-08-10 20:38:11  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', timeReference: '前', reminderTime: 60 }
2025-08-10 20:38:11  📊 任務執行結果: {
2025-08-10 20:38:11    success: false,
2025-08-10 20:38:11    code: 'MISSING_STUDENT',
2025-08-10 20:38:11    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 20:38:11  }
2025-08-10 20:38:11  {"ts":"2025-08-10T20:38:11.507Z","lvl":"info","stage":"task","traceId":"line_1754858290193_tzaz4v","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":1}
2025-08-10 20:38:11  🔍 檢查 replyToken: test-reply-token-1754858289884
2025-08-10 20:38:11  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:38:11  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 20:38:11  {"ts":"2025-08-10T20:38:11.790Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858290193_tzaz4v","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 20:38:24  📨 收到 1 個事件
2025-08-10 20:38:24  📋 事件類型: message
2025-08-10 20:38:24  🔍 完整事件 JSON: {
2025-08-10 20:38:24    "type": "message",
2025-08-10 20:38:24    "message": {
2025-08-10 20:38:24      "type": "text",
2025-08-10 20:38:24      "text": "提醒我小明的物理課"
2025-08-10 20:38:24    },
2025-08-10 20:38:24    "source": {
2025-08-10 20:38:24      "userId": "U_test_user_qa",
2025-08-10 20:38:24      "type": "user"
2025-08-10 20:38:24    },
2025-08-10 20:38:24    "replyToken": "test-reply-token-1754858304258",
2025-08-10 20:38:24    "timestamp": 1754858304258
2025-08-10 20:38:24  }
2025-08-10 20:38:24  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:38:24  {"ts":"2025-08-10T20:38:24.450Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858304450_gcjx7s","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 20:38:24  🔍 用戶ID類型: string
2025-08-10 20:38:24  🔍 是否測試用戶: true
2025-08-10 20:38:24  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:38:24  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 20:38:24  ✅ 規則匹配成功: set_reminder
2025-08-10 20:38:24  {"ts":"2025-08-10T20:38:24.591Z","lvl":"info","stage":"nlp","traceId":"line_1754858304450_gcjx7s","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 20:38:24  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 20:38:24  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:38:24  📊 規則提取置信度: 0.67
2025-08-10 20:38:24  🤖 啟用 AI 輔助提取...
2025-08-10 20:38:26  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:38:26  {"ts":"2025-08-10T20:38:26.001Z","lvl":"info","stage":"slots","traceId":"line_1754858304450_gcjx7s","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 20:38:26  🎯 執行任務: set_reminder
2025-08-10 20:38:26  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 20:38:26  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 20:38:26  📊 任務執行結果: {
2025-08-10 20:38:26    success: false,
2025-08-10 20:38:26    code: 'NOT_FOUND',
2025-08-10 20:38:26    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 20:38:26  }
2025-08-10 20:38:26  {"ts":"2025-08-10T20:38:26.079Z","lvl":"info","stage":"task","traceId":"line_1754858304450_gcjx7s","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":78}
2025-08-10 20:38:26  🔍 檢查 replyToken: test-reply-token-1754858304258
2025-08-10 20:38:26  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:38:26  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 20:38:26  {"ts":"2025-08-10T20:38:26.361Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858304450_gcjx7s","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 20:38:39  📨 收到 1 個事件
2025-08-10 20:38:39  📋 事件類型: message
2025-08-10 20:38:39  🔍 完整事件 JSON: {
2025-08-10 20:38:39    "type": "message",
2025-08-10 20:38:39    "message": {
2025-08-10 20:38:39      "type": "text",
2025-08-10 20:38:39      "text": "小明的數學課改到下午4點"
2025-08-10 20:38:39    },
2025-08-10 20:38:39    "source": {
2025-08-10 20:38:39      "userId": "U_test_user_qa",
2025-08-10 20:38:39      "type": "user"
2025-08-10 20:38:39    },
2025-08-10 20:38:39    "replyToken": "test-reply-token-1754858318956",
2025-08-10 20:38:39    "timestamp": 1754858318956
2025-08-10 20:38:39  }
2025-08-10 20:38:39  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:38:39  {"ts":"2025-08-10T20:38:39.212Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858319212_l0bk2e","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 20:38:39  🔍 用戶ID類型: string
2025-08-10 20:38:39  📨 收到 1 個事件
2025-08-10 20:38:39  📋 事件類型: message
2025-08-10 20:38:39  🔍 完整事件 JSON: {
2025-08-10 20:38:39    "type": "message",
2025-08-10 20:38:39    "message": {
2025-08-10 20:38:39      "type": "text",
2025-08-10 20:38:39      "text": "小明的數學課改到下午4點"
2025-08-10 20:38:39    },
2025-08-10 20:38:39    "source": {
2025-08-10 20:38:39      "userId": "U_test_user_qa",
2025-08-10 20:38:39      "type": "user"
2025-08-10 20:38:39    },
2025-08-10 20:38:39    "replyToken": "test-reply-token-1754858318956",
2025-08-10 20:38:39    "timestamp": 1754858318956
2025-08-10 20:38:39  }
2025-08-10 20:38:39  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:38:39  {"ts":"2025-08-10T20:38:39.212Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858319212_l0bk2e","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 20:38:39  🔍 用戶ID類型: string
2025-08-10 20:38:39  🔍 是否測試用戶: true
2025-08-10 20:38:39  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:38:39  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 20:38:39  ✅ 規則匹配成功: modify_course
2025-08-10 20:38:39  {"ts":"2025-08-10T20:38:39.353Z","lvl":"info","stage":"nlp","traceId":"line_1754858319212_l0bk2e","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 20:38:39  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 20:38:39  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 20:38:39  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:38:39  📊 規則提取置信度: 0.00
2025-08-10 20:38:39  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 20:38:41  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 20:38:41  {"ts":"2025-08-10T20:38:41.000Z","lvl":"info","stage":"slots","traceId":"line_1754858319212_l0bk2e","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 20:38:41  🎯 執行任務: modify_course
2025-08-10 20:38:41  ✏️ 執行修改操作任務: {
2025-08-10 20:38:41    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 20:38:41    userId: 'U_test_user_qa'
2025-08-10 20:38:41  }
2025-08-10 20:38:41  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 20:38:41  {"ts":"2025-08-10T20:38:41.070Z","lvl":"info","stage":"task","traceId":"line_1754858319212_l0bk2e","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":70}
2025-08-10 20:38:41  🔍 檢查 replyToken: test-reply-token-1754858318956
2025-08-10 20:38:41  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:38:41  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 20:38:41  {"ts":"2025-08-10T20:38:41.353Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858319212_l0bk2e","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 20:38:54  📨 收到 1 個事件
2025-08-10 20:38:54  📋 事件類型: message
2025-08-10 20:38:54  🔍 完整事件 JSON: {
2025-08-10 20:38:54    "type": "message",
2025-08-10 20:38:54    "message": {
2025-08-10 20:38:54      "type": "text",
2025-08-10 20:38:54      "text": "小明每天的晨練課改到早上7點"
2025-08-10 20:38:54    },
2025-08-10 20:38:54    "source": {
2025-08-10 20:38:54      "userId": "U_test_user_qa",
2025-08-10 20:38:54      "type": "user"
2025-08-10 20:38:54    },
2025-08-10 20:38:54    "replyToken": "test-reply-token-1754858334416",
2025-08-10 20:38:54    "timestamp": 1754858334416
2025-08-10 20:38:54  }
2025-08-10 20:38:54  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:38:54  {"ts":"2025-08-10T20:38:54.674Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858334674_pne6r3","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 20:38:54  🔍 用戶ID類型: string
2025-08-10 20:38:54  🔍 是否測試用戶: true
2025-08-10 20:38:54  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:38:54  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 20:38:54  ✅ 規則匹配成功: create_recurring_course
2025-08-10 20:38:54  {"ts":"2025-08-10T20:38:54.816Z","lvl":"info","stage":"nlp","traceId":"line_1754858334674_pne6r3","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 20:38:54  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 20:38:54  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 20:38:54  ✅ 時間解析成功: {
2025-08-10 20:38:54    input: '小明每天的晨練課改到早上7點',
2025-08-10 20:38:54    output: '07:00',
2025-08-10 20:38:54    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 20:38:54  }
2025-08-10 20:38:55  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:38:55  📊 規則提取置信度: 0.67
2025-08-10 20:38:55  🤖 啟用 AI 輔助提取...
2025-08-10 20:38:56  ✅ 最終 slots: {
2025-08-10 20:38:56    studentName: '小明',
2025-08-10 20:38:56    courseName: '晨練課',
2025-08-10 20:38:56    scheduleTime: '07:00',
2025-08-10 20:38:56    recurring: false
2025-08-10 20:38:56  }
2025-08-10 20:38:56  {"ts":"2025-08-10T20:38:56.081Z","lvl":"info","stage":"slots","traceId":"line_1754858334674_pne6r3","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:38:56  🎯 執行任務: create_recurring_course
2025-08-10 20:38:56  🎯 開始處理新增課程任務
2025-08-10 20:38:56  📋 接收參數: {
2025-08-10 20:38:56    studentName: '小明',
2025-08-10 20:38:56    courseName: '晨練課',
2025-08-10 20:38:56    scheduleTime: '07:00',
2025-08-10 20:38:56    recurring: false
2025-08-10 20:38:56  }
2025-08-10 20:38:56  📊 任務執行結果: {
2025-08-10 20:38:56    success: false,
2025-08-10 20:38:56    code: 'MISSING_FIELDS',
2025-08-10 20:38:56    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 20:38:56    expectingInput: true,
2025-08-10 20:38:56    missingFields: [ '課程日期' ]
2025-08-10 20:38:56  }
2025-08-10 20:38:56  {"ts":"2025-08-10T20:38:56.223Z","lvl":"info","stage":"task","traceId":"line_1754858334674_pne6r3","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 20:38:56  🔍 檢查 replyToken: test-reply-token-1754858334416
2025-08-10 20:38:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:38:56  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 20:38:56  ✅ 最終 slots: {
2025-08-10 20:38:56    studentName: '小明',
2025-08-10 20:38:56    courseName: '晨練課',
2025-08-10 20:38:56    scheduleTime: '07:00',
2025-08-10 20:38:56    recurring: false
2025-08-10 20:38:56  }
2025-08-10 20:38:56  {"ts":"2025-08-10T20:38:56.081Z","lvl":"info","stage":"slots","traceId":"line_1754858334674_pne6r3","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:38:56  🎯 執行任務: create_recurring_course
2025-08-10 20:38:56  🎯 開始處理新增課程任務
2025-08-10 20:38:56  📋 接收參數: {
2025-08-10 20:38:56    studentName: '小明',
2025-08-10 20:38:56    courseName: '晨練課',
2025-08-10 20:38:56    scheduleTime: '07:00',
2025-08-10 20:38:56    recurring: false
2025-08-10 20:38:56  }
2025-08-10 20:38:56  📊 任務執行結果: {
2025-08-10 20:38:56    success: false,
2025-08-10 20:38:56    code: 'MISSING_FIELDS',
2025-08-10 20:38:56    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 20:38:56    expectingInput: true,
2025-08-10 20:38:56    missingFields: [ '課程日期' ]
2025-08-10 20:38:56  }
2025-08-10 20:38:56  {"ts":"2025-08-10T20:38:56.223Z","lvl":"info","stage":"task","traceId":"line_1754858334674_pne6r3","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 20:38:56  🔍 檢查 replyToken: test-reply-token-1754858334416
2025-08-10 20:38:56  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 20:38:56  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 20:38:56  
2025-08-10 20:38:56  範例：「小明每週三下午3點數學課」
2025-08-10 20:38:56  {"ts":"2025-08-10T20:38:56.507Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754858334674_pne6r3","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 20:39:09  📨 收到 1 個事件
2025-08-10 20:39:09  📋 事件類型: message
2025-08-10 20:39:09  🔍 完整事件 JSON: {
2025-08-10 20:39:09    "type": "message",
2025-08-10 20:39:09    "message": {
2025-08-10 20:39:09      "type": "text",
2025-08-10 20:39:09      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 20:39:09    },
2025-08-10 20:39:09    "source": {
2025-08-10 20:39:09      "userId": "U_test_user_qa",
2025-08-10 20:39:09      "type": "user"
2025-08-10 20:39:09    },
2025-08-10 20:39:09    "replyToken": "test-reply-token-1754858349748",
2025-08-10 20:39:09    "timestamp": 1754858349748
2025-08-10 20:39:09  }
2025-08-10 20:39:09  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 20:39:10  {"ts":"2025-08-10T20:39:10.036Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 20:39:10  🔍 用戶ID類型: string
2025-08-10 20:39:10  🔍 是否測試用戶: true
2025-08-10 20:39:10  🚀 生產用戶，使用真實 LINE Service
2025-08-10 20:39:10  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 20:39:10  ✅ 規則匹配成功: create_recurring_course
2025-08-10 20:39:10  {"ts":"2025-08-10T20:39:10.178Z","lvl":"info","stage":"nlp","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 20:39:10  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 20:39:10  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 20:39:10  ✅ 時間解析成功: {
2025-08-10 20:39:10    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 20:39:10    output: '15:00',
2025-08-10 20:39:10    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 20:39:10  }
2025-08-10 20:39:10  🧠 使用對話上下文增強 slots 提取
2025-08-10 20:39:10  📊 規則提取置信度: 0.67
2025-08-10 20:39:10  🤖 啟用 AI 輔助提取...
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
2025-08-10 20:39:12  ✅ 最終 slots: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  {"ts":"2025-08-10T20:39:12.499Z","lvl":"info","stage":"slots","traceId":"line_1754858350036_mx255v","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 20:39:12  🎯 執行任務: create_recurring_course
2025-08-10 20:39:12  🎯 開始處理新增課程任務
2025-08-10 20:39:12  📋 接收參數: {
2025-08-10 20:39:12    studentName: 'Lumi',
2025-08-10 20:39:12    courseName: '鋼琴課',
2025-08-10 20:39:12    scheduleTime: '15:00',
2025-08-10 20:39:12    recurring: true
2025-08-10 20:39:12  }
2025-08-10 20:39:12  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 20:39:12  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 20:39:12      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 20:39:12      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 20:39:12      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 20:39:12      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 20:39:12      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 20:39:12      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 20:39:12      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 20:39:12      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 20:39:12      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 20:39:12      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 20:39:12    config: {
2025-08-10 20:39:12      url: URL {
2025-08-10 20:39:12        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        origin: 'https://www.googleapis.com',
2025-08-10 20:39:12        protocol: 'https:',
2025-08-10 20:39:12        username: '',
2025-08-10 20:39:12        password: '',
2025-08-10 20:39:12        host: 'www.googleapis.com',
2025-08-10 20:39:12        hostname: 'www.googleapis.com',
2025-08-10 20:39:12        port: '',
2025-08-10 20:39:12        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 20:39:12        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 20:39:12        searchParams: URLSearchParams {
2025-08-10 20:39:12          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12          'singleEvents' => 'true',
2025-08-10 20:39:12          'orderBy' => 'startTime' },
2025-08-10 20:39:12        hash: ''
2025-08-10 20:39:12      },
2025-08-10 20:39:12      method: 'GET',
2025-08-10 20:39:12      apiVersion: '',
2025-08-10 20:39:12      userAgentDirectives: [ [Object] ],
2025-08-10 20:39:12      paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12      headers: Headers {
2025-08-10 20:39:12        'accept-encoding': 'gzip',
2025-08-10 20:39:12        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      params: {
2025-08-10 20:39:12        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 20:39:12        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 20:39:12        singleEvents: true,
2025-08-10 20:39:12        orderBy: 'startTime'
2025-08-10 20:39:12      },
2025-08-10 20:39:12      validateStatus: [Function (anonymous)],
2025-08-10 20:39:12      retry: true,
2025-08-10 20:39:12      responseType: 'unknown',
2025-08-10 20:39:12      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 20:39:12      retryConfig: {
2025-08-10 20:39:12        currentRetryAttempt: 0,
2025-08-10 20:39:12        retry: 3,
2025-08-10 20:39:12        httpMethodsToRetry: [Array],
2025-08-10 20:39:12        noResponseRetries: 2,
2025-08-10 20:39:12        retryDelayMultiplier: 2,
2025-08-10 20:39:12        timeOfFirstRequest: 1754858352875,
2025-08-10 20:39:12        totalTimeout: 9007199254740991,
2025-08-10 20:39:12        maxRetryDelay: 9007199254740991,
2025-08-10 20:39:12        statusCodesToRetry: [Array]
2025-08-10 20:39:12      }
2025-08-10 20:39:12    },
2025-08-10 20:39:12    response: Response {
2025-08-10 20:39:12      size: 0,
2025-08-10 20:39:12      data: { error: [Object] },
2025-08-10 20:39:12      config: {
2025-08-10 20:39:12        url: URL {},
2025-08-10 20:39:12        method: 'GET',
2025-08-10 20:39:12        apiVersion: '',
2025-08-10 20:39:12        userAgentDirectives: [Array],
2025-08-10 20:39:12        paramsSerializer: [Function (anonymous)],
2025-08-10 20:39:12        headers: Headers {
2025-08-10 20:39:12          'accept-encoding': 'gzip',
2025-08-10 20:39:12          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 20:39:12          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 20:39:12          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 20:39:12        },
2025-08-10 20:39:12        params: [Object],
2025-08-10 20:39:12        validateStatus: [Function (anonymous)],
2025-08-10 20:39:12        retry: true,
2025-08-10 20:39:12        responseType: 'unknown',
2025-08-10 20:39:12        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 20:39:12      },
2025-08-10 20:39:12      Symbol(Body internals): {
