2025-08-10 18:14:30  📨 收到 1 個事件
2025-08-10 18:14:30  📋 事件類型: message
2025-08-10 18:14:30  🔍 完整事件 JSON: {
2025-08-10 18:14:30    "type": "message",
2025-08-10 18:14:30    "message": {
2025-08-10 18:14:30      "type": "text",
2025-08-10 18:14:30      "text": "今天小明的數學課學了分數加減法"
2025-08-10 18:14:30    },
2025-08-10 18:14:30    "source": {
2025-08-10 18:14:30      "userId": "U_test_user_qa",
2025-08-10 18:14:30      "type": "user"
2025-08-10 18:14:30    },
2025-08-10 18:14:30    "replyToken": "test-reply-token-1754849670376",
2025-08-10 18:14:30    "timestamp": 1754849670376
2025-08-10 18:14:30  }
2025-08-10 18:14:30  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:14:30  {"ts":"2025-08-10T18:14:30.546Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849670546_d9r0nz","userId":"U_test_user_qa","textIn":"今天小明的數學課學了分數加減法"}
2025-08-10 18:14:30  🔍 用戶ID類型: string
2025-08-10 18:14:30  🔍 是否測試用戶: true
2025-08-10 18:14:30  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:14:30  🎯 開始解析意圖: 今天小明的數學課學了分數加減法 (用戶: U_test_user_qa)
2025-08-10 18:14:30  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:14:30  {"ts":"2025-08-10T18:14:30.688Z","lvl":"info","stage":"nlp","traceId":"line_1754849670546_d9r0nz","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:14:30  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:14:30  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:14:30  📊 規則提取置信度: 1.00
2025-08-10 18:14:30  🤖 啟用 AI 輔助提取...
2025-08-10 18:14:32  ✅ 最終 slots: {
2025-08-10 18:14:32    studentName: '小明',
2025-08-10 18:14:32    courseName: '數學課',
2025-08-10 18:14:32    timeReference: 'today',
2025-08-10 18:14:32    content: '分數加減法'
2025-08-10 18:14:32  }
2025-08-10 18:14:32  {"ts":"2025-08-10T18:14:32.464Z","lvl":"info","stage":"slots","traceId":"line_1754849670546_d9r0nz","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 18:14:32  🎯 執行任務: record_content
2025-08-10 18:14:32  📝 開始處理記錄課程內容任務: {
2025-08-10 18:14:32    studentName: '小明',
2025-08-10 18:14:32    courseName: '數學課',
2025-08-10 18:14:32    timeReference: 'today',
2025-08-10 18:14:32    content: '分數加減法'
2025-08-10 18:14:32  }
2025-08-10 18:14:32  🔍 查找課程: 小明 - 數學課 - 2025-08-10
2025-08-10 18:14:32  ✅ 找到匹配的單次課程: 0HR56QmxvJyJ6QSsvkVe
2025-08-10 18:14:32  ✅ 文檔已添加到 course_contents: GZ8PARfGrzHIf4hXAT6C
2025-08-10 18:14:32  ✅ 課程內容記錄已儲存: GZ8PARfGrzHIf4hXAT6C
2025-08-10 18:14:32  ✅ 文檔已更新 (courses/0HR56QmxvJyJ6QSsvkVe)
2025-08-10 18:14:32  📊 任務執行結果: {
2025-08-10 18:14:32    success: true,
2025-08-10 18:14:32    code: 'RECORD_CONTENT_OK',
2025-08-10 18:14:32    message: '✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法',
2025-08-10 18:14:32    data: {
2025-08-10 18:14:32      recordId: 'GZ8PARfGrzHIf4hXAT6C',
2025-08-10 18:14:32      courseId: '0HR56QmxvJyJ6QSsvkVe',
2025-08-10 18:14:32      targetDate: '2025-08-10'
2025-08-10 18:14:32    }
2025-08-10 18:14:32  }
2025-08-10 18:14:32  {"ts":"2025-08-10T18:14:32.949Z","lvl":"info","stage":"task","traceId":"line_1754849670546_d9r0nz","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":485}
2025-08-10 18:14:33  🔍 檢查 replyToken: test-reply-token-1754849670376
2025-08-10 18:14:33  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:14:33  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:14:33  📚 課程：小明 - 數學課
2025-08-10 18:14:33  📅 日期：2025-08-10
2025-08-10 18:14:33  💬 內容：分數加減法
2025-08-10 18:14:33  {"ts":"2025-08-10T18:14:33.233Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849670546_d9r0nz","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📚 課程：小明 - 數學課\n📅 日期：2025-08-10\n💬 內容：分數加減法","quickReply":true}
2025-08-10 18:14:46  📨 收到 1 個事件
2025-08-10 18:14:46  📋 事件類型: message
2025-08-10 18:14:46  🔍 完整事件 JSON: {
2025-08-10 18:14:46    "type": "message",
2025-08-10 18:14:46    "message": {
2025-08-10 18:14:46      "type": "text",
2025-08-10 18:14:46      "text": "補記一下昨天Lumi鋼琴課的內容，練習了小星星"
2025-08-10 18:14:46    },
2025-08-10 18:14:46    "source": {
2025-08-10 18:14:46      "userId": "U_test_user_qa",
2025-08-10 18:14:46      "type": "user"
2025-08-10 18:14:46    },
2025-08-10 18:14:46    "replyToken": "test-reply-token-1754849686223",
2025-08-10 18:14:46    "timestamp": 1754849686223
2025-08-10 18:14:46  }
2025-08-10 18:14:46  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:14:46  {"ts":"2025-08-10T18:14:46.400Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849686400_ues5ac","userId":"U_test_user_qa","textIn":"補記一下昨天Lumi鋼琴課的內容，練習了小星星"}
2025-08-10 18:14:46  🔍 用戶ID類型: string
2025-08-10 18:14:46  🔍 是否測試用戶: true
2025-08-10 18:14:46  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:14:46  🎯 開始解析意圖: 補記一下昨天Lumi鋼琴課的內容，練習了小星星 (用戶: U_test_user_qa)
2025-08-10 18:14:46  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:14:46  {"ts":"2025-08-10T18:14:46.541Z","lvl":"info","stage":"nlp","traceId":"line_1754849686400_ues5ac","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:14:46  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:14:46  📊 規則提取置信度: 0.33
2025-08-10 18:14:46  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 18:14:47  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:14:47  {"ts":"2025-08-10T18:14:47.839Z","lvl":"info","stage":"slots","traceId":"line_1754849686400_ues5ac","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 18:14:47  🎯 執行任務: record_content
2025-08-10 18:14:47  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:14:47  ✅ 文檔已添加到 course_contents: kHFEbY3QBu0v9YMBWjNl
2025-08-10 18:14:47  ✅ 課程內容記錄已儲存: kHFEbY3QBu0v9YMBWjNl
2025-08-10 18:14:47  📊 任務執行結果: {
2025-08-10 18:14:47    success: true,
2025-08-10 18:14:47    code: 'RECORD_CONTENT_OK',
2025-08-10 18:14:47    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 18:14:47  ✅ 最終 slots: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:14:47  {"ts":"2025-08-10T18:14:47.839Z","lvl":"info","stage":"slots","traceId":"line_1754849686400_ues5ac","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["courseName","timeReference","content"]}
2025-08-10 18:14:47  🎯 執行任務: record_content
2025-08-10 18:14:47  📝 開始處理記錄課程內容任務: { courseName: '鋼琴課', timeReference: 'yesterday', content: '練習了小星星' }
2025-08-10 18:14:47  ✅ 文檔已添加到 course_contents: kHFEbY3QBu0v9YMBWjNl
2025-08-10 18:14:47  ✅ 課程內容記錄已儲存: kHFEbY3QBu0v9YMBWjNl
2025-08-10 18:14:47  📊 任務執行結果: {
2025-08-10 18:14:47    success: true,
2025-08-10 18:14:47    code: 'RECORD_CONTENT_OK',
2025-08-10 18:14:47    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星',
2025-08-10 18:14:47    data: {
2025-08-10 18:14:47      recordId: 'kHFEbY3QBu0v9YMBWjNl',
2025-08-10 18:14:47      courseId: null,
2025-08-10 18:14:47      targetDate: '2025-08-09'
2025-08-10 18:14:47    }
2025-08-10 18:14:47  }
2025-08-10 18:14:47  {"ts":"2025-08-10T18:14:47.924Z","lvl":"info","stage":"task","traceId":"line_1754849686400_ues5ac","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":84}
2025-08-10 18:14:48  🔍 檢查 replyToken: test-reply-token-1754849686223
2025-08-10 18:14:48  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:14:48  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:14:48  📝 記錄為獨立內容
2025-08-10 18:14:48  📚 課程：鋼琴課
2025-08-10 18:14:48  📅 日期：2025-08-09
2025-08-10 18:14:48  💬 內容：練習了小星星
2025-08-10 18:14:48  {"ts":"2025-08-10T18:14:48.207Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849686400_ues5ac","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n📚 課程：鋼琴課\n📅 日期：2025-08-09\n💬 內容：練習了小星星","quickReply":true}
2025-08-10 18:15:05  📨 收到 1 個事件
2025-08-10 18:15:05  📋 事件類型: message
2025-08-10 18:15:05  🔍 完整事件 JSON: {
2025-08-10 18:15:05    "type": "message",
2025-08-10 18:15:05    "message": {
2025-08-10 18:15:05      "type": "text",
2025-08-10 18:15:05      "text": "小明昨天數學課學了什麼？"
2025-08-10 18:15:05    },
2025-08-10 18:15:05    "source": {
2025-08-10 18:15:05      "userId": "U_test_user_qa",
2025-08-10 18:15:05      "type": "user"
2025-08-10 18:15:05    },
2025-08-10 18:15:05    "replyToken": "test-reply-token-1754849705708",
2025-08-10 18:15:05    "timestamp": 1754849705708
2025-08-10 18:15:05  }
2025-08-10 18:15:05  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:15:05  {"ts":"2025-08-10T18:15:05.881Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849705881_dotvjy","userId":"U_test_user_qa","textIn":"小明昨天數學課學了什麼？"}
2025-08-10 18:15:05  🔍 用戶ID類型: string
2025-08-10 18:15:05  🔍 是否測試用戶: true
2025-08-10 18:15:05  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:15:05  🎯 開始解析意圖: 小明昨天數學課學了什麼？ (用戶: U_test_user_qa)
2025-08-10 18:15:06  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:15:06  {"ts":"2025-08-10T18:15:06.023Z","lvl":"info","stage":"nlp","traceId":"line_1754849705881_dotvjy","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:15:06  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:15:06  📊 規則提取置信度: 0.67
2025-08-10 18:15:06  🤖 啟用 AI 輔助提取...
2025-08-10 18:15:08  ✅ 最終 slots: {
2025-08-10 18:15:08    studentName: '小明',
2025-08-10 18:15:08    courseName: '數學課',
2025-08-10 18:15:08    timeReference: 'yesterday',
2025-08-10 18:15:08    content: '什麼？'
2025-08-10 18:15:08  }
2025-08-10 18:15:08  {"ts":"2025-08-10T18:15:08.083Z","lvl":"info","stage":"slots","traceId":"line_1754849705881_dotvjy","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 18:15:08  🎯 執行任務: record_content
2025-08-10 18:15:08  📝 開始處理記錄課程內容任務: {
2025-08-10 18:15:08    studentName: '小明',
2025-08-10 18:15:08    courseName: '數學課',
2025-08-10 18:15:08    timeReference: 'yesterday',
2025-08-10 18:15:08    content: '什麼？'
2025-08-10 18:15:08  }
2025-08-10 18:15:08  🔍 查找課程: 小明 - 數學課 - 2025-08-09
2025-08-10 18:15:08  ❓ 未找到完全匹配的課程
2025-08-10 18:15:08  ✅ 文檔已添加到 course_contents: yZVyqKN5OZxOTFZh8irO
2025-08-10 18:15:08  ✅ 課程內容記錄已儲存: yZVyqKN5OZxOTFZh8irO
2025-08-10 18:15:08  📊 任務執行結果: {
2025-08-10 18:15:08    success: true,
2025-08-10 18:15:08    code: 'RECORD_CONTENT_OK',
2025-08-10 18:15:08    message: '✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？',
2025-08-10 18:15:08    data: {
2025-08-10 18:15:08      recordId: 'yZVyqKN5OZxOTFZh8irO',
2025-08-10 18:15:08      courseId: null,
2025-08-10 18:15:08      targetDate: '2025-08-09'
2025-08-10 18:15:08    }
2025-08-10 18:15:08  }
2025-08-10 18:15:08  {"ts":"2025-08-10T18:15:08.318Z","lvl":"info","stage":"task","traceId":"line_1754849705881_dotvjy","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":235}
2025-08-10 18:15:08  🔍 檢查 replyToken: test-reply-token-1754849705708
2025-08-10 18:15:08  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:15:08  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:15:08  📝 記錄為獨立內容
2025-08-10 18:15:08  👨‍🎓 學生：小明
2025-08-10 18:15:08  📚 課程：數學課
2025-08-10 18:15:08  📅 日期：2025-08-09
2025-08-10 18:15:08  💬 內容：什麼？
2025-08-10 18:15:08  {"ts":"2025-08-10T18:15:08.600Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849705881_dotvjy","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：數學課\n📅 日期：2025-08-09\n💬 內容：什麼？","quickReply":true}
2025-08-10 18:15:15  📨 收到 1 個事件
2025-08-10 18:15:15  📋 事件類型: message
2025-08-10 18:15:15  🔍 完整事件 JSON: {
2025-08-10 18:15:15    "type": "message",
2025-08-10 18:15:15    "message": {
2025-08-10 18:15:15      "type": "text",
2025-08-10 18:15:15      "text": "記錄小明今天化學課的內容"
2025-08-10 18:15:15    },
2025-08-10 18:15:15    "source": {
2025-08-10 18:15:15      "userId": "U_test_user_qa",
2025-08-10 18:15:15      "type": "user"
2025-08-10 18:15:15  📨 收到 1 個事件
2025-08-10 18:15:15  📋 事件類型: message
2025-08-10 18:15:15  🔍 完整事件 JSON: {
2025-08-10 18:15:15    "type": "message",
2025-08-10 18:15:15    "message": {
2025-08-10 18:15:15      "type": "text",
2025-08-10 18:15:15      "text": "記錄小明今天化學課的內容"
2025-08-10 18:15:15    },
2025-08-10 18:15:15    "source": {
2025-08-10 18:15:15      "userId": "U_test_user_qa",
2025-08-10 18:15:15      "type": "user"
2025-08-10 18:15:15    },
2025-08-10 18:15:15    "replyToken": "test-reply-token-1754849715681",
2025-08-10 18:15:15    "timestamp": 1754849715681
2025-08-10 18:15:15  }
2025-08-10 18:15:15  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:15:15  {"ts":"2025-08-10T18:15:15.862Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849715862_p653c5","userId":"U_test_user_qa","textIn":"記錄小明今天化學課的內容"}
2025-08-10 18:15:15  🔍 用戶ID類型: string
2025-08-10 18:15:15  🔍 是否測試用戶: true
2025-08-10 18:15:15  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:15:15  🎯 開始解析意圖: 記錄小明今天化學課的內容 (用戶: U_test_user_qa)
2025-08-10 18:15:16  📝 內容記錄優先規則命中 → record_content
2025-08-10 18:15:16  {"ts":"2025-08-10T18:15:16.003Z","lvl":"info","stage":"nlp","traceId":"line_1754849715862_p653c5","userId":"U_test_user_qa","intent":"record_content"}
2025-08-10 18:15:16  🔍 開始提取 slots - 意圖: record_content (用戶: U_test_user_qa)
2025-08-10 18:15:16  📊 規則提取置信度: 0.67
2025-08-10 18:15:16  🤖 啟用 AI 輔助提取...
2025-08-10 18:15:17  ✅ 最終 slots: {
2025-08-10 18:15:17    studentName: '小明',
2025-08-10 18:15:17    courseName: '化學課',
2025-08-10 18:15:17    timeReference: 'today',
2025-08-10 18:15:17    content: '小明今天化學課的內容'
2025-08-10 18:15:17  }
2025-08-10 18:15:17  {"ts":"2025-08-10T18:15:17.310Z","lvl":"info","stage":"slots","traceId":"line_1754849715862_p653c5","userId":"U_test_user_qa","intent":"record_content","slotsSummary":["studentName","courseName","timeReference","content"]}
2025-08-10 18:15:17  🎯 執行任務: record_content
2025-08-10 18:15:17  📝 開始處理記錄課程內容任務: {
2025-08-10 18:15:17    studentName: '小明',
2025-08-10 18:15:17    courseName: '化學課',
2025-08-10 18:15:17    timeReference: 'today',
2025-08-10 18:15:17    content: '小明今天化學課的內容'
2025-08-10 18:15:17  }
2025-08-10 18:15:17  🔍 查找課程: 小明 - 化學課 - 2025-08-10
2025-08-10 18:15:17  ❓ 未找到完全匹配的課程
2025-08-10 18:15:17  ✅ 文檔已添加到 course_contents: jTuPR4W8DXhvuPgIXAXb
2025-08-10 18:15:17  ✅ 課程內容記錄已儲存: jTuPR4W8DXhvuPgIXAXb
2025-08-10 18:15:17  📊 任務執行結果: {
2025-08-10 18:15:17    success: true,
2025-08-10 18:15:17    code: 'RECORD_CONTENT_OK',
2025-08-10 18:15:17    message: '✅ 課程內容已成功記錄！\n' +
2025-08-10 18:15:17      '📝 記錄為獨立內容\n' +
2025-08-10 18:15:17      '👨‍🎓 學生：小明\n' +
2025-08-10 18:15:17      '📚 課程：化學課\n' +
2025-08-10 18:15:17      '📅 日期：2025-08-10\n' +
2025-08-10 18:15:17      '💬 內容：小明今天化學課的內容',
2025-08-10 18:15:17    data: {
2025-08-10 18:15:17      recordId: 'jTuPR4W8DXhvuPgIXAXb',
2025-08-10 18:15:17      courseId: null,
2025-08-10 18:15:17      targetDate: '2025-08-10'
2025-08-10 18:15:17    }
2025-08-10 18:15:17  }
2025-08-10 18:15:17  {"ts":"2025-08-10T18:15:17.739Z","lvl":"info","stage":"task","traceId":"line_1754849715862_p653c5","userId":"U_test_user_qa","intent":"record_content","success":true,"code":"RECORD_CONTENT_OK","latencyMs":429}
2025-08-10 18:15:18  🔍 檢查 replyToken: test-reply-token-1754849715681
2025-08-10 18:15:18  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:15:18  📤 [測試模式] 實際業務回覆: ✅ 課程內容已成功記錄！
2025-08-10 18:15:18  📝 記錄為獨立內容
2025-08-10 18:15:18  👨‍🎓 學生：小明
2025-08-10 18:15:18  📚 課程：化學課
2025-08-10 18:15:18  📅 日期：2025-08-10
2025-08-10 18:15:18  💬 內容：小明今天化學課的內容
2025-08-10 18:15:18  {"ts":"2025-08-10T18:15:18.022Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849715862_p653c5","userId":"U_test_user_qa","textOut":"✅ 課程內容已成功記錄！\n📝 記錄為獨立內容\n👨‍🎓 學生：小明\n📚 課程：化學課\n📅 日期：2025-08-10\n💬 內容：小明今天化學課的內容","quickReply":true}
2025-08-10 18:15:30  📨 收到 1 個事件
2025-08-10 18:15:30  📋 事件類型: message
2025-08-10 18:15:30  🔍 完整事件 JSON: {
2025-08-10 18:15:30    "type": "message",
2025-08-10 18:15:30    "message": {
2025-08-10 18:15:30      "type": "text",
2025-08-10 18:15:30      "text": "提醒我小明的數學課"
2025-08-10 18:15:30    },
2025-08-10 18:15:30    "source": {
2025-08-10 18:15:30      "userId": "U_test_user_qa",
2025-08-10 18:15:30      "type": "user"
2025-08-10 18:15:30    },
2025-08-10 18:15:30    "replyToken": "test-reply-token-1754849730749",
2025-08-10 18:15:30    "timestamp": 1754849730749
2025-08-10 18:15:30  }
2025-08-10 18:15:30  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:15:30  {"ts":"2025-08-10T18:15:30.919Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849730919_1hrzgv","userId":"U_test_user_qa","textIn":"提醒我小明的數學課"}
2025-08-10 18:15:30  🔍 用戶ID類型: string
2025-08-10 18:15:30  🔍 是否測試用戶: true
2025-08-10 18:15:30  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:15:30  🎯 開始解析意圖: 提醒我小明的數學課 (用戶: U_test_user_qa)
2025-08-10 18:15:31  ✅ 規則匹配成功: set_reminder
2025-08-10 18:15:31  {"ts":"2025-08-10T18:15:31.060Z","lvl":"info","stage":"nlp","traceId":"line_1754849730919_1hrzgv","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 18:15:31  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 18:15:31  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:15:31  📊 規則提取置信度: 0.67
2025-08-10 18:15:31  🤖 啟用 AI 輔助提取...
2025-08-10 18:15:32  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:15:32  {"ts":"2025-08-10T18:15:32.871Z","lvl":"info","stage":"slots","traceId":"line_1754849730919_1hrzgv","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:15:32  🎯 執行任務: set_reminder
2025-08-10 18:15:32  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:15:32  ✅ 最終 slots: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:15:32  {"ts":"2025-08-10T18:15:32.871Z","lvl":"info","stage":"slots","traceId":"line_1754849730919_1hrzgv","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:15:32  🎯 執行任務: set_reminder
2025-08-10 18:15:32  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '數學課' }
2025-08-10 18:15:33  📚 找到課程: 小明 的 數學課 (2025-08-11 14:00)
2025-08-10 18:15:33  📅 課程時間: 2025/8/11 下午2:00:00
2025-08-10 18:15:33  ⏰ 提醒時間: 2025/8/11 下午1:30:00
2025-08-10 18:15:33  ✅ 提醒記錄已創建: M5kz8w8bA14tc7pBdcuK
2025-08-10 18:15:33  ✅ 提醒設定成功: M5kz8w8bA14tc7pBdcuK
2025-08-10 18:15:33  📊 任務執行結果: {
2025-08-10 18:15:33    success: true,
2025-08-10 18:15:33    code: 'REMINDER_SET_OK',
2025-08-10 18:15:33    message: '✅ 提醒設定完成！\n' +
2025-08-10 18:15:33      '📚 課程：小明 的 數學課\n' +
2025-08-10 18:15:33      '📅 上課時間：8/11 下午02:00\n' +
2025-08-10 18:15:33      '⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)'
2025-08-10 18:15:33  }
2025-08-10 18:15:33  {"ts":"2025-08-10T18:15:33.188Z","lvl":"info","stage":"task","traceId":"line_1754849730919_1hrzgv","userId":"U_test_user_qa","intent":"set_reminder","success":true,"code":"REMINDER_SET_OK","latencyMs":316}
2025-08-10 18:15:33  🔍 檢查 replyToken: test-reply-token-1754849730749
2025-08-10 18:15:33  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:15:33  📤 [測試模式] 實際業務回覆: ✅ 提醒設定完成！
2025-08-10 18:15:33  📚 課程：小明 的 數學課
2025-08-10 18:15:33  📅 上課時間：8/11 下午02:00
2025-08-10 18:15:33  ⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)
2025-08-10 18:15:33  {"ts":"2025-08-10T18:15:33.474Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849730919_1hrzgv","userId":"U_test_user_qa","textOut":"✅ 提醒設定完成！\n📚 課程：小明 的 數學課\n📅 上課時間：8/11 下午02:00\n⏰ 提醒時間：8/11 下午01:30 (提前 30 分鐘)","quickReply":true}
2025-08-10 18:15:46  📨 收到 1 個事件
2025-08-10 18:15:46  📋 事件類型: message
2025-08-10 18:15:46  🔍 完整事件 JSON: {
2025-08-10 18:15:46    "type": "message",
2025-08-10 18:15:46    "message": {
2025-08-10 18:15:46      "type": "text",
2025-08-10 18:15:46      "text": "Lumi鋼琴課前1小時提醒我"
2025-08-10 18:15:46    },
2025-08-10 18:15:46    "source": {
2025-08-10 18:15:46      "userId": "U_test_user_qa",
2025-08-10 18:15:46      "type": "user"
2025-08-10 18:15:46    },
2025-08-10 18:15:46    "replyToken": "test-reply-token-1754849746091",
2025-08-10 18:15:46    "timestamp": 1754849746091
2025-08-10 18:15:46  }
2025-08-10 18:15:46  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:15:46  {"ts":"2025-08-10T18:15:46.260Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849746260_f7vx1r","userId":"U_test_user_qa","textIn":"Lumi鋼琴課前1小時提醒我"}
2025-08-10 18:15:46  🔍 用戶ID類型: string
2025-08-10 18:15:46  🔍 是否測試用戶: true
2025-08-10 18:15:46  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:15:46  🎯 開始解析意圖: Lumi鋼琴課前1小時提醒我 (用戶: U_test_user_qa)
2025-08-10 18:15:46  ✅ 規則匹配成功: set_reminder
2025-08-10 18:15:46  {"ts":"2025-08-10T18:15:46.401Z","lvl":"info","stage":"nlp","traceId":"line_1754849746260_f7vx1r","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 18:15:46  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 18:15:46  📊 規則提取置信度: 0.67
2025-08-10 18:15:46  🤖 啟用 AI 輔助提取...
2025-08-10 18:15:48  ✅ 最終 slots: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 18:15:48  {"ts":"2025-08-10T18:15:48.432Z","lvl":"info","stage":"slots","traceId":"line_1754849746260_f7vx1r","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["courseName","reminderTime","reminderNote"]}
2025-08-10 18:15:48  🎯 執行任務: set_reminder
2025-08-10 18:15:48  🔔 開始處理設定提醒任務: { courseName: '鋼琴課', reminderTime: 60, reminderNote: '提前' }
2025-08-10 18:15:48  📊 任務執行結果: {
2025-08-10 18:15:48    success: false,
2025-08-10 18:15:48    code: 'MISSING_STUDENT',
2025-08-10 18:15:48    message: '❌ 請提供學生姓名，例如：「提醒我小明的數學課」'
2025-08-10 18:15:48  }
2025-08-10 18:15:48  {"ts":"2025-08-10T18:15:48.432Z","lvl":"info","stage":"task","traceId":"line_1754849746260_f7vx1r","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"MISSING_STUDENT","latencyMs":0}
2025-08-10 18:15:48  🔍 檢查 replyToken: test-reply-token-1754849746091
2025-08-10 18:15:48  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:15:48  📤 [測試模式] 實際業務回覆: ❌ 請提供學生姓名，例如：「提醒我小明的數學課」
2025-08-10 18:15:48  {"ts":"2025-08-10T18:15:48.715Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849746260_f7vx1r","userId":"U_test_user_qa","textOut":"❌ 請提供學生姓名，例如：「提醒我小明的數學課」","quickReply":false}
2025-08-10 18:16:01  📨 收到 1 個事件
2025-08-10 18:16:01  📋 事件類型: message
2025-08-10 18:16:01  🔍 完整事件 JSON: {
2025-08-10 18:16:01    "type": "message",
2025-08-10 18:16:01    "message": {
2025-08-10 18:16:01      "type": "text",
2025-08-10 18:16:01      "text": "提醒我小明的物理課"
2025-08-10 18:16:01    },
2025-08-10 18:16:01    "source": {
2025-08-10 18:16:01      "userId": "U_test_user_qa",
2025-08-10 18:16:01      "type": "user"
2025-08-10 18:16:01    },
2025-08-10 18:16:01    "replyToken": "test-reply-token-1754849761330",
2025-08-10 18:16:01    "timestamp": 1754849761330
2025-08-10 18:16:01  }
2025-08-10 18:16:01  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:16:01  {"ts":"2025-08-10T18:16:01.496Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849761496_qcwtm5","userId":"U_test_user_qa","textIn":"提醒我小明的物理課"}
2025-08-10 18:16:01  🔍 用戶ID類型: string
2025-08-10 18:16:01  🔍 是否測試用戶: true
2025-08-10 18:16:01  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:16:01  🎯 開始解析意圖: 提醒我小明的物理課 (用戶: U_test_user_qa)
2025-08-10 18:16:01  ✅ 規則匹配成功: set_reminder
2025-08-10 18:16:01  {"ts":"2025-08-10T18:16:01.638Z","lvl":"info","stage":"nlp","traceId":"line_1754849761496_qcwtm5","userId":"U_test_user_qa","intent":"set_reminder"}
2025-08-10 18:16:01  🔍 開始提取 slots - 意圖: set_reminder (用戶: U_test_user_qa)
2025-08-10 18:16:01  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:16:01  📊 規則提取置信度: 0.67
2025-08-10 18:16:01  🤖 啟用 AI 輔助提取...
2025-08-10 18:16:03  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:16:03  {"ts":"2025-08-10T18:16:03.536Z","lvl":"info","stage":"slots","traceId":"line_1754849761496_qcwtm5","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:16:03  🎯 執行任務: set_reminder
2025-08-10 18:16:03  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:16:03  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 18:16:03  📊 任務執行結果: {
2025-08-10 18:16:03    success: false,
2025-08-10 18:16:03    code: 'NOT_FOUND',
2025-08-10 18:16:03  ✅ 最終 slots: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:16:03  {"ts":"2025-08-10T18:16:03.536Z","lvl":"info","stage":"slots","traceId":"line_1754849761496_qcwtm5","userId":"U_test_user_qa","intent":"set_reminder","slotsSummary":["studentName","courseName"]}
2025-08-10 18:16:03  🎯 執行任務: set_reminder
2025-08-10 18:16:03  🔔 開始處理設定提醒任務: { studentName: '小明', courseName: '物理課' }
2025-08-10 18:16:03  ❓ 找不到對應課程: 學生=小明, 課程=物理課, 日期=null
2025-08-10 18:16:03  📊 任務執行結果: {
2025-08-10 18:16:03    success: false,
2025-08-10 18:16:03    code: 'NOT_FOUND',
2025-08-10 18:16:03    message: '❌ 找不到 小明 的 物理課，請確認課程是否已安排'
2025-08-10 18:16:03  }
2025-08-10 18:16:03  {"ts":"2025-08-10T18:16:03.613Z","lvl":"info","stage":"task","traceId":"line_1754849761496_qcwtm5","userId":"U_test_user_qa","intent":"set_reminder","success":false,"code":"NOT_FOUND","latencyMs":77}
2025-08-10 18:16:03  🔍 檢查 replyToken: test-reply-token-1754849761330
2025-08-10 18:16:03  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:16:03  📤 [測試模式] 實際業務回覆: ❌ 找不到 小明 的 物理課，請確認課程是否已安排
2025-08-10 18:16:03  {"ts":"2025-08-10T18:16:03.897Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849761496_qcwtm5","userId":"U_test_user_qa","textOut":"❌ 找不到 小明 的 物理課，請確認課程是否已安排","quickReply":false}
2025-08-10 18:16:16  📨 收到 1 個事件
2025-08-10 18:16:16  📋 事件類型: message
2025-08-10 18:16:16  🔍 完整事件 JSON: {
2025-08-10 18:16:16    "type": "message",
2025-08-10 18:16:16    "message": {
2025-08-10 18:16:16      "type": "text",
2025-08-10 18:16:16      "text": "小明的數學課改到下午4點"
2025-08-10 18:16:16    },
2025-08-10 18:16:16    "source": {
2025-08-10 18:16:16      "userId": "U_test_user_qa",
2025-08-10 18:16:16      "type": "user"
2025-08-10 18:16:16    },
2025-08-10 18:16:16    "replyToken": "test-reply-token-1754849776401",
2025-08-10 18:16:16    "timestamp": 1754849776401
2025-08-10 18:16:16  }
2025-08-10 18:16:16  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:16:16  {"ts":"2025-08-10T18:16:16.652Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849776652_k57t9t","userId":"U_test_user_qa","textIn":"小明的數學課改到下午4點"}
2025-08-10 18:16:16  🔍 用戶ID類型: string
2025-08-10 18:16:16  🔍 是否測試用戶: true
2025-08-10 18:16:16  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:16:16  🎯 開始解析意圖: 小明的數學課改到下午4點 (用戶: U_test_user_qa)
2025-08-10 18:16:16  ✅ 規則匹配成功: modify_course
2025-08-10 18:16:16  {"ts":"2025-08-10T18:16:16.793Z","lvl":"info","stage":"nlp","traceId":"line_1754849776652_k57t9t","userId":"U_test_user_qa","intent":"modify_course"}
2025-08-10 18:16:16  🔍 開始提取 slots - 意圖: modify_course (用戶: U_test_user_qa)
2025-08-10 18:16:16  ❓ 未知意圖，無法提取 slots: modify_course
2025-08-10 18:16:17  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:16:17  📊 規則提取置信度: 0.00
2025-08-10 18:16:17  🔄 規則提取信心度低，AI 輔助增強...
2025-08-10 18:16:18  ✅ 最終 slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' }
2025-08-10 18:16:18  {"ts":"2025-08-10T18:16:18.606Z","lvl":"info","stage":"slots","traceId":"line_1754849776652_k57t9t","userId":"U_test_user_qa","intent":"modify_course","slotsSummary":["studentName","courseName","scheduleTime"]}
2025-08-10 18:16:18  🎯 執行任務: modify_course
2025-08-10 18:16:18  ✏️ 執行修改操作任務: {
2025-08-10 18:16:18    slots: { studentName: '小明', courseName: '數學課', scheduleTime: '下午4點' },
2025-08-10 18:16:18    userId: 'U_test_user_qa'
2025-08-10 18:16:18  }
2025-08-10 18:16:18  📊 任務執行結果: { success: false, message: '❓ 沒有可供修改的最近操作。' }
2025-08-10 18:16:18  {"ts":"2025-08-10T18:16:18.677Z","lvl":"info","stage":"task","traceId":"line_1754849776652_k57t9t","userId":"U_test_user_qa","intent":"modify_course","success":false,"code":null,"latencyMs":71}
2025-08-10 18:16:18  🔍 檢查 replyToken: test-reply-token-1754849776401
2025-08-10 18:16:18  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:16:18  📤 [測試模式] 實際業務回覆: ❓ 沒有可供修改的最近操作。
2025-08-10 18:16:18  {"ts":"2025-08-10T18:16:18.960Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849776652_k57t9t","userId":"U_test_user_qa","textOut":"❓ 沒有可供修改的最近操作。","quickReply":false}
2025-08-10 18:16:31  📨 收到 1 個事件
2025-08-10 18:16:31  📋 事件類型: message
2025-08-10 18:16:31  🔍 完整事件 JSON: {
2025-08-10 18:16:31    "type": "message",
2025-08-10 18:16:31    "message": {
2025-08-10 18:16:31      "type": "text",
2025-08-10 18:16:31      "text": "小明每天的晨練課改到早上7點"
2025-08-10 18:16:31    },
2025-08-10 18:16:31    "source": {
2025-08-10 18:16:31      "userId": "U_test_user_qa",
2025-08-10 18:16:31      "type": "user"
2025-08-10 18:16:31    },
2025-08-10 18:16:31    "replyToken": "test-reply-token-1754849791879",
2025-08-10 18:16:31    "timestamp": 1754849791879
2025-08-10 18:16:31  }
2025-08-10 18:16:31  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:16:32  {"ts":"2025-08-10T18:16:32.044Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849792044_lbi4t2","userId":"U_test_user_qa","textIn":"小明每天的晨練課改到早上7點"}
2025-08-10 18:16:32  🔍 用戶ID類型: string
2025-08-10 18:16:32  🔍 是否測試用戶: true
2025-08-10 18:16:32  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:16:32  🎯 開始解析意圖: 小明每天的晨練課改到早上7點 (用戶: U_test_user_qa)
2025-08-10 18:16:32  ✅ 規則匹配成功: create_recurring_course
2025-08-10 18:16:32  {"ts":"2025-08-10T18:16:32.185Z","lvl":"info","stage":"nlp","traceId":"line_1754849792044_lbi4t2","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 18:16:32  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 18:16:32  🕒 開始高級時間解析: 小明每天的晨練課改到早上7點
2025-08-10 18:16:32  ✅ 時間解析成功: {
2025-08-10 18:16:32    input: '小明每天的晨練課改到早上7點',
2025-08-10 18:16:32    output: '07:00',
2025-08-10 18:16:32    details: { hour: 7, minute: 0, matchType: 'arabic_period', periodInfo: '早上' }
2025-08-10 18:16:32  }
2025-08-10 18:16:32  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:16:32  📊 規則提取置信度: 0.67
2025-08-10 18:16:32  🤖 啟用 AI 輔助提取...
2025-08-10 18:16:34  ✅ 最終 slots: {
2025-08-10 18:16:34    studentName: '小明',
2025-08-10 18:16:34    courseName: '晨練課',
2025-08-10 18:16:34    scheduleTime: '07:00',
2025-08-10 18:16:34    recurring: false
2025-08-10 18:16:34  }
2025-08-10 18:16:34  {"ts":"2025-08-10T18:16:34.120Z","lvl":"info","stage":"slots","traceId":"line_1754849792044_lbi4t2","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:34  🎯 執行任務: create_recurring_course
2025-08-10 18:16:34  🎯 開始處理新增課程任務
2025-08-10 18:16:34  📋 接收參數: {
2025-08-10 18:16:34    studentName: '小明',
2025-08-10 18:16:34  ✅ 最終 slots: {
2025-08-10 18:16:34    studentName: '小明',
2025-08-10 18:16:34    courseName: '晨練課',
2025-08-10 18:16:34    scheduleTime: '07:00',
2025-08-10 18:16:34    recurring: false
2025-08-10 18:16:34  }
2025-08-10 18:16:34  {"ts":"2025-08-10T18:16:34.120Z","lvl":"info","stage":"slots","traceId":"line_1754849792044_lbi4t2","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:34  🎯 執行任務: create_recurring_course
2025-08-10 18:16:34  🎯 開始處理新增課程任務
2025-08-10 18:16:34  📋 接收參數: {
2025-08-10 18:16:34    studentName: '小明',
2025-08-10 18:16:34    courseName: '晨練課',
2025-08-10 18:16:34    scheduleTime: '07:00',
2025-08-10 18:16:34    recurring: false
2025-08-10 18:16:34  }
2025-08-10 18:16:34  📊 任務執行結果: {
2025-08-10 18:16:34    success: false,
2025-08-10 18:16:34    code: 'MISSING_FIELDS',
2025-08-10 18:16:34    message: '❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」',
2025-08-10 18:16:34    expectingInput: true,
2025-08-10 18:16:34    missingFields: [ '課程日期' ]
2025-08-10 18:16:34  }
2025-08-10 18:16:34  {"ts":"2025-08-10T18:16:34.262Z","lvl":"info","stage":"task","traceId":"line_1754849792044_lbi4t2","userId":"U_test_user_qa","intent":"create_recurring_course","success":false,"code":"MISSING_FIELDS","latencyMs":142}
2025-08-10 18:16:34  🔍 檢查 replyToken: test-reply-token-1754849791879
2025-08-10 18:16:34  🧪 檢測到測試 token，跳過真實 LINE API 調用
2025-08-10 18:16:34  📤 [測試模式] 實際業務回覆: ❓ 請提供以下資訊：課程日期
2025-08-10 18:16:34  
2025-08-10 18:16:34  範例：「小明每週三下午3點數學課」
2025-08-10 18:16:34  {"ts":"2025-08-10T18:16:34.545Z","lvl":"info","direction":"outbound","channel":"line","traceId":"line_1754849792044_lbi4t2","userId":"U_test_user_qa","textOut":"❓ 請提供以下資訊：課程日期\n\n範例：「小明每週三下午3點數學課」","quickReply":false}
2025-08-10 18:16:47  📨 收到 1 個事件
2025-08-10 18:16:47  📋 事件類型: message
2025-08-10 18:16:47  🔍 完整事件 JSON: {
2025-08-10 18:16:47    "type": "message",
2025-08-10 18:16:47    "message": {
2025-08-10 18:16:47      "type": "text",
2025-08-10 18:16:47      "text": "Lumi的鋼琴課改成每天下午3點"
2025-08-10 18:16:47    },
2025-08-10 18:16:47    "source": {
2025-08-10 18:16:47      "userId": "U_test_user_qa",
2025-08-10 18:16:47      "type": "user"
2025-08-10 18:16:47    },
2025-08-10 18:16:47    "replyToken": "test-reply-token-1754849807499",
2025-08-10 18:16:47    "timestamp": 1754849807499
2025-08-10 18:16:47  }
2025-08-10 18:16:47  🧹 檢測到 QA 重置上下文請求，清理用戶上下文: U_test_user_qa
2025-08-10 18:16:47  {"ts":"2025-08-10T18:16:47.670Z","lvl":"info","direction":"inbound","channel":"line","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","textIn":"Lumi的鋼琴課改成每天下午3點"}
2025-08-10 18:16:47  🔍 用戶ID類型: string
2025-08-10 18:16:47  🔍 是否測試用戶: true
2025-08-10 18:16:47  🚀 生產用戶，使用真實 LINE Service
2025-08-10 18:16:47  🎯 開始解析意圖: Lumi的鋼琴課改成每天下午3點 (用戶: U_test_user_qa)
2025-08-10 18:16:47  ✅ 規則匹配成功: create_recurring_course
2025-08-10 18:16:47  {"ts":"2025-08-10T18:16:47.812Z","lvl":"info","stage":"nlp","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course"}
2025-08-10 18:16:47  🔍 開始提取 slots - 意圖: create_recurring_course (用戶: U_test_user_qa)
2025-08-10 18:16:47  🕒 開始高級時間解析: Lumi的鋼琴課改成每天下午3點
2025-08-10 18:16:47  ✅ 時間解析成功: {
2025-08-10 18:16:47    input: 'Lumi的鋼琴課改成每天下午3點',
2025-08-10 18:16:47    output: '15:00',
2025-08-10 18:16:47    details: { hour: 15, minute: 0, matchType: 'arabic_period', periodInfo: '下午' }
2025-08-10 18:16:47  }
2025-08-10 18:16:48  🧠 使用對話上下文增強 slots 提取
2025-08-10 18:16:48  📊 規則提取置信度: 0.67
2025-08-10 18:16:48  🤖 啟用 AI 輔助提取...
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
2025-08-10 18:16:49  ✅ 最終 slots: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  {"ts":"2025-08-10T18:16:49.002Z","lvl":"info","stage":"slots","traceId":"line_1754849807670_ycw1x1","userId":"U_test_user_qa","intent":"create_recurring_course","slotsSummary":["studentName","courseName","scheduleTime","recurring"]}
2025-08-10 18:16:49  🎯 執行任務: create_recurring_course
2025-08-10 18:16:49  🎯 開始處理新增課程任務
2025-08-10 18:16:49  📋 接收參數: {
2025-08-10 18:16:49    studentName: 'Lumi',
2025-08-10 18:16:49    courseName: '鋼琴課',
2025-08-10 18:16:49    scheduleTime: '15:00',
2025-08-10 18:16:49    recurring: true
2025-08-10 18:16:49  }
2025-08-10 18:16:49  👤 學生日曆: 4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b@group.calendar.google.com
2025-08-10 18:16:49  ❌ 查詢事件失敗: GaxiosError: Not Found
2025-08-10 18:16:49      at Gaxios._request (/opt/render/project/src/node_modules/googleapis-common/node_modules/gaxios/build/cjs/src/gaxios.js:154:23)
2025-08-10 18:16:49      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-10 18:16:49      at async OAuth2Client.requestAsync (/opt/render/project/src/node_modules/googleapis-common/node_modules/google-auth-library/build/src/auth/oauth2client.js:463:20)
2025-08-10 18:16:49      at async createAPIRequestAsync (/opt/render/project/src/node_modules/googleapis-common/build/src/apirequest.js:308:25)
2025-08-10 18:16:49      at async getEvents (/opt/render/project/src/src/services/googleCalendarService.js:265:22)
2025-08-10 18:16:49      at async Object.checkConflict (/opt/render/project/src/src/services/googleCalendarService.js:292:20)
2025-08-10 18:16:49      at async handle_add_course_task (/opt/render/project/src/src/tasks/handle_add_course_task.js:292:27)
2025-08-10 18:16:49      at async executeTask (/opt/render/project/src/src/tasks/index.js:121:16)
2025-08-10 18:16:49      at async handleTextMessage (/opt/render/project/src/src/bot/webhook.js:92:20)
2025-08-10 18:16:49      at async handleWebhook (/opt/render/project/src/src/bot/webhook.js:438:13) {
2025-08-10 18:16:49    config: {
2025-08-10 18:16:49      url: URL {
2025-08-10 18:16:49        href: 'https://www.googleapis.com/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        origin: 'https://www.googleapis.com',
2025-08-10 18:16:49        protocol: 'https:',
2025-08-10 18:16:49        username: '',
2025-08-10 18:16:49        password: '',
2025-08-10 18:16:49        host: 'www.googleapis.com',
2025-08-10 18:16:49        hostname: 'www.googleapis.com',
2025-08-10 18:16:49        port: '',
2025-08-10 18:16:49        pathname: '/calendar/v3/calendars/4a0f9e74ce6d657504bec55784c18348676fc1f35aa59f71a6cd2b9b5b2f2f4b%40group.calendar.google.com/events',
2025-08-10 18:16:49        search: '?timeMin=2025-08-11T00%3A00%3A00%2B08%3A00&timeMax=2025-08-11T23%3A59%3A59%2B08%3A00&singleEvents=true&orderBy=startTime',
2025-08-10 18:16:49        searchParams: URLSearchParams {
2025-08-10 18:16:49          'timeMin' => '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49          'timeMax' => '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49          'singleEvents' => 'true',
2025-08-10 18:16:49          'orderBy' => 'startTime' },
2025-08-10 18:16:49        hash: ''
2025-08-10 18:16:49      },
2025-08-10 18:16:49      method: 'GET',
2025-08-10 18:16:49      apiVersion: '',
2025-08-10 18:16:49      userAgentDirectives: [ [Object] ],
2025-08-10 18:16:49      paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49      headers: Headers {
2025-08-10 18:16:49        'accept-encoding': 'gzip',
2025-08-10 18:16:49        authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49        'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49        'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      params: {
2025-08-10 18:16:49        timeMin: '2025-08-11T00:00:00+08:00',
2025-08-10 18:16:49        timeMax: '2025-08-11T23:59:59+08:00',
2025-08-10 18:16:49        singleEvents: true,
2025-08-10 18:16:49        orderBy: 'startTime'
2025-08-10 18:16:49      },
2025-08-10 18:16:49      validateStatus: [Function (anonymous)],
2025-08-10 18:16:49      retry: true,
2025-08-10 18:16:49      responseType: 'unknown',
2025-08-10 18:16:49      errorRedactor: [Function: defaultErrorRedactor],
2025-08-10 18:16:49      retryConfig: {
2025-08-10 18:16:49        currentRetryAttempt: 0,
2025-08-10 18:16:49        retry: 3,
2025-08-10 18:16:49        httpMethodsToRetry: [Array],
2025-08-10 18:16:49        noResponseRetries: 2,
2025-08-10 18:16:49        retryDelayMultiplier: 2,
2025-08-10 18:16:49        timeOfFirstRequest: 1754849809396,
2025-08-10 18:16:49        totalTimeout: 9007199254740991,
2025-08-10 18:16:49        maxRetryDelay: 9007199254740991,
2025-08-10 18:16:49        statusCodesToRetry: [Array]
2025-08-10 18:16:49      }
2025-08-10 18:16:49    },
2025-08-10 18:16:49    response: Response {
2025-08-10 18:16:49      size: 0,
2025-08-10 18:16:49      data: { error: [Object] },
2025-08-10 18:16:49      config: {
2025-08-10 18:16:49        url: URL {},
2025-08-10 18:16:49        method: 'GET',
2025-08-10 18:16:49        apiVersion: '',
2025-08-10 18:16:49        userAgentDirectives: [Array],
2025-08-10 18:16:49        paramsSerializer: [Function (anonymous)],
2025-08-10 18:16:49        headers: Headers {
2025-08-10 18:16:49          'accept-encoding': 'gzip',
2025-08-10 18:16:49          authorization: '<<REDACTED> - See `errorRedactor` option in `gaxios` for configuration>.',
2025-08-10 18:16:49          'user-agent': 'google-api-nodejs-client/8.0.0 (gzip)',
2025-08-10 18:16:49          'x-goog-api-client': 'gdcl/8.0.0 gl-node/24.5.0'
2025-08-10 18:16:49        },
2025-08-10 18:16:49        params: [Object],
2025-08-10 18:16:49        validateStatus: [Function (anonymous)],
2025-08-10 18:16:49        retry: true,
2025-08-10 18:16:49        responseType: 'unknown',
2025-08-10 18:16:49        errorRedactor: [Function: defaultErrorRedactor]
2025-08-10 18:16:49      },
2025-08-10 18:16:49      Symbol(Body internals): {
